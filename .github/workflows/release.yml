# Builds and releases a new public version of evitaLab a puts it into `Releases` section of GitHub

name: Release

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.ref_name }}   # for the same branch
  cancel-in-progress: true        # run only one workflow at a time (cancel the previous)

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build
    outputs:
      released_version: ${{ steps.release_version.outputs.version }}
      min_evitadb_version: ${{ steps.min_evitadb_version.outputs.version }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Resolve new release version
        id: release_version
        uses: lukashornych/semantic-calendar-version@v1.1.3
        with:
          prefix: 'v'
          minor-identifier: '/feat(?:\\([^)]+\\))?:/'

      - name: Resolve minimum evitaDB version
        id: min_evitadb_version
        run: echo "version=$(cat .evitadbrc)" >> "$GITHUB_OUTPUT"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.16.1'

      - name: Install dependencies
        run: npm install -g yarn && yarn install --frozen-lockfile

      - name: Test
        run: yarn test

      - name: Build standalone
        env:
          EVITALAB_BUILD_VERSION: ${{ steps.release_version.outputs.version }}
        run: yarn build

      - name: Include license in standalone dist
        run: cp LICENSE ./dist

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist-standalone
          path: dist/

      - name: Cleanup standalone build
        run: rm -rf dist

      - name: Build driver
        env:
          EVITALAB_BUILD_VERSION: ${{ steps.release_version.outputs.version }}
        run: yarn build-driver

      - name: Include license in driver dist
        run: cp LICENSE ./dist

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist-driver
          path: dist/

      - name: Cleanup driver build
        run: rm -rf dist

  release:
    name: Release
    needs: build

    permissions:
      # write permission is required to create a github release
      contents: write

      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - name: Download built evitaLab standalone
        uses: actions/download-artifact@v4
        with:
          name: dist-standalone
          path: ./dist-standalone/

      - name: Download built evitaLab driver
        uses: actions/download-artifact@v4
        with:
          name: dist-driver
          path: ./dist-driver/

      - name: Create .zip of dist standalone
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'dist-standalone.zip'
          path: './dist-standalone'

      - name: Create .zip of dist driver
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'dist-driver.zip'
          path: './dist-driver'

      - name: Create .tar.gz of dist standalone
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'tar'
          filename: 'dist-standalone.tar.gz'
          path: './dist-standalone'

      - name: Create .tar.gz of dist driver
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'tar'
          filename: 'dist-driver.tar.gz'
          path: './dist-driver'

      - name: Create release
        id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          version: ${{ needs.build.outputs.released_version }}
          publish: true

      - name: Upload dist-standalone.zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist-standalone.zip
          asset_name: Dist Standalone (zip)
          asset_content_type: application/zip

      - name: Upload dist-driver.zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist-driver.zip
          asset_name: Dist Driver (zip)
          asset_content_type: application/zip

      - name: Upload dist-standalone.tar.gz to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist-standalone.tar.gz
          asset_name: Dist Standalone (tar.gz)
          asset_content_type: application/gzip

      - name: Upload dist-driver.tar.gz to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist-driver.tar.gz
          asset_name: Dist Driver (tar.gz)
          asset_content_type: application/gzip

  publish-to-metadata-database:
    name: Publish evitaLab released version to metadata database
    needs: [build, release]

    runs-on: ubuntu-latest

    steps:
      - name: Clone evitaLab metadata database repository
        env:
          REPO: "https://x-access-token:${{ secrets.REPO_ACCESS_TOKEN }}@github.com/FgForrest/evitalab-metadata-database.git"
        run: |
          git clone $REPO database
          cd database
          git remote set-url origin $REPO

      - name: Insert new evitaLab version into database
        run: |
          NORMALIZED_LAB_VERSION=$(echo "${{ needs.build.outputs.released_version }}" | cut -c2-)
          echo "$NORMALIZED_LAB_VERSION,${{ needs.build.outputs.min_evitadb_version }}" >> database/evitalab-database.csv

      - name: Commit and push changed to evitaLab metadata database
        run: |
          cd database
          git config user.name "evitaLab Bot"
          git config user.email "lukashornych@proton.me"
          git add .
          git commit -m "evitaLab release ${{ needs.build.outputs.released_version }}"
          git push origin main

  publish-to-evitadb:
    name: Publish evitaLab to evitaDB
    needs: [build, release]

    runs-on: ubuntu-latest

    steps:
      - name: Download built evitaLab
        uses: actions/download-artifact@v4
        with:
          name: dist-standalone
          path: ./dist/

      - name: Clone evitaDB repository
        env:
          REPO: "https://x-access-token:${{ secrets.REPO_ACCESS_TOKEN }}@github.com/FgForrest/evitaDB.git"
        run: |
          git clone $REPO evitaDB
          cd evitaDB
          git remote set-url origin $REPO

      - name: Copy built evitaLab to evitaDB
        env:
          DIST_TARGET: "evitaDB/evita_external_api/evita_external_api_lab/src/main/resources/META-INF/lab/gui/"
        run: |
          rm -r "$DIST_TARGET/dist"
          cp -r ./dist "$DIST_TARGET/"

      - name: Commit and push changes to evitaDB
        env:
          BRANCH_NAME: "update-evitalab-${{ needs.build.outputs.released_version }}"
        run: |
          cd evitaDB
          git config user.name "evitaLab Bot"
          git config user.email "lukashornych@proton.me"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "build: update evitaLab to ${{ needs.build.outputs.released_version }}"
          git push origin $BRANCH_NAME
      - name: Create pull request with new evitaLab
        uses: actions/github-script@v7
        with:
          github-token: '${{ secrets.REPO_ACCESS_TOKEN }}'
          script: |
            const branchName = 'update-evitalab-${{ needs.build.outputs.released_version }}';
            const { data: pullRequest } = await github.rest.pulls.create({
              owner: 'FgForrest',
              repo: 'evitaDB',
              title: 'Update evitaLab to ${{ needs.build.outputs.released_version }}',
              head: branchName,
              base: 'dev',
              body: 'This PR updates embedded evitaLab with new released version.'
            });
            console.log('Pull request created: ', pullRequest.html_url);