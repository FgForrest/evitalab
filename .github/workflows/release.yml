# Builds and releases a new public version of evitaLab a puts it into `Releases` section of GitHub

name: Release

on:
  push:
    branches:
      - dev
    #    tags:
#      - 'v*' # Push events to matching v*, v*.*, v*.*.* tags

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@latest

      - name: Setup Node.js
        uses: actions/setup-node@latest
        with:
          node-version: '18.16.1'

      - name: Install dependencies
        run: npm install -g yarn && yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Zip Dist
        uses: thedoctor0/zip-release@latest
        with:
          type: 'zip'
          filename: 'dist.zip'
          path: './dist'

      - name: Tar Dist
        uses: thedoctor0/zip-release@latest
        with:
          type: 'tar'
          filename: 'dist.tar.gz'
          path: './dist'

      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          draft: true
          automatic_release_tag: "latest"
          title: "Release ${{ github.ref_name }}"
          files: |
            dist.zip
            dist.tar.gz

  build-and-release-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@latest

      - name: Log in to Docker hub
        uses: docker/login-action@latest
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@latest
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@latest
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}