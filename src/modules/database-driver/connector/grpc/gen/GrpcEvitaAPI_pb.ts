// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file GrpcEvitaAPI.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { GrpcCatalogState, GrpcCommitBehavior, GrpcSessionType } from "./GrpcEnums_pb";
import { file_GrpcEnums } from "./GrpcEnums_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { GrpcTopLevelCatalogSchemaMutation } from "./GrpcCatalogSchemaMutation_pb";
import { file_GrpcCatalogSchemaMutation } from "./GrpcCatalogSchemaMutation_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcEvitaAPI.proto.
 */
export const file_GrpcEvitaAPI: GenFile = /*@__PURE__*/
  fileDesc("ChJHcnBjRXZpdGFBUEkucHJvdG8SJWlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQiIgoRR3JwY1JlYWR5UmVzcG9uc2USDQoFcmVhZHkYASABKAgikQEKF0dycGNFdml0YVNlc3Npb25SZXF1ZXN0EhMKC2NhdGFsb2dOYW1lGAEgASgJElEKDmNvbW1pdEJlaGF2aW9yGAIgASgOMjkuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ29tbWl0QmVoYXZpb3ISDgoGZHJ5UnVuGAMgASgIIrACChhHcnBjRXZpdGFTZXNzaW9uUmVzcG9uc2USEQoJc2Vzc2lvbklkGAEgASgJEksKC3Nlc3Npb25UeXBlGAIgASgOMjYuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2Vzc2lvblR5cGUSUgoPY29tbWl0QmVoYXZpb3VyGAMgASgOMjkuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ29tbWl0QmVoYXZpb3ISTQoMY2F0YWxvZ1N0YXRlGAQgASgOMjcuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ2F0YWxvZ1N0YXRlEhEKCWNhdGFsb2dJZBgFIAEoCSI3CiJHcnBjRXZpdGFTZXNzaW9uVGVybWluYXRpb25SZXF1ZXN0EhEKCXNlc3Npb25JZBgCIAEoCSI5CiNHcnBjRXZpdGFTZXNzaW9uVGVybWluYXRpb25SZXNwb25zZRISCgp0ZXJtaW5hdGVkGAEgASgIIjAKGEdycGNDYXRhbG9nTmFtZXNSZXNwb25zZRIUCgxjYXRhbG9nTmFtZXMYASADKAkiMQoaR3JwY0dldENhdGFsb2dTdGF0ZVJlcXVlc3QSEwoLY2F0YWxvZ05hbWUYASABKAkiggEKG0dycGNHZXRDYXRhbG9nU3RhdGVSZXNwb25zZRJSCgxjYXRhbG9nU3RhdGUYASABKA4yNy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNDYXRhbG9nU3RhdGVIAIgBAUIPCg1fY2F0YWxvZ1N0YXRlIi8KGEdycGNEZWZpbmVDYXRhbG9nUmVxdWVzdBITCgtjYXRhbG9nTmFtZRgBIAEoCSIsChlHcnBjRGVmaW5lQ2F0YWxvZ1Jlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiRwoYR3JwY1JlbmFtZUNhdGFsb2dSZXF1ZXN0EhMKC2NhdGFsb2dOYW1lGAEgASgJEhYKDm5ld0NhdGFsb2dOYW1lGAIgASgJIiwKGUdycGNSZW5hbWVDYXRhbG9nUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCCJhChlHcnBjUmVwbGFjZUNhdGFsb2dSZXF1ZXN0EiMKG2NhdGFsb2dOYW1lVG9CZVJlcGxhY2VkV2l0aBgBIAEoCRIfChdjYXRhbG9nTmFtZVRvQmVSZXBsYWNlZBgCIAEoCSItChpHcnBjUmVwbGFjZUNhdGFsb2dSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIjcKIEdycGNEZWxldGVDYXRhbG9nSWZFeGlzdHNSZXF1ZXN0EhMKC2NhdGFsb2dOYW1lGAEgASgJIjQKIUdycGNEZWxldGVDYXRhbG9nSWZFeGlzdHNSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIInsKFkdycGNVcGRhdGVFdml0YVJlcXVlc3QSYQoPc2NoZW1hTXV0YXRpb25zGAEgAygLMkguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVG9wTGV2ZWxDYXRhbG9nU2NoZW1hTXV0YXRpb24y6A4KDEV2aXRhU2VydmljZRJbCgdJc1JlYWR5EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GjguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVhZHlSZXNwb25zZRKYAQoVQ3JlYXRlUmVhZE9ubHlTZXNzaW9uEj4uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFTZXNzaW9uUmVxdWVzdBo/LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0V2aXRhU2Vzc2lvblJlc3BvbnNlEpkBChZDcmVhdGVSZWFkV3JpdGVTZXNzaW9uEj4uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFTZXNzaW9uUmVxdWVzdBo/LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0V2aXRhU2Vzc2lvblJlc3BvbnNlEp4BChtDcmVhdGVCaW5hcnlSZWFkT25seVNlc3Npb24SPi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YVNlc3Npb25SZXF1ZXN0Gj8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFTZXNzaW9uUmVzcG9uc2USnwEKHENyZWF0ZUJpbmFyeVJlYWRXcml0ZVNlc3Npb24SPi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YVNlc3Npb25SZXF1ZXN0Gj8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFTZXNzaW9uUmVzcG9uc2USqQEKEFRlcm1pbmF0ZVNlc3Npb24SSS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YVNlc3Npb25UZXJtaW5hdGlvblJlcXVlc3QaSi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YVNlc3Npb25UZXJtaW5hdGlvblJlc3BvbnNlEmoKD0dldENhdGFsb2dOYW1lcxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRo/LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0NhdGFsb2dOYW1lc1Jlc3BvbnNlEpgBCg9HZXRDYXRhbG9nU3RhdGUSQS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNHZXRDYXRhbG9nU3RhdGVSZXF1ZXN0GkIuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjR2V0Q2F0YWxvZ1N0YXRlUmVzcG9uc2USkgEKDURlZmluZUNhdGFsb2cSPy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNEZWZpbmVDYXRhbG9nUmVxdWVzdBpALmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0RlZmluZUNhdGFsb2dSZXNwb25zZRKqAQoVRGVsZXRlQ2F0YWxvZ0lmRXhpc3RzEkcuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRGVsZXRlQ2F0YWxvZ0lmRXhpc3RzUmVxdWVzdBpILmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0RlbGV0ZUNhdGFsb2dJZkV4aXN0c1Jlc3BvbnNlEl8KBlVwZGF0ZRI9LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1VwZGF0ZUV2aXRhUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRKSAQoNUmVuYW1lQ2F0YWxvZxI/LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1JlbmFtZUNhdGFsb2dSZXF1ZXN0GkAuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVuYW1lQ2F0YWxvZ1Jlc3BvbnNlEpUBCg5SZXBsYWNlQ2F0YWxvZxJALmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1JlcGxhY2VDYXRhbG9nUmVxdWVzdBpBLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1JlcGxhY2VDYXRhbG9nUmVzcG9uc2VC+AEKKWNvbS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkQhFHcnBjRXZpdGFBUElQcm90b1ABogIFSUVFR0eqAiVJby5Fdml0YWRiLkV4dGVybmFsQXBpLkdycGMuR2VuZXJhdGVkygIlSW9cRXZpdGFkYlxFeHRlcm5hbEFwaVxHcnBjXEdlbmVyYXRlZOICMUlvXEV2aXRhZGJcRXh0ZXJuYWxBcGlcR3JwY1xHZW5lcmF0ZWRcR1BCTWV0YWRhdGHqAilJbzo6RXZpdGFkYjo6RXh0ZXJuYWxBcGk6OkdycGM6OkdlbmVyYXRlZGIGcHJvdG8z", [file_google_protobuf_empty, file_GrpcEnums, file_GrpcEvitaDataTypes, file_GrpcCatalogSchemaMutation]);

/**
 * Response to a server status request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcReadyResponse
 */
export type GrpcReadyResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcReadyResponse"> & {
  /**
   * Always true when returned
   *
   * @generated from field: bool ready = 1;
   */
  ready: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcReadyResponse.
 * Use `create(GrpcReadyResponseSchema)` to create a new message.
 */
export const GrpcReadyResponseSchema: GenMessage<GrpcReadyResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 0);

/**
 * Request to create a session inside of a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionRequest
 */
export type GrpcEvitaSessionRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionRequest"> & {
  /**
   * The name of the catalog for which the session is to be created.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * Commit behaviour
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCommitBehavior commitBehavior = 2;
   */
  commitBehavior: GrpcCommitBehavior;

  /**
   * For testing purposes. Flag indicating that all changes by the session should be rollbacked after the session is closed.
   *
   * @generated from field: bool dryRun = 3;
   */
  dryRun: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionRequest.
 * Use `create(GrpcEvitaSessionRequestSchema)` to create a new message.
 */
export const GrpcEvitaSessionRequestSchema: GenMessage<GrpcEvitaSessionRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 1);

/**
 * Response to a session creation request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionResponse
 */
export type GrpcEvitaSessionResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionResponse"> & {
  /**
   * UUID of the created session.
   *
   * @generated from field: string sessionId = 1;
   */
  sessionId: string;

  /**
   * Type of the created session.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSessionType sessionType = 2;
   */
  sessionType: GrpcSessionType;

  /**
   * Commit behaviour
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCommitBehavior commitBehaviour = 3;
   */
  commitBehaviour: GrpcCommitBehavior;

  /**
   * State of the catalog after the session was created.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCatalogState catalogState = 4;
   */
  catalogState: GrpcCatalogState;

  /**
   * UUID of the catalog the session is bound to.
   *
   * @generated from field: string catalogId = 5;
   */
  catalogId: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionResponse.
 * Use `create(GrpcEvitaSessionResponseSchema)` to create a new message.
 */
export const GrpcEvitaSessionResponseSchema: GenMessage<GrpcEvitaSessionResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 2);

/**
 * Request to terminate a session.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionTerminationRequest
 */
export type GrpcEvitaSessionTerminationRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionTerminationRequest"> & {
  /**
   * UUID of the session to be terminated.
   *
   * @generated from field: string sessionId = 2;
   */
  sessionId: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionTerminationRequest.
 * Use `create(GrpcEvitaSessionTerminationRequestSchema)` to create a new message.
 */
export const GrpcEvitaSessionTerminationRequestSchema: GenMessage<GrpcEvitaSessionTerminationRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 3);

/**
 * Response to a session termination request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionTerminationResponse
 */
export type GrpcEvitaSessionTerminationResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionTerminationResponse"> & {
  /**
   * Indicator whether the session was terminated successfully.
   *
   * @generated from field: bool terminated = 1;
   */
  terminated: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEvitaSessionTerminationResponse.
 * Use `create(GrpcEvitaSessionTerminationResponseSchema)` to create a new message.
 */
export const GrpcEvitaSessionTerminationResponseSchema: GenMessage<GrpcEvitaSessionTerminationResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 4);

/**
 * Response to a catalog names request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCatalogNamesResponse
 */
export type GrpcCatalogNamesResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcCatalogNamesResponse"> & {
  /**
   * Names of all existing catalogs.
   *
   * @generated from field: repeated string catalogNames = 1;
   */
  catalogNames: string[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCatalogNamesResponse.
 * Use `create(GrpcCatalogNamesResponseSchema)` to create a new message.
 */
export const GrpcCatalogNamesResponseSchema: GenMessage<GrpcCatalogNamesResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 5);

/**
 * Request to a get catalog state request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcGetCatalogStateRequest
 */
export type GrpcGetCatalogStateRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcGetCatalogStateRequest"> & {
  /**
   * Name of the catalog to be checked for state.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcGetCatalogStateRequest.
 * Use `create(GrpcGetCatalogStateRequestSchema)` to create a new message.
 */
export const GrpcGetCatalogStateRequestSchema: GenMessage<GrpcGetCatalogStateRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 6);

/**
 * Response to a get catalog state request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcGetCatalogStateResponse
 */
export type GrpcGetCatalogStateResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcGetCatalogStateResponse"> & {
  /**
   * State of the catalog.
   *
   * @generated from field: optional io.evitadb.externalApi.grpc.generated.GrpcCatalogState catalogState = 1;
   */
  catalogState?: GrpcCatalogState;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcGetCatalogStateResponse.
 * Use `create(GrpcGetCatalogStateResponseSchema)` to create a new message.
 */
export const GrpcGetCatalogStateResponseSchema: GenMessage<GrpcGetCatalogStateResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 7);

/**
 * Request to define a new catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDefineCatalogRequest
 */
export type GrpcDefineCatalogRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcDefineCatalogRequest"> & {
  /**
   * Name of the catalog to be defined.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDefineCatalogRequest.
 * Use `create(GrpcDefineCatalogRequestSchema)` to create a new message.
 */
export const GrpcDefineCatalogRequestSchema: GenMessage<GrpcDefineCatalogRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 8);

/**
 * Response to a catalog definition request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDefineCatalogResponse
 */
export type GrpcDefineCatalogResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDefineCatalogResponse"> & {
  /**
   * Indicator whether the catalog was defined successfully.
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDefineCatalogResponse.
 * Use `create(GrpcDefineCatalogResponseSchema)` to create a new message.
 */
export const GrpcDefineCatalogResponseSchema: GenMessage<GrpcDefineCatalogResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 9);

/**
 * Request to rename a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRenameCatalogRequest
 */
export type GrpcRenameCatalogRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcRenameCatalogRequest"> & {
  /**
   * Name of the catalog to be renamed.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * New name of the catalog.
   *
   * @generated from field: string newCatalogName = 2;
   */
  newCatalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRenameCatalogRequest.
 * Use `create(GrpcRenameCatalogRequestSchema)` to create a new message.
 */
export const GrpcRenameCatalogRequestSchema: GenMessage<GrpcRenameCatalogRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 10);

/**
 * Response to a catalog rename request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRenameCatalogResponse
 */
export type GrpcRenameCatalogResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcRenameCatalogResponse"> & {
  /**
   * Indicator whether the catalog was renamed successfully.
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRenameCatalogResponse.
 * Use `create(GrpcRenameCatalogResponseSchema)` to create a new message.
 */
export const GrpcRenameCatalogResponseSchema: GenMessage<GrpcRenameCatalogResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 11);

/**
 * Request to replace a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcReplaceCatalogRequest
 */
export type GrpcReplaceCatalogRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcReplaceCatalogRequest"> & {
  /**
   * Name of the catalog that will become the successor of the original catalog (old name)
   *
   * @generated from field: string catalogNameToBeReplacedWith = 1;
   */
  catalogNameToBeReplacedWith: string;

  /**
   * Name of the catalog that will be replaced and dropped (new name)
   *
   * @generated from field: string catalogNameToBeReplaced = 2;
   */
  catalogNameToBeReplaced: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcReplaceCatalogRequest.
 * Use `create(GrpcReplaceCatalogRequestSchema)` to create a new message.
 */
export const GrpcReplaceCatalogRequestSchema: GenMessage<GrpcReplaceCatalogRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 12);

/**
 * Response to a catalog replace request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcReplaceCatalogResponse
 */
export type GrpcReplaceCatalogResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcReplaceCatalogResponse"> & {
  /**
   * Indicator whether the catalog was replaced successfully.
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcReplaceCatalogResponse.
 * Use `create(GrpcReplaceCatalogResponseSchema)` to create a new message.
 */
export const GrpcReplaceCatalogResponseSchema: GenMessage<GrpcReplaceCatalogResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 13);

/**
 * Request to delete a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteCatalogIfExistsRequest
 */
export type GrpcDeleteCatalogIfExistsRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteCatalogIfExistsRequest"> & {
  /**
   * Name of the catalog to be deleted.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteCatalogIfExistsRequest.
 * Use `create(GrpcDeleteCatalogIfExistsRequestSchema)` to create a new message.
 */
export const GrpcDeleteCatalogIfExistsRequestSchema: GenMessage<GrpcDeleteCatalogIfExistsRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 14);

/**
 * Response to a catalog deletion request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteCatalogIfExistsResponse
 */
export type GrpcDeleteCatalogIfExistsResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteCatalogIfExistsResponse"> & {
  /**
   * Indicator whether the catalog was deleted successfully.
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteCatalogIfExistsResponse.
 * Use `create(GrpcDeleteCatalogIfExistsResponseSchema)` to create a new message.
 */
export const GrpcDeleteCatalogIfExistsResponseSchema: GenMessage<GrpcDeleteCatalogIfExistsResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 15);

/**
 * Request to update the catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpdateEvitaRequest
 */
export type GrpcUpdateEvitaRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpdateEvitaRequest"> & {
  /**
   * Collection of top level catalog schema mutations to be applied.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation schemaMutations = 1;
   */
  schemaMutations: GrpcTopLevelCatalogSchemaMutation[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpdateEvitaRequest.
 * Use `create(GrpcUpdateEvitaRequestSchema)` to create a new message.
 */
export const GrpcUpdateEvitaRequestSchema: GenMessage<GrpcUpdateEvitaRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaAPI, 16);

/**
 * This service contains RPCs that could be called by gRPC clients on evitaDB. Main purpose of this service is to provide
 * a way to create sessions and catalogs, and to update the catalog.
 *
 * @generated from service io.evitadb.externalApi.grpc.generated.EvitaService
 */
export const EvitaService: GenService<{
  /**
   * Procedure used to check readiness of the API
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.IsReady
   */
  isReady: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcReadyResponseSchema;
  },
  /**
   * Procedure used to create read only sessions.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.CreateReadOnlySession
   */
  createReadOnlySession: {
    methodKind: "unary";
    input: typeof GrpcEvitaSessionRequestSchema;
    output: typeof GrpcEvitaSessionResponseSchema;
  },
  /**
   * Procedure used to create read write sessions.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.CreateReadWriteSession
   */
  createReadWriteSession: {
    methodKind: "unary";
    input: typeof GrpcEvitaSessionRequestSchema;
    output: typeof GrpcEvitaSessionResponseSchema;
  },
  /**
   * Procedure used to create read-only session which will return data in binary format. Part of the Private API.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.CreateBinaryReadOnlySession
   */
  createBinaryReadOnlySession: {
    methodKind: "unary";
    input: typeof GrpcEvitaSessionRequestSchema;
    output: typeof GrpcEvitaSessionResponseSchema;
  },
  /**
   * Procedure used to create read-write session which will return data in binary format. Part of the Private API.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.CreateBinaryReadWriteSession
   */
  createBinaryReadWriteSession: {
    methodKind: "unary";
    input: typeof GrpcEvitaSessionRequestSchema;
    output: typeof GrpcEvitaSessionResponseSchema;
  },
  /**
   * Procedure used to terminate existing session.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.TerminateSession
   */
  terminateSession: {
    methodKind: "unary";
    input: typeof GrpcEvitaSessionTerminationRequestSchema;
    output: typeof GrpcEvitaSessionTerminationResponseSchema;
  },
  /**
   * Procedure used to get names of all existing catalogs.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.GetCatalogNames
   */
  getCatalogNames: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcCatalogNamesResponseSchema;
  },
  /**
   * Procedure used to get state of the catalog by its name.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.GetCatalogState
   */
  getCatalogState: {
    methodKind: "unary";
    input: typeof GrpcGetCatalogStateRequestSchema;
    output: typeof GrpcGetCatalogStateResponseSchema;
  },
  /**
   * Procedure used to define a new catalog.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.DefineCatalog
   */
  defineCatalog: {
    methodKind: "unary";
    input: typeof GrpcDefineCatalogRequestSchema;
    output: typeof GrpcDefineCatalogResponseSchema;
  },
  /**
   * Procedure used to delete an existing catalog.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.DeleteCatalogIfExists
   */
  deleteCatalogIfExists: {
    methodKind: "unary";
    input: typeof GrpcDeleteCatalogIfExistsRequestSchema;
    output: typeof GrpcDeleteCatalogIfExistsResponseSchema;
  },
  /**
   * Procedure used to update the catalog with a set of mutations.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.Update
   */
  update: {
    methodKind: "unary";
    input: typeof GrpcUpdateEvitaRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Procedure used to rename an existing catalog.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.RenameCatalog
   */
  renameCatalog: {
    methodKind: "unary";
    input: typeof GrpcRenameCatalogRequestSchema;
    output: typeof GrpcRenameCatalogResponseSchema;
  },
  /**
   * Procedure used to replace an existing catalog.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaService.ReplaceCatalog
   */
  replaceCatalog: {
    methodKind: "unary";
    input: typeof GrpcReplaceCatalogRequestSchema;
    output: typeof GrpcReplaceCatalogResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_GrpcEvitaAPI, 0);

