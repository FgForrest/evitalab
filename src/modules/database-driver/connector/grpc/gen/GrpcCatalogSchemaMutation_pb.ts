// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file GrpcCatalogSchemaMutation.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { GrpcCreateGlobalAttributeSchemaMutation, GrpcModifyAttributeSchemaDefaultValueMutation, GrpcModifyAttributeSchemaDeprecationNoticeMutation, GrpcModifyAttributeSchemaDescriptionMutation, GrpcModifyAttributeSchemaNameMutation, GrpcModifyAttributeSchemaTypeMutation, GrpcRemoveAttributeSchemaMutation, GrpcSetAttributeSchemaFilterableMutation, GrpcSetAttributeSchemaGloballyUniqueMutation, GrpcSetAttributeSchemaLocalizedMutation, GrpcSetAttributeSchemaNullableMutation, GrpcSetAttributeSchemaRepresentativeMutation, GrpcSetAttributeSchemaSortableMutation, GrpcSetAttributeSchemaUniqueMutation } from "./GrpcAttributeSchemaMutations_pb";
import { file_GrpcAttributeSchemaMutations } from "./GrpcAttributeSchemaMutations_pb";
import type { GrpcAllowEvolutionModeInCatalogSchemaMutation, GrpcCreateCatalogSchemaMutation, GrpcCreateEntitySchemaMutation, GrpcDisallowEvolutionModeInCatalogSchemaMutation, GrpcModifyCatalogSchemaDescriptionMutation, GrpcModifyCatalogSchemaNameMutation, GrpcModifyEntitySchemaMutation, GrpcModifyEntitySchemaNameMutation, GrpcRemoveCatalogSchemaMutation, GrpcRemoveEntitySchemaMutation } from "./GrpcCatalogSchemaMutations_pb";
import { file_GrpcCatalogSchemaMutations } from "./GrpcCatalogSchemaMutations_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcCatalogSchemaMutation.proto.
 */
export const file_GrpcCatalogSchemaMutation: GenFile = /*@__PURE__*/
  fileDesc("Ch9HcnBjQ2F0YWxvZ1NjaGVtYU11dGF0aW9uLnByb3RvEiVpby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkIqcVCh5HcnBjTG9jYWxDYXRhbG9nU2NoZW1hTXV0YXRpb24SgwEKJm1vZGlmeUNhdGFsb2dTY2hlbWFEZXNjcmlwdGlvbk11dGF0aW9uGAEgASgLMlEuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTW9kaWZ5Q2F0YWxvZ1NjaGVtYURlc2NyaXB0aW9uTXV0YXRpb25IABKJAQopYWxsb3dFdm9sdXRpb25Nb2RlSW5DYXRhbG9nU2NoZW1hTXV0YXRpb24YAiABKAsyVC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNBbGxvd0V2b2x1dGlvbk1vZGVJbkNhdGFsb2dTY2hlbWFNdXRhdGlvbkgAEo8BCixkaXNhbGxvd0V2b2x1dGlvbk1vZGVJbkNhdGFsb2dTY2hlbWFNdXRhdGlvbhgDIAEoCzJXLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0Rpc2FsbG93RXZvbHV0aW9uTW9kZUluQ2F0YWxvZ1NjaGVtYU11dGF0aW9uSAASfQojY3JlYXRlR2xvYmFsQXR0cmlidXRlU2NoZW1hTXV0YXRpb24YBCABKAsyTi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNDcmVhdGVHbG9iYWxBdHRyaWJ1dGVTY2hlbWFNdXRhdGlvbkgAEokBCiltb2RpZnlBdHRyaWJ1dGVTY2hlbWFEZWZhdWx0VmFsdWVNdXRhdGlvbhgFIAEoCzJULmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY01vZGlmeUF0dHJpYnV0ZVNjaGVtYURlZmF1bHRWYWx1ZU11dGF0aW9uSAASkwEKLm1vZGlmeUF0dHJpYnV0ZVNjaGVtYURlcHJlY2F0aW9uTm90aWNlTXV0YXRpb24YBiABKAsyWS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNNb2RpZnlBdHRyaWJ1dGVTY2hlbWFEZXByZWNhdGlvbk5vdGljZU11dGF0aW9uSAAShwEKKG1vZGlmeUF0dHJpYnV0ZVNjaGVtYURlc2NyaXB0aW9uTXV0YXRpb24YByABKAsyUy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNNb2RpZnlBdHRyaWJ1dGVTY2hlbWFEZXNjcmlwdGlvbk11dGF0aW9uSAASeQohbW9kaWZ5QXR0cmlidXRlU2NoZW1hTmFtZU11dGF0aW9uGAggASgLMkwuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTW9kaWZ5QXR0cmlidXRlU2NoZW1hTmFtZU11dGF0aW9uSAASeQohbW9kaWZ5QXR0cmlidXRlU2NoZW1hVHlwZU11dGF0aW9uGAkgASgLMkwuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTW9kaWZ5QXR0cmlidXRlU2NoZW1hVHlwZU11dGF0aW9uSAAScQodcmVtb3ZlQXR0cmlidXRlU2NoZW1hTXV0YXRpb24YCiABKAsySC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNSZW1vdmVBdHRyaWJ1dGVTY2hlbWFNdXRhdGlvbkgAEn8KJHNldEF0dHJpYnV0ZVNjaGVtYUZpbHRlcmFibGVNdXRhdGlvbhgLIAEoCzJPLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1NldEF0dHJpYnV0ZVNjaGVtYUZpbHRlcmFibGVNdXRhdGlvbkgAEn0KI3NldEF0dHJpYnV0ZVNjaGVtYUxvY2FsaXplZE11dGF0aW9uGAwgASgLMk4uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0QXR0cmlidXRlU2NoZW1hTG9jYWxpemVkTXV0YXRpb25IABJ7CiJzZXRBdHRyaWJ1dGVTY2hlbWFOdWxsYWJsZU11dGF0aW9uGA0gASgLMk0uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0QXR0cmlidXRlU2NoZW1hTnVsbGFibGVNdXRhdGlvbkgAEocBCihzZXRBdHRyaWJ1dGVTY2hlbWFSZXByZXNlbnRhdGl2ZU11dGF0aW9uGA4gASgLMlMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0QXR0cmlidXRlU2NoZW1hUmVwcmVzZW50YXRpdmVNdXRhdGlvbkgAEnsKInNldEF0dHJpYnV0ZVNjaGVtYVNvcnRhYmxlTXV0YXRpb24YDyABKAsyTS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNTZXRBdHRyaWJ1dGVTY2hlbWFTb3J0YWJsZU11dGF0aW9uSAASdwogc2V0QXR0cmlidXRlU2NoZW1hVW5pcXVlTXV0YXRpb24YECABKAsySy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNTZXRBdHRyaWJ1dGVTY2hlbWFVbmlxdWVNdXRhdGlvbkgAEocBCihzZXRBdHRyaWJ1dGVTY2hlbWFHbG9iYWxseVVuaXF1ZU11dGF0aW9uGBEgASgLMlMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0QXR0cmlidXRlU2NoZW1hR2xvYmFsbHlVbmlxdWVNdXRhdGlvbkgAEmsKGmNyZWF0ZUVudGl0eVNjaGVtYU11dGF0aW9uGB4gASgLMkUuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ3JlYXRlRW50aXR5U2NoZW1hTXV0YXRpb25IABJrChptb2RpZnlFbnRpdHlTY2hlbWFNdXRhdGlvbhgfIAEoCzJFLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY01vZGlmeUVudGl0eVNjaGVtYU11dGF0aW9uSAAScwoebW9kaWZ5RW50aXR5U2NoZW1hTmFtZU11dGF0aW9uGCAgASgLMkkuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTW9kaWZ5RW50aXR5U2NoZW1hTmFtZU11dGF0aW9uSAASawoacmVtb3ZlRW50aXR5U2NoZW1hTXV0YXRpb24YISABKAsyRS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNSZW1vdmVFbnRpdHlTY2hlbWFNdXRhdGlvbkgAQgoKCG11dGF0aW9uIoQDCiFHcnBjVG9wTGV2ZWxDYXRhbG9nU2NoZW1hTXV0YXRpb24SbQobY3JlYXRlQ2F0YWxvZ1NjaGVtYU11dGF0aW9uGAEgASgLMkYuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ3JlYXRlQ2F0YWxvZ1NjaGVtYU11dGF0aW9uSAASdQofbW9kaWZ5Q2F0YWxvZ1NjaGVtYU5hbWVNdXRhdGlvbhgCIAEoCzJKLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY01vZGlmeUNhdGFsb2dTY2hlbWFOYW1lTXV0YXRpb25IABJtChtyZW1vdmVDYXRhbG9nU2NoZW1hTXV0YXRpb24YAyABKAsyRi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNSZW1vdmVDYXRhbG9nU2NoZW1hTXV0YXRpb25IAEIKCghtdXRhdGlvbkIMUAGqAgdFdml0YURCYgZwcm90bzM", [file_GrpcAttributeSchemaMutations, file_GrpcCatalogSchemaMutations]);

/**
 * Contains all possible catalog schema mutations.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation
 */
export type GrpcLocalCatalogSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation"> & {
  /**
   * The used local catalog mutation.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation.mutation
   */
  mutation: {
    /**
     * Mutation is responsible for setting value to a `CatalogSchema.description` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaDescriptionMutation modifyCatalogSchemaDescriptionMutation = 1;
     */
    value: GrpcModifyCatalogSchemaDescriptionMutation;
    case: "modifyCatalogSchemaDescriptionMutation";
  } | {
    /**
     * Mutation is responsible for adding one or more modes to a `CatalogSchema.catalogEvolutionMode` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAllowEvolutionModeInCatalogSchemaMutation allowEvolutionModeInCatalogSchemaMutation = 2;
     */
    value: GrpcAllowEvolutionModeInCatalogSchemaMutation;
    case: "allowEvolutionModeInCatalogSchemaMutation";
  } | {
    /**
     * Mutation is responsible for removing one or more modes from a `CatalogSchema.evolutionMode` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcDisallowEvolutionModeInCatalogSchemaMutation disallowEvolutionModeInCatalogSchemaMutation = 3;
     */
    value: GrpcDisallowEvolutionModeInCatalogSchemaMutation;
    case: "disallowEvolutionModeInCatalogSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting up a new `GlobalAttributeSchema` in the `CatalogSchema`.
     * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateGlobalAttributeSchemaMutation createGlobalAttributeSchemaMutation = 4;
     */
    value: GrpcCreateGlobalAttributeSchemaMutation;
    case: "createGlobalAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.defaultValue` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation modifyAttributeSchemaDefaultValueMutation = 5;
     */
    value: GrpcModifyAttributeSchemaDefaultValueMutation;
    case: "modifyAttributeSchemaDefaultValueMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.defaultValue` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation modifyAttributeSchemaDeprecationNoticeMutation = 6;
     */
    value: GrpcModifyAttributeSchemaDeprecationNoticeMutation;
    case: "modifyAttributeSchemaDeprecationNoticeMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.description` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation modifyAttributeSchemaDescriptionMutation = 7;
     */
    value: GrpcModifyAttributeSchemaDescriptionMutation;
    case: "modifyAttributeSchemaDescriptionMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing `AttributeSchema` in `EntitySchema` or `GlobalAttributeSchema`
     * in `CatalogSchema`. Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation modifyAttributeSchemaNameMutation = 8;
     */
    value: GrpcModifyAttributeSchemaNameMutation;
    case: "modifyAttributeSchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.type` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation modifyAttributeSchemaTypeMutation = 9;
     */
    value: GrpcModifyAttributeSchemaTypeMutation;
    case: "modifyAttributeSchemaTypeMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing `AttributeSchema` in the `EntitySchema` or `GlobalAttributeSchema`
     * in the `CatalogSchema`. Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation removeAttributeSchemaMutation = 10;
     */
    value: GrpcRemoveAttributeSchemaMutation;
    case: "removeAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.filterable` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation setAttributeSchemaFilterableMutation = 11;
     */
    value: GrpcSetAttributeSchemaFilterableMutation;
    case: "setAttributeSchemaFilterableMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.localized`in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or`GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation setAttributeSchemaLocalizedMutation = 12;
     */
    value: GrpcSetAttributeSchemaLocalizedMutation;
    case: "setAttributeSchemaLocalizedMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.nullable` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation setAttributeSchemaNullableMutation = 13;
     */
    value: GrpcSetAttributeSchemaNullableMutation;
    case: "setAttributeSchemaNullableMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.representative` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation setAttributeSchemaRepresentativeMutation = 14;
     */
    value: GrpcSetAttributeSchemaRepresentativeMutation;
    case: "setAttributeSchemaRepresentativeMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.sortable` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation setAttributeSchemaSortableMutation = 15;
     */
    value: GrpcSetAttributeSchemaSortableMutation;
    case: "setAttributeSchemaSortableMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.unique` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation setAttributeSchemaUniqueMutation = 16;
     */
    value: GrpcSetAttributeSchemaUniqueMutation;
    case: "setAttributeSchemaUniqueMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `GlobalAttributeSchema.uniqueGlobally` in `EntitySchema`.
     * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaGloballyUniqueMutation setAttributeSchemaGloballyUniqueMutation = 17;
     */
    value: GrpcSetAttributeSchemaGloballyUniqueMutation;
    case: "setAttributeSchemaGloballyUniqueMutation";
  } | {
    /**
     * Mutation is responsible for setting up a new `EntitySchema` - or more precisely the collection within catalog.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateEntitySchemaMutation createEntitySchemaMutation = 30;
     */
    value: GrpcCreateEntitySchemaMutation;
    case: "createEntitySchemaMutation";
  } | {
    /**
     * Mutation is a holder for a set of `EntitySchemaMutation` that affect a single entity schema within the `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaMutation modifyEntitySchemaMutation = 31;
     */
    value: GrpcModifyEntitySchemaMutation;
    case: "modifyEntitySchemaMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaNameMutation modifyEntitySchemaNameMutation = 32;
     */
    value: GrpcModifyEntitySchemaNameMutation;
    case: "modifyEntitySchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing `EntitySchema` - or more precisely the entity collection instance itself.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveEntitySchemaMutation removeEntitySchemaMutation = 33;
     */
    value: GrpcRemoveEntitySchemaMutation;
    case: "removeEntitySchemaMutation";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation.
 * Use `create(GrpcLocalCatalogSchemaMutationSchema)` to create a new message.
 */
export const GrpcLocalCatalogSchemaMutationSchema: GenMessage<GrpcLocalCatalogSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcCatalogSchemaMutation, 0);

/**
 * This structure encapsulates all mutations that needs to be executed on entire evitaDB level and not locally to
 * single catalog schema instance.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation
 */
export type GrpcTopLevelCatalogSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation"> & {
  /**
   * The top level catalog mutation to be executed.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation.mutation
   */
  mutation: {
    /**
     * Mutation is responsible for setting up a new CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateCatalogSchemaMutation createCatalogSchemaMutation = 1;
     */
    value: GrpcCreateCatalogSchemaMutation;
    case: "createCatalogSchemaMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaNameMutation modifyCatalogSchemaNameMutation = 2;
     */
    value: GrpcModifyCatalogSchemaNameMutation;
    case: "modifyCatalogSchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveCatalogSchemaMutation removeCatalogSchemaMutation = 3;
     */
    value: GrpcRemoveCatalogSchemaMutation;
    case: "removeCatalogSchemaMutation";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation.
 * Use `create(GrpcTopLevelCatalogSchemaMutationSchema)` to create a new message.
 */
export const GrpcTopLevelCatalogSchemaMutationSchema: GenMessage<GrpcTopLevelCatalogSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcCatalogSchemaMutation, 1);

