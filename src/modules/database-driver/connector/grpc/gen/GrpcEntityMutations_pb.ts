// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file GrpcEntityMutations.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { GrpcEntityScope } from "./GrpcEnums_pb.js";

/**
 * This mutation allows to set `parent` in the `entity`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetParentMutation
 */
export class GrpcSetParentMutation extends Message<GrpcSetParentMutation> {
  /**
   * Optional new primary key of parent entity. If null, this entity is at the root of hierarchy.
   *
   * @generated from field: int32 primaryKey = 1;
   */
  primaryKey = 0;

  constructor(data?: PartialMessage<GrpcSetParentMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetParentMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "primaryKey", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetParentMutation {
    return new GrpcSetParentMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetParentMutation {
    return new GrpcSetParentMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetParentMutation {
    return new GrpcSetParentMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetParentMutation | PlainMessage<GrpcSetParentMutation> | undefined, b: GrpcSetParentMutation | PlainMessage<GrpcSetParentMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetParentMutation, a, b);
  }
}

/**
 * This mutation allows to remove `parent` from the `entity`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRemoveParentMutation
 */
export class GrpcRemoveParentMutation extends Message<GrpcRemoveParentMutation> {
  constructor(data?: PartialMessage<GrpcRemoveParentMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcRemoveParentMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcRemoveParentMutation {
    return new GrpcRemoveParentMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcRemoveParentMutation {
    return new GrpcRemoveParentMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcRemoveParentMutation {
    return new GrpcRemoveParentMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcRemoveParentMutation | PlainMessage<GrpcRemoveParentMutation> | undefined, b: GrpcRemoveParentMutation | PlainMessage<GrpcRemoveParentMutation> | undefined): boolean {
    return proto3.util.equals(GrpcRemoveParentMutation, a, b);
  }
}

/**
 * This mutation allows to set scope of the entity to ARCHIVED or LIVE state.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetEntityScopeMutation
 */
export class GrpcSetEntityScopeMutation extends Message<GrpcSetEntityScopeMutation> {
  /**
   * The new scope of the entity.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityScope scope = 1;
   */
  scope = GrpcEntityScope.SCOPE_LIVE;

  constructor(data?: PartialMessage<GrpcSetEntityScopeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetEntityScopeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "scope", kind: "enum", T: proto3.getEnumType(GrpcEntityScope) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetEntityScopeMutation {
    return new GrpcSetEntityScopeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetEntityScopeMutation {
    return new GrpcSetEntityScopeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetEntityScopeMutation {
    return new GrpcSetEntityScopeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetEntityScopeMutation | PlainMessage<GrpcSetEntityScopeMutation> | undefined, b: GrpcSetEntityScopeMutation | PlainMessage<GrpcSetEntityScopeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetEntityScopeMutation, a, b);
  }
}

