// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file GrpcAttributeSchemaMutations.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { GrpcEvitaValue, GrpcScopedAttributeUniquenessType, GrpcScopedGlobalAttributeUniquenessType } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { GrpcAttributeUniquenessType, GrpcEntityScope, GrpcEvitaDataType, GrpcGlobalAttributeUniquenessType } from "./GrpcEnums_pb";
import { file_GrpcEnums } from "./GrpcEnums_pb";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcAttributeSchemaMutations.proto.
 */
export const file_GrpcAttributeSchemaMutations: GenFile = /*@__PURE__*/
  fileDesc("CiJHcnBjQXR0cmlidXRlU2NoZW1hTXV0YXRpb25zLnByb3RvEiVpby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkIpsGCiFHcnBjQ3JlYXRlQXR0cmlidXRlU2NoZW1hTXV0YXRpb24SDAoEbmFtZRgBIAEoCRIxCgtkZXNjcmlwdGlvbhgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI3ChFkZXByZWNhdGlvbk5vdGljZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJWCgZ1bmlxdWUYBCABKA4yQi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNBdHRyaWJ1dGVVbmlxdWVuZXNzVHlwZUICGAESFgoKZmlsdGVyYWJsZRgFIAEoCEICGAESFAoIc29ydGFibGUYBiABKAhCAhgBEhEKCWxvY2FsaXplZBgHIAEoCBIQCghudWxsYWJsZRgIIAEoCBIWCg5yZXByZXNlbnRhdGl2ZRgJIAEoCBJGCgR0eXBlGAogASgOMjguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFEYXRhVHlwZRIcChRpbmRleGVkRGVjaW1hbFBsYWNlcxgLIAEoBRJLCgxkZWZhdWx0VmFsdWUYDCABKAsyNS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YVZhbHVlEmAKDnVuaXF1ZUluU2NvcGVzGA0gAygLMkguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2NvcGVkQXR0cmlidXRlVW5pcXVlbmVzc1R5cGUSUgoSZmlsdGVyYWJsZUluU2NvcGVzGA4gAygOMjYuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRW50aXR5U2NvcGUSUAoQc29ydGFibGVJblNjb3BlcxgPIAMoDjI2LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0VudGl0eVNjb3BlIvcHCidHcnBjQ3JlYXRlR2xvYmFsQXR0cmlidXRlU2NoZW1hTXV0YXRpb24SDAoEbmFtZRgBIAEoCRIxCgtkZXNjcmlwdGlvbhgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI3ChFkZXByZWNhdGlvbk5vdGljZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJWCgZ1bmlxdWUYBCABKA4yQi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNBdHRyaWJ1dGVVbmlxdWVuZXNzVHlwZUICGAESZAoOdW5pcXVlR2xvYmFsbHkYBSABKA4ySC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNHbG9iYWxBdHRyaWJ1dGVVbmlxdWVuZXNzVHlwZUICGAESFgoKZmlsdGVyYWJsZRgGIAEoCEICGAESFAoIc29ydGFibGUYByABKAhCAhgBEhEKCWxvY2FsaXplZBgIIAEoCBIQCghudWxsYWJsZRgJIAEoCBIWCg5yZXByZXNlbnRhdGl2ZRgKIAEoCBJGCgR0eXBlGAsgASgOMjguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFEYXRhVHlwZRIcChRpbmRleGVkRGVjaW1hbFBsYWNlcxgMIAEoBRJLCgxkZWZhdWx0VmFsdWUYDSABKAsyNS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YVZhbHVlEmAKDnVuaXF1ZUluU2NvcGVzGA4gAygLMkguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2NvcGVkQXR0cmlidXRlVW5pcXVlbmVzc1R5cGUSbgoWdW5pcXVlR2xvYmFsbHlJblNjb3BlcxgPIAMoCzJOLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1Njb3BlZEdsb2JhbEF0dHJpYnV0ZVVuaXF1ZW5lc3NUeXBlElIKEmZpbHRlcmFibGVJblNjb3BlcxgQIAMoDjI2LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0VudGl0eVNjb3BlElAKEHNvcnRhYmxlSW5TY29wZXMYESADKA4yNi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFbnRpdHlTY29wZSKKAQotR3JwY01vZGlmeUF0dHJpYnV0ZVNjaGVtYURlZmF1bHRWYWx1ZU11dGF0aW9uEgwKBG5hbWUYASABKAkSSwoMZGVmYXVsdFZhbHVlGAIgASgLMjUuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFWYWx1ZSJ7CjJHcnBjTW9kaWZ5QXR0cmlidXRlU2NoZW1hRGVwcmVjYXRpb25Ob3RpY2VNdXRhdGlvbhIMCgRuYW1lGAEgASgJEjcKEWRlcHJlY2F0aW9uTm90aWNlGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIm8KLEdycGNNb2RpZnlBdHRyaWJ1dGVTY2hlbWFEZXNjcmlwdGlvbk11dGF0aW9uEgwKBG5hbWUYASABKAkSMQoLZGVzY3JpcHRpb24YAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUiRgolR3JwY01vZGlmeUF0dHJpYnV0ZVNjaGVtYU5hbWVNdXRhdGlvbhIMCgRuYW1lGAEgASgJEg8KB25ld05hbWUYAiABKAkimwEKJUdycGNNb2RpZnlBdHRyaWJ1dGVTY2hlbWFUeXBlTXV0YXRpb24SDAoEbmFtZRgBIAEoCRJGCgR0eXBlGAIgASgOMjguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFEYXRhVHlwZRIcChRpbmRleGVkRGVjaW1hbFBsYWNlcxgDIAEoBSIxCiFHcnBjUmVtb3ZlQXR0cmlidXRlU2NoZW1hTXV0YXRpb24SDAoEbmFtZRgBIAEoCSKkAQooR3JwY1NldEF0dHJpYnV0ZVNjaGVtYUZpbHRlcmFibGVNdXRhdGlvbhIMCgRuYW1lGAEgASgJEhYKCmZpbHRlcmFibGUYAiABKAhCAhgBElIKEmZpbHRlcmFibGVJblNjb3BlcxgDIAMoDjI2LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0VudGl0eVNjb3BlIpICCixHcnBjU2V0QXR0cmlidXRlU2NoZW1hR2xvYmFsbHlVbmlxdWVNdXRhdGlvbhIMCgRuYW1lGAEgASgJEmQKDnVuaXF1ZUdsb2JhbGx5GAIgASgOMkguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjR2xvYmFsQXR0cmlidXRlVW5pcXVlbmVzc1R5cGVCAhgBEm4KFnVuaXF1ZUdsb2JhbGx5SW5TY29wZXMYDyADKAsyTi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNTY29wZWRHbG9iYWxBdHRyaWJ1dGVVbmlxdWVuZXNzVHlwZSJKCidHcnBjU2V0QXR0cmlidXRlU2NoZW1hTG9jYWxpemVkTXV0YXRpb24SDAoEbmFtZRgBIAEoCRIRCglsb2NhbGl6ZWQYAiABKAgiSAomR3JwY1NldEF0dHJpYnV0ZVNjaGVtYU51bGxhYmxlTXV0YXRpb24SDAoEbmFtZRgBIAEoCRIQCghudWxsYWJsZRgCIAEoCCJUCixHcnBjU2V0QXR0cmlidXRlU2NoZW1hUmVwcmVzZW50YXRpdmVNdXRhdGlvbhIMCgRuYW1lGAEgASgJEhYKDnJlcHJlc2VudGF0aXZlGAIgASgIIp4BCiZHcnBjU2V0QXR0cmlidXRlU2NoZW1hU29ydGFibGVNdXRhdGlvbhIMCgRuYW1lGAEgASgJEhQKCHNvcnRhYmxlGAIgASgIQgIYARJQChBzb3J0YWJsZUluU2NvcGVzGAMgAygOMjYuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRW50aXR5U2NvcGUi7gEKJEdycGNTZXRBdHRyaWJ1dGVTY2hlbWFVbmlxdWVNdXRhdGlvbhIMCgRuYW1lGAEgASgJElYKBnVuaXF1ZRgCIAEoDjJCLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0F0dHJpYnV0ZVVuaXF1ZW5lc3NUeXBlQgIYARJgCg51bmlxdWVJblNjb3BlcxgNIAMoCzJILmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1Njb3BlZEF0dHJpYnV0ZVVuaXF1ZW5lc3NUeXBlIjQKJEdycGNVc2VHbG9iYWxBdHRyaWJ1dGVTY2hlbWFNdXRhdGlvbhIMCgRuYW1lGAEgASgJIqcOChtHcnBjQXR0cmlidXRlU2NoZW1hTXV0YXRpb24ScQodY3JlYXRlQXR0cmlidXRlU2NoZW1hTXV0YXRpb24YAyABKAsySC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNDcmVhdGVBdHRyaWJ1dGVTY2hlbWFNdXRhdGlvbkgAEokBCiltb2RpZnlBdHRyaWJ1dGVTY2hlbWFEZWZhdWx0VmFsdWVNdXRhdGlvbhgEIAEoCzJULmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY01vZGlmeUF0dHJpYnV0ZVNjaGVtYURlZmF1bHRWYWx1ZU11dGF0aW9uSAASkwEKLm1vZGlmeUF0dHJpYnV0ZVNjaGVtYURlcHJlY2F0aW9uTm90aWNlTXV0YXRpb24YBSABKAsyWS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNNb2RpZnlBdHRyaWJ1dGVTY2hlbWFEZXByZWNhdGlvbk5vdGljZU11dGF0aW9uSAAShwEKKG1vZGlmeUF0dHJpYnV0ZVNjaGVtYURlc2NyaXB0aW9uTXV0YXRpb24YBiABKAsyUy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNNb2RpZnlBdHRyaWJ1dGVTY2hlbWFEZXNjcmlwdGlvbk11dGF0aW9uSAASeQohbW9kaWZ5QXR0cmlidXRlU2NoZW1hTmFtZU11dGF0aW9uGAcgASgLMkwuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTW9kaWZ5QXR0cmlidXRlU2NoZW1hTmFtZU11dGF0aW9uSAASeQohbW9kaWZ5QXR0cmlidXRlU2NoZW1hVHlwZU11dGF0aW9uGAggASgLMkwuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTW9kaWZ5QXR0cmlidXRlU2NoZW1hVHlwZU11dGF0aW9uSAAScQodcmVtb3ZlQXR0cmlidXRlU2NoZW1hTXV0YXRpb24YCSABKAsySC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNSZW1vdmVBdHRyaWJ1dGVTY2hlbWFNdXRhdGlvbkgAEn8KJHNldEF0dHJpYnV0ZVNjaGVtYUZpbHRlcmFibGVNdXRhdGlvbhgKIAEoCzJPLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1NldEF0dHJpYnV0ZVNjaGVtYUZpbHRlcmFibGVNdXRhdGlvbkgAEn0KI3NldEF0dHJpYnV0ZVNjaGVtYUxvY2FsaXplZE11dGF0aW9uGAsgASgLMk4uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0QXR0cmlidXRlU2NoZW1hTG9jYWxpemVkTXV0YXRpb25IABJ7CiJzZXRBdHRyaWJ1dGVTY2hlbWFOdWxsYWJsZU11dGF0aW9uGAwgASgLMk0uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0QXR0cmlidXRlU2NoZW1hTnVsbGFibGVNdXRhdGlvbkgAEocBCihzZXRBdHRyaWJ1dGVTY2hlbWFSZXByZXNlbnRhdGl2ZU11dGF0aW9uGA0gASgLMlMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0QXR0cmlidXRlU2NoZW1hUmVwcmVzZW50YXRpdmVNdXRhdGlvbkgAEnsKInNldEF0dHJpYnV0ZVNjaGVtYVNvcnRhYmxlTXV0YXRpb24YDiABKAsyTS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNTZXRBdHRyaWJ1dGVTY2hlbWFTb3J0YWJsZU11dGF0aW9uSAASdwogc2V0QXR0cmlidXRlU2NoZW1hVW5pcXVlTXV0YXRpb24YDyABKAsySy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNTZXRBdHRyaWJ1dGVTY2hlbWFVbmlxdWVNdXRhdGlvbkgAEncKIHVzZUdsb2JhbEF0dHJpYnV0ZVNjaGVtYU11dGF0aW9uGBAgASgLMksuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVXNlR2xvYmFsQXR0cmlidXRlU2NoZW1hTXV0YXRpb25IAEIKCghtdXRhdGlvbkIMUAGqAgdFdml0YURCYgZwcm90bzM", [file_GrpcEvitaDataTypes, file_GrpcEnums, file_google_protobuf_wrappers]);

/**
 * Mutation is responsible for setting up a new `AttributeSchema` in the `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCreateAttributeSchemaMutation
 */
export type GrpcCreateAttributeSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcCreateAttributeSchemaMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 2;
   */
  description?: string;

  /**
   * Deprecation notice contains information about planned removal of this attribute from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 3;
   */
  deprecationNotice?: string;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * deprecated in favor of `uniqueInScopes`
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];
   * @deprecated
   */
  unique: GrpcAttributeUniquenessType;

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * deprecated in favor of `filterableInScopes`
   *
   * @generated from field: bool filterable = 5 [deprecated = true];
   * @deprecated
   */
  filterable: boolean;

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   * deprecated in favor of `sortableInScopes`
   *
   * @generated from field: bool sortable = 6 [deprecated = true];
   * @deprecated
   */
  sortable: boolean;

  /**
   * Localized attribute has to be ALWAYS used in connection with specific `locale`. In other
   * words - it cannot be stored unless associated locale is also provided.
   *
   * @generated from field: bool localized = 7;
   */
  localized: boolean;

  /**
   * 	When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
   * 	non-null checks upon upserting of the entity.
   *
   * @generated from field: bool nullable = 8;
   */
  nullable: boolean;

  /**
   * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
   * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
   * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
   * helpful to developers in quickly finding their way around the data. There should be very few representative
   * attributes in the entity type, and the unique ones are usually the best to choose.
   *
   * @generated from field: bool representative = 9;
   */
  representative: boolean;

  /**
   * Type of the attribute. Must be one of supported data types or its array.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;
   */
  type: GrpcEvitaDataType;

  /**
   * 	Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * 	significant to know that all values of this attribute will be converted to `Integer`, so the attribute
   * 	number must not ever exceed maximum limits of `Integer` type when scaling the number by the power
   * 	of ten using `indexedDecimalPlaces` as exponent.
   *
   * @generated from field: int32 indexedDecimalPlaces = 11;
   */
  indexedDecimalPlaces: number;

  /**
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 12;
   */
  defaultValue?: GrpcEvitaValue;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 13;
   */
  uniqueInScopes: GrpcScopedAttributeUniquenessType[];

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 14;
   */
  filterableInScopes: GrpcEntityScope[];

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 15;
   */
  sortableInScopes: GrpcEntityScope[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCreateAttributeSchemaMutation.
 * Use `create(GrpcCreateAttributeSchemaMutationSchema)` to create a new message.
 */
export const GrpcCreateAttributeSchemaMutationSchema: GenMessage<GrpcCreateAttributeSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 0);

/**
 * Mutation is responsible for setting up a new `GlobalAttributeSchema` in the `CatalogSchema`.
 * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCreateGlobalAttributeSchemaMutation
 */
export type GrpcCreateGlobalAttributeSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcCreateGlobalAttributeSchemaMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 2;
   */
  description?: string;

  /**
   * Deprecation notice contains information about planned removal of this attribute from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 3;
   */
  deprecationNotice?: string;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * deprecated in favor of `uniqueInScopes`
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];
   * @deprecated
   */
  unique: GrpcAttributeUniquenessType;

  /**
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * deprecated in favor of `uniqueGloballyInScopes`
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 5 [deprecated = true];
   * @deprecated
   */
  uniqueGlobally: GrpcGlobalAttributeUniquenessType;

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * deprecated in favor of `filterableInScopes`
   *
   * @generated from field: bool filterable = 6 [deprecated = true];
   * @deprecated
   */
  filterable: boolean;

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   * deprecated in favor of `sortableInScopes`
   *
   * @generated from field: bool sortable = 7 [deprecated = true];
   * @deprecated
   */
  sortable: boolean;

  /**
   * Localized attribute has to be ALWAYS used in connection with specific `locale`. In other
   * words - it cannot be stored unless associated locale is also provided.
   *
   * @generated from field: bool localized = 8;
   */
  localized: boolean;

  /**
   * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
   * non-null checks upon upserting of the entity.
   *
   * @generated from field: bool nullable = 9;
   */
  nullable: boolean;

  /**
   * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
   * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
   * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
   * helpful to developers in quickly finding their way around the data. There should be very few representative
   * attributes in the entity type, and the unique ones are usually the best to choose.
   *
   * @generated from field: bool representative = 10;
   */
  representative: boolean;

  /**
   * Type of the attribute. Must be one of supported data types or its array.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 11;
   */
  type: GrpcEvitaDataType;

  /**
   * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * significant to know that all values of this attribute will be converted to `Integer`, so the attribute
   * number must not ever exceed maximum limits of `Integer` type when scaling the number by the power
   * of ten using `indexedDecimalPlaces` as exponent.
   *
   * @generated from field: int32 indexedDecimalPlaces = 12;
   */
  indexedDecimalPlaces: number;

  /**
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 13;
   */
  defaultValue?: GrpcEvitaValue;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 14;
   */
  uniqueInScopes: GrpcScopedAttributeUniquenessType[];

  /**
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 15;
   */
  uniqueGloballyInScopes: GrpcScopedGlobalAttributeUniquenessType[];

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;
   */
  filterableInScopes: GrpcEntityScope[];

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;
   */
  sortableInScopes: GrpcEntityScope[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCreateGlobalAttributeSchemaMutation.
 * Use `create(GrpcCreateGlobalAttributeSchemaMutationSchema)` to create a new message.
 */
export const GrpcCreateGlobalAttributeSchemaMutationSchema: GenMessage<GrpcCreateGlobalAttributeSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 1);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.defaultValue` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation
 */
export type GrpcModifyAttributeSchemaDefaultValueMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 2;
   */
  defaultValue?: GrpcEvitaValue;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation.
 * Use `create(GrpcModifyAttributeSchemaDefaultValueMutationSchema)` to create a new message.
 */
export const GrpcModifyAttributeSchemaDefaultValueMutationSchema: GenMessage<GrpcModifyAttributeSchemaDefaultValueMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 2);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.deprecationNotice` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation
 */
export type GrpcModifyAttributeSchemaDeprecationNoticeMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Deprecation notice contains information about planned removal of this attribute from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 2;
   */
  deprecationNotice?: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation.
 * Use `create(GrpcModifyAttributeSchemaDeprecationNoticeMutationSchema)` to create a new message.
 */
export const GrpcModifyAttributeSchemaDeprecationNoticeMutationSchema: GenMessage<GrpcModifyAttributeSchemaDeprecationNoticeMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 3);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.description` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation
 */
export type GrpcModifyAttributeSchemaDescriptionMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 2;
   */
  description?: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation.
 * Use `create(GrpcModifyAttributeSchemaDescriptionMutationSchema)` to create a new message.
 */
export const GrpcModifyAttributeSchemaDescriptionMutationSchema: GenMessage<GrpcModifyAttributeSchemaDescriptionMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 4);

/**
 * Mutation is responsible for renaming an existing `AttributeSchema` in `EntitySchema` or `GlobalAttributeSchema` in `CatalogSchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation
 */
export type GrpcModifyAttributeSchemaNameMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * New name of the attribute the mutation is targeting.
   *
   * @generated from field: string newName = 2;
   */
  newName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation.
 * Use `create(GrpcModifyAttributeSchemaNameMutationSchema)` to create a new message.
 */
export const GrpcModifyAttributeSchemaNameMutationSchema: GenMessage<GrpcModifyAttributeSchemaNameMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 5);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.type` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation
 */
export type GrpcModifyAttributeSchemaTypeMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Type of the attribute. Must be one of supported data types or its array.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 2;
   */
  type: GrpcEvitaDataType;

  /**
   * Determines how many fractional places are important when entities are compared during filtering or sorting.
   *
   * @generated from field: int32 indexedDecimalPlaces = 3;
   */
  indexedDecimalPlaces: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation.
 * Use `create(GrpcModifyAttributeSchemaTypeMutationSchema)` to create a new message.
 */
export const GrpcModifyAttributeSchemaTypeMutationSchema: GenMessage<GrpcModifyAttributeSchemaTypeMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 6);

/**
 * Mutation is responsible for removing an existing `AttributeSchema` in the `EntitySchema` or `GlobalAttributeSchema`
 * in the `CatalogSchema`. Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation
 */
export type GrpcRemoveAttributeSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation.
 * Use `create(GrpcRemoveAttributeSchemaMutationSchema)` to create a new message.
 */
export const GrpcRemoveAttributeSchemaMutationSchema: GenMessage<GrpcRemoveAttributeSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 7);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.filterable` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation
 */
export type GrpcSetAttributeSchemaFilterableMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * deprecated in favor of `filterableInScopes`
   *
   * @generated from field: bool filterable = 2 [deprecated = true];
   * @deprecated
   */
  filterable: boolean;

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 3;
   */
  filterableInScopes: GrpcEntityScope[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation.
 * Use `create(GrpcSetAttributeSchemaFilterableMutationSchema)` to create a new message.
 */
export const GrpcSetAttributeSchemaFilterableMutationSchema: GenMessage<GrpcSetAttributeSchemaFilterableMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 8);

/**
 * Mutation is responsible for setting value to a `GlobalAttributeSchema.uniqueGlobally` in `EntitySchema`.
 * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaGloballyUniqueMutation
 */
export type GrpcSetAttributeSchemaGloballyUniqueMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaGloballyUniqueMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * deprecated in favor of `uniqueGloballyInScopes`
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 2 [deprecated = true];
   * @deprecated
   */
  uniqueGlobally: GrpcGlobalAttributeUniquenessType;

  /**
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 15;
   */
  uniqueGloballyInScopes: GrpcScopedGlobalAttributeUniquenessType[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaGloballyUniqueMutation.
 * Use `create(GrpcSetAttributeSchemaGloballyUniqueMutationSchema)` to create a new message.
 */
export const GrpcSetAttributeSchemaGloballyUniqueMutationSchema: GenMessage<GrpcSetAttributeSchemaGloballyUniqueMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 9);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.localized` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation
 */
export type GrpcSetAttributeSchemaLocalizedMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Localized attribute has to be ALWAYS used in connection with specific `locale`. In other
   * words - it cannot be stored unless associated locale is also provided.
   *
   * @generated from field: bool localized = 2;
   */
  localized: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation.
 * Use `create(GrpcSetAttributeSchemaLocalizedMutationSchema)` to create a new message.
 */
export const GrpcSetAttributeSchemaLocalizedMutationSchema: GenMessage<GrpcSetAttributeSchemaLocalizedMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 10);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.nullable` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation
 */
export type GrpcSetAttributeSchemaNullableMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
   * non-null checks upon upserting of the entity.
   *
   * @generated from field: bool nullable = 2;
   */
  nullable: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation.
 * Use `create(GrpcSetAttributeSchemaNullableMutationSchema)` to create a new message.
 */
export const GrpcSetAttributeSchemaNullableMutationSchema: GenMessage<GrpcSetAttributeSchemaNullableMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 11);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.representative` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation
 */
export type GrpcSetAttributeSchemaRepresentativeMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * When attribute is representative, its values may be missing in the entities. Otherwise, the system will enforce
   * non-null checks upon upserting of the entity.
   *
   * @generated from field: bool representative = 2;
   */
  representative: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation.
 * Use `create(GrpcSetAttributeSchemaRepresentativeMutationSchema)` to create a new message.
 */
export const GrpcSetAttributeSchemaRepresentativeMutationSchema: GenMessage<GrpcSetAttributeSchemaRepresentativeMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 12);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.sortable` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation
 */
export type GrpcSetAttributeSchemaSortableMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   * deprecated in favor of `sortableInScopes`
   *
   * @generated from field: bool sortable = 2 [deprecated = true];
   * @deprecated
   */
  sortable: boolean;

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 3;
   */
  sortableInScopes: GrpcEntityScope[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation.
 * Use `create(GrpcSetAttributeSchemaSortableMutationSchema)` to create a new message.
 */
export const GrpcSetAttributeSchemaSortableMutationSchema: GenMessage<GrpcSetAttributeSchemaSortableMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 13);

/**
 * Mutation is responsible for setting value to a `AttributeSchema.unique` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation
 */
export type GrpcSetAttributeSchemaUniqueMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * deprecated in favor of `uniqueInScopes`
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 2 [deprecated = true];
   * @deprecated
   */
  unique: GrpcAttributeUniquenessType;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 13;
   */
  uniqueInScopes: GrpcScopedAttributeUniquenessType[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation.
 * Use `create(GrpcSetAttributeSchemaUniqueMutationSchema)` to create a new message.
 */
export const GrpcSetAttributeSchemaUniqueMutationSchema: GenMessage<GrpcSetAttributeSchemaUniqueMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 14);

/**
 * Mutation is responsible for introducing a `GlobalAttributeSchema` into an `EvitaSession`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUseGlobalAttributeSchemaMutation
 */
export type GrpcUseGlobalAttributeSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcUseGlobalAttributeSchemaMutation"> & {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUseGlobalAttributeSchemaMutation.
 * Use `create(GrpcUseGlobalAttributeSchemaMutationSchema)` to create a new message.
 */
export const GrpcUseGlobalAttributeSchemaMutationSchema: GenMessage<GrpcUseGlobalAttributeSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 15);

/**
 * Mutation of an attribute schema.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAttributeSchemaMutation
 */
export type GrpcAttributeSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcAttributeSchemaMutation"> & {
  /**
   * Type of the mutation.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcAttributeSchemaMutation.mutation
   */
  mutation: {
    /**
     * Mutation is responsible for setting up a new `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateAttributeSchemaMutation createAttributeSchemaMutation = 3;
     */
    value: GrpcCreateAttributeSchemaMutation;
    case: "createAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for modifying a default value of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation modifyAttributeSchemaDefaultValueMutation = 4;
     */
    value: GrpcModifyAttributeSchemaDefaultValueMutation;
    case: "modifyAttributeSchemaDefaultValueMutation";
  } | {
    /**
     * Mutation is responsible for modifying a deprecation notice of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation modifyAttributeSchemaDeprecationNoticeMutation = 5;
     */
    value: GrpcModifyAttributeSchemaDeprecationNoticeMutation;
    case: "modifyAttributeSchemaDeprecationNoticeMutation";
  } | {
    /**
     * Mutation is responsible for modifying a description of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation modifyAttributeSchemaDescriptionMutation = 6;
     */
    value: GrpcModifyAttributeSchemaDescriptionMutation;
    case: "modifyAttributeSchemaDescriptionMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing `AttributeSchema` in `EntitySchema` or `GlobalAttributeSchema` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation modifyAttributeSchemaNameMutation = 7;
     */
    value: GrpcModifyAttributeSchemaNameMutation;
    case: "modifyAttributeSchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for modifying a type of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation modifyAttributeSchemaTypeMutation = 8;
     */
    value: GrpcModifyAttributeSchemaTypeMutation;
    case: "modifyAttributeSchemaTypeMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing `AttributeSchema` in the `EntitySchema` or `GlobalAttributeSchema`
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation removeAttributeSchemaMutation = 9;
     */
    value: GrpcRemoveAttributeSchemaMutation;
    case: "removeAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.filterable` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation setAttributeSchemaFilterableMutation = 10;
     */
    value: GrpcSetAttributeSchemaFilterableMutation;
    case: "setAttributeSchemaFilterableMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.localized` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation setAttributeSchemaLocalizedMutation = 11;
     */
    value: GrpcSetAttributeSchemaLocalizedMutation;
    case: "setAttributeSchemaLocalizedMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.nullable` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation setAttributeSchemaNullableMutation = 12;
     */
    value: GrpcSetAttributeSchemaNullableMutation;
    case: "setAttributeSchemaNullableMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.representative` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation setAttributeSchemaRepresentativeMutation = 13;
     */
    value: GrpcSetAttributeSchemaRepresentativeMutation;
    case: "setAttributeSchemaRepresentativeMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.sortable` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation setAttributeSchemaSortableMutation = 14;
     */
    value: GrpcSetAttributeSchemaSortableMutation;
    case: "setAttributeSchemaSortableMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.unique` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation setAttributeSchemaUniqueMutation = 15;
     */
    value: GrpcSetAttributeSchemaUniqueMutation;
    case: "setAttributeSchemaUniqueMutation";
  } | {
    /**
     * Mutation is responsible for introducing a `GlobalAttributeSchema` into an `EvitaSession`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUseGlobalAttributeSchemaMutation useGlobalAttributeSchemaMutation = 16;
     */
    value: GrpcUseGlobalAttributeSchemaMutation;
    case: "useGlobalAttributeSchemaMutation";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcAttributeSchemaMutation.
 * Use `create(GrpcAttributeSchemaMutationSchema)` to create a new message.
 */
export const GrpcAttributeSchemaMutationSchema: GenMessage<GrpcAttributeSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcAttributeSchemaMutations, 16);

