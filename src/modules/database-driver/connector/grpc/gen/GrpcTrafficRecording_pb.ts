// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file GrpcTrafficRecording.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { GrpcOffsetDateTime, GrpcUuid } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcQueryParam } from "./GrpcQueryParam_pb";
import type { GrpcEntityMutation } from "./GrpcEntityMutation_pb";
import { file_GrpcEntityMutation } from "./GrpcEntityMutation_pb";
import type { GrpcEntitySchemaMutation } from "./GrpcEntitySchemaMutation_pb";
import { file_GrpcEntitySchemaMutation } from "./GrpcEntitySchemaMutation_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcTrafficRecording.proto.
 */
export const file_GrpcTrafficRecording: GenFile = /*@__PURE__*/
  fileDesc("ChpHcnBjVHJhZmZpY1JlY29yZGluZy5wcm90bxIlaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZCKTBQojR3JwY1RyYWZmaWNSZWNvcmRpbmdDYXB0dXJlQ3JpdGVyaWESUwoHY29udGVudBgBIAEoDjJCLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1RyYWZmaWNSZWNvcmRpbmdDb250ZW50EkgKBXNpbmNlGAIgASgLMjkuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjT2Zmc2V0RGF0ZVRpbWUSOwoWc2luY2VTZXNzaW9uU2VxdWVuY2VJZBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEj0KGHNpbmNlUmVjb3JkU2Vzc2lvbk9mZnNldBgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEk0KBHR5cGUYBSADKA4yPy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNUcmFmZmljUmVjb3JkaW5nVHlwZRJCCglzZXNzaW9uSWQYBiADKAsyLy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNVdWlkEjsKFmxvbmdlclRoYW5NaWxsaXNlY29uZHMYByABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRI6ChVmZXRjaGluZ01vcmVCeXRlc1RoYW4YCCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRJFCgZsYWJlbHMYCSADKAsyNS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNRdWVyeUxhYmVsIt0JChFHcnBjVHJhZmZpY1JlY29yZBIgChRzZXNzaW9uU2VxdWVuY2VPcmRlchgBIAEoA0ICMAESQgoJc2Vzc2lvbklkGAIgASgLMi8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVXVpZBIbChNyZWNvcmRTZXNzaW9uT2Zmc2V0GAMgASgFEhsKE3Nlc3Npb25SZWNvcmRzQ291bnQYBCABKAUSTQoEdHlwZRgFIAEoDjI/LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1RyYWZmaWNSZWNvcmRpbmdUeXBlEkoKB2NyZWF0ZWQYBiABKAsyOS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNPZmZzZXREYXRlVGltZRIeChZkdXJhdGlvbkluTWlsbGlzZWNvbmRzGAcgASgFEhoKEmlvRmV0Y2hlZFNpemVCeXRlcxgIIAEoBRIUCgxpb0ZldGNoQ291bnQYCSABKAUSNwoRZmluaXNoZWRXaXRoRXJyb3IYCiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSVwoIbXV0YXRpb24YZSABKAsyQy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNUcmFmZmljTXV0YXRpb25Db250YWluZXJIABJRCgVxdWVyeRhmIAEoCzJALmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1RyYWZmaWNRdWVyeUNvbnRhaW5lckgAEmEKCmVucmljaG1lbnQYZyABKAsySy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNUcmFmZmljRW50aXR5RW5yaWNobWVudENvbnRhaW5lckgAElcKBWZldGNoGGggASgLMkYuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVHJhZmZpY0VudGl0eUZldGNoQ29udGFpbmVySAASXwoMc2Vzc2lvbkNsb3NlGGkgASgLMkcuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVHJhZmZpY1Nlc3Npb25DbG9zZUNvbnRhaW5lckgAEl8KDHNlc3Npb25TdGFydBhqIAEoCzJHLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1RyYWZmaWNTZXNzaW9uU3RhcnRDb250YWluZXJIABJdCgtzb3VyY2VRdWVyeRhrIAEoCzJGLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1RyYWZmaWNTb3VyY2VRdWVyeUNvbnRhaW5lckgAEnEKFXNvdXJjZVF1ZXJ5U3RhdGlzdGljcxhsIAEoCzJQLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1RyYWZmaWNTb3VyY2VRdWVyeVN0YXRpc3RpY3NDb250YWluZXJIAEIGCgRib2R5ItoBChxHcnBjVHJhZmZpY011dGF0aW9uQ29udGFpbmVyElMKDmVudGl0eU11dGF0aW9uGAEgASgLMjkuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRW50aXR5TXV0YXRpb25IABJZCg5zY2hlbWFNdXRhdGlvbhgCIAEoCzI/LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0VudGl0eVNjaGVtYU11dGF0aW9uSABCCgoIbXV0YXRpb24iugEKGUdycGNUcmFmZmljUXVlcnlDb250YWluZXISGAoQcXVlcnlEZXNjcmlwdGlvbhgBIAEoCRINCgVxdWVyeRgCIAEoCRIYChB0b3RhbFJlY29yZENvdW50GAMgASgFEhMKC3ByaW1hcnlLZXlzGAQgAygFEkUKBmxhYmVscxgFIAMoCzI1LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1F1ZXJ5TGFiZWwiSQokR3JwY1RyYWZmaWNFbnRpdHlFbnJpY2htZW50Q29udGFpbmVyEg0KBXF1ZXJ5GAEgASgJEhIKCnByaW1hcnlLZXkYAiABKAUiRAofR3JwY1RyYWZmaWNFbnRpdHlGZXRjaENvbnRhaW5lchINCgVxdWVyeRgBIAEoCRISCgpwcmltYXJ5S2V5GAIgASgFIj4KIEdycGNUcmFmZmljU2Vzc2lvblN0YXJ0Q29udGFpbmVyEhoKDmNhdGFsb2dWZXJzaW9uGAEgASgDQgIwASKfAQogR3JwY1RyYWZmaWNTZXNzaW9uQ2xvc2VDb250YWluZXISGgoOY2F0YWxvZ1ZlcnNpb24YASABKANCAjABEhoKEnRyYWZmaWNSZWNvcmRDb3VudBgCIAEoBRISCgpxdWVyeUNvdW50GAMgASgFEhgKEGVudGl0eUZldGNoQ291bnQYBCABKAUSFQoNbXV0YXRpb25Db3VudBgFIAEoBSLFAQofR3JwY1RyYWZmaWNTb3VyY2VRdWVyeUNvbnRhaW5lchJGCg1zb3VyY2VRdWVyeUlkGAEgASgLMi8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVXVpZBITCgtzb3VyY2VRdWVyeRgCIAEoCRJFCgZsYWJlbHMYAyADKAsyNS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNRdWVyeUxhYmVsIqoBCilHcnBjVHJhZmZpY1NvdXJjZVF1ZXJ5U3RhdGlzdGljc0NvbnRhaW5lchJGCg1zb3VyY2VRdWVyeUlkGAEgASgLMi8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVXVpZBIbChNyZXR1cm5lZFJlY29yZENvdW50GAIgASgFEhgKEHRvdGFsUmVjb3JkQ291bnQYAyABKAUiLQoOR3JwY1F1ZXJ5TGFiZWwSDAoEbmFtZRgBIAEoCRINCgV2YWx1ZRgCIAEoCSpXChtHcnBjVHJhZmZpY1JlY29yZGluZ0NvbnRlbnQSHAoYVFJBRkZJQ19SRUNPUkRJTkdfSEVBREVSEAASGgoWVFJBRkZJQ19SRUNPUkRJTkdfQk9EWRABKrQCChhHcnBjVHJhZmZpY1JlY29yZGluZ1R5cGUSIwofVFJBRkZJQ19SRUNPUkRJTkdfU0VTU0lPTl9TVEFSVBAAEiQKIFRSQUZGSUNfUkVDT1JESU5HX1NFU1NJT05fRklOSVNIEAESIgoeVFJBRkZJQ19SRUNPUkRJTkdfU09VUkNFX1FVRVJZEAISLQopVFJBRkZJQ19SRUNPUkRJTkdfU09VUkNFX1FVRVJZX1NUQVRJU1RJQ1MQAxIbChdUUkFGRklDX1JFQ09SRElOR19RVUVSWRAEEhsKF1RSQUZGSUNfUkVDT1JESU5HX0ZFVENIEAUSIAocVFJBRkZJQ19SRUNPUkRJTkdfRU5SSUNITUVOVBAGEh4KGlRSQUZGSUNfUkVDT1JESU5HX01VVEFUSU9OEAdCgAIKKWNvbS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkQhlHcnBjVHJhZmZpY1JlY29yZGluZ1Byb3RvUAGiAgVJRUVHR6oCJUlvLkV2aXRhZGIuRXh0ZXJuYWxBcGkuR3JwYy5HZW5lcmF0ZWTKAiVJb1xFdml0YWRiXEV4dGVybmFsQXBpXEdycGNcR2VuZXJhdGVk4gIxSW9cRXZpdGFkYlxFeHRlcm5hbEFwaVxHcnBjXEdlbmVyYXRlZFxHUEJNZXRhZGF0YeoCKUlvOjpFdml0YWRiOjpFeHRlcm5hbEFwaTo6R3JwYzo6R2VuZXJhdGVkYgZwcm90bzM", [file_google_protobuf_wrappers, file_GrpcEvitaDataTypes, file_GrpcQueryParam, file_GrpcEntityMutation, file_GrpcEntitySchemaMutation]);

/**
 * Record for the criteria of the capture request allowing to limit mutations to specific area of interest an its
 * properties.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingCaptureCriteria
 */
export type GrpcTrafficRecordingCaptureCriteria = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingCaptureCriteria"> & {
  /**
   * content determines whether only basic information about the traffic recording is returned or the actual content
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingContent content = 1;
   */
  content: GrpcTrafficRecordingContent;

  /**
   * since specifies the time from which the traffic recording should be returned
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcOffsetDateTime since = 2;
   */
  since?: GrpcOffsetDateTime;

  /**
   * sinceSessionSequenceId specifies the session sequence ID from which the traffic recording should be returned
   *
   * @generated from field: google.protobuf.Int64Value sinceSessionSequenceId = 3;
   */
  sinceSessionSequenceId?: bigint;

  /**
   * sinceRecordSessionOffset specifies the record session offset from which the traffic recording should be returned
   *                          (the offset is relative to the session sequence ID and starts from 0), offset allows
   *                          to continue fetching the traffic recording from the last fetched record when session
   *                          was not fully fetched
   *
   * @generated from field: google.protobuf.Int32Value sinceRecordSessionOffset = 4;
   */
  sinceRecordSessionOffset?: number;

  /**
   * type specifies the types of traffic recording to be returned
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingType type = 5;
   */
  type: GrpcTrafficRecordingType[];

  /**
   * sessionId specifies the session ID from which the traffic recording should be returned
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcUuid sessionId = 6;
   */
  sessionId: GrpcUuid[];

  /**
   * longerThan specifies the minimum duration in milliseconds of the traffic recording to be returned
   *
   * @generated from field: google.protobuf.Int32Value longerThanMilliseconds = 7;
   */
  longerThanMilliseconds?: number;

  /**
   * fetchingMoreBytesThan specifies the minimum number of bytes that record should have fetched from the disk
   *
   * @generated from field: google.protobuf.Int32Value fetchingMoreBytesThan = 8;
   */
  fetchingMoreBytesThan?: number;

  /**
   * labels specifies the client labels that the traffic recording must have (both name and value must match)
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryLabel labels = 9;
   */
  labels: GrpcQueryLabel[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingCaptureCriteria.
 * Use `create(GrpcTrafficRecordingCaptureCriteriaSchema)` to create a new message.
 */
export const GrpcTrafficRecordingCaptureCriteriaSchema: GenMessage<GrpcTrafficRecordingCaptureCriteria> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 0);

/**
 * Record represents a CDC event that is sent to the subscriber if it matches to the request he made.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficRecord
 */
export type GrpcTrafficRecord = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficRecord"> & {
  /**
   * The sequence order of the session (analogous to sessionId, but monotonic sequence based on location in the log).
   *
   * @generated from field: int64 sessionSequenceOrder = 1 [jstype = JS_STRING];
   */
  sessionSequenceOrder: string;

  /**
   * The session id which the recording belongs to.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid sessionId = 2;
   */
  sessionId?: GrpcUuid;

  /**
   * The order (sequence) of the traffic recording in the session. First record in the session has sequence ID 0 and
   * represents the session start, additional records are numbered sequentially.
   *
   * @generated from field: int32 recordSessionOffset = 3;
   */
  recordSessionOffset: number;

  /**
   * Total count of the records in the session. This number allows clients to determine whether the recordSessionOffset
   * is the last record in the session (i.e. when recordSessionOffset = recordsInSession - 1, then it is the last record).
   *
   * @generated from field: int32 sessionRecordsCount = 4;
   */
  sessionRecordsCount: number;

  /**
   * The type of the recording.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingType type = 5;
   */
  type: GrpcTrafficRecordingType;

  /**
   * The time when the recording was created.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcOffsetDateTime created = 6;
   */
  created?: GrpcOffsetDateTime;

  /**
   * The duration of the operation in milliseconds.
   *
   * @generated from field: int32 durationInMilliseconds = 7;
   */
  durationInMilliseconds: number;

  /**
   * The size of the data fetched from the permanent storage in bytes.
   *
   * @generated from field: int32 ioFetchedSizeBytes = 8;
   */
  ioFetchedSizeBytes: number;

  /**
   * The number of objects fetched from the permanent storage.
   *
   * @generated from field: int32 ioFetchCount = 9;
   */
  ioFetchCount: number;

  /**
   * Returns non-null error message if the action the recording relates to finished with an error.
   *
   * @generated from field: google.protobuf.StringValue finishedWithError = 10;
   */
  finishedWithError?: string;

  /**
   * optional body of the traffic recording when it is requested by the GrpcTrafficCaptureContent
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcTrafficRecord.body
   */
  body: {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficMutationContainer mutation = 101;
     */
    value: GrpcTrafficMutationContainer;
    case: "mutation";
  } | {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficQueryContainer query = 102;
     */
    value: GrpcTrafficQueryContainer;
    case: "query";
  } | {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityEnrichmentContainer enrichment = 103;
     */
    value: GrpcTrafficEntityEnrichmentContainer;
    case: "enrichment";
  } | {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityFetchContainer fetch = 104;
     */
    value: GrpcTrafficEntityFetchContainer;
    case: "fetch";
  } | {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionCloseContainer sessionClose = 105;
     */
    value: GrpcTrafficSessionCloseContainer;
    case: "sessionClose";
  } | {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionStartContainer sessionStart = 106;
     */
    value: GrpcTrafficSessionStartContainer;
    case: "sessionStart";
  } | {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryContainer sourceQuery = 107;
     */
    value: GrpcTrafficSourceQueryContainer;
    case: "sourceQuery";
  } | {
    /**
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryStatisticsContainer sourceQueryStatistics = 108;
     */
    value: GrpcTrafficSourceQueryStatisticsContainer;
    case: "sourceQueryStatistics";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficRecord.
 * Use `create(GrpcTrafficRecordSchema)` to create a new message.
 */
export const GrpcTrafficRecordSchema: GenMessage<GrpcTrafficRecord> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 1);

/**
 * This container holds a mutation and its metadata.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficMutationContainer
 */
export type GrpcTrafficMutationContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficMutationContainer"> & {
  /**
   * The mutation operation.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcTrafficMutationContainer.mutation
   */
  mutation: {
    /**
     * The entity mutation operation.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityMutation entityMutation = 1;
     */
    value: GrpcEntityMutation;
    case: "entityMutation";
  } | {
    /**
     * The schema mutation operation.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaMutation schemaMutation = 2;
     */
    value: GrpcEntitySchemaMutation;
    case: "schemaMutation";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficMutationContainer.
 * Use `create(GrpcTrafficMutationContainerSchema)` to create a new message.
 */
export const GrpcTrafficMutationContainerSchema: GenMessage<GrpcTrafficMutationContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 2);

/**
 * Container for a query and its metadata.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficQueryContainer
 */
export type GrpcTrafficQueryContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficQueryContainer"> & {
  /**
   * The shortened description of the query and its purpose
   *
   * @generated from field: string queryDescription = 1;
   */
  queryDescription: string;

  /**
   * The query operation.
   *
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * The total number of records calculated by the query.
   *
   * @generated from field: int32 totalRecordCount = 3;
   */
  totalRecordCount: number;

  /**
   * The primary keys of the records returned by the query (in returned data chunk). I.e. number of records actually
   * returned by the pagination requirement of the query.
   *
   * @generated from field: repeated int32 primaryKeys = 4;
   */
  primaryKeys: number[];

  /**
   * The client labels associated with the query.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryLabel labels = 5;
   */
  labels: GrpcQueryLabel[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficQueryContainer.
 * Use `create(GrpcTrafficQueryContainerSchema)` to create a new message.
 */
export const GrpcTrafficQueryContainerSchema: GenMessage<GrpcTrafficQueryContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 3);

/**
 * This container holds information about single entity enrichment.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityEnrichmentContainer
 */
export type GrpcTrafficEntityEnrichmentContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityEnrichmentContainer"> & {
  /**
   * The query operation associated with enrichment.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * The primary key of the enriched record
   *
   * @generated from field: int32 primaryKey = 2;
   */
  primaryKey: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityEnrichmentContainer.
 * Use `create(GrpcTrafficEntityEnrichmentContainerSchema)` to create a new message.
 */
export const GrpcTrafficEntityEnrichmentContainerSchema: GenMessage<GrpcTrafficEntityEnrichmentContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 4);

/**
 * This container holds information about single entity fetch.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityFetchContainer
 */
export type GrpcTrafficEntityFetchContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityFetchContainer"> & {
  /**
   * The query operation associated with entity fetch.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * The primary key of the fetched record
   *
   * @generated from field: int32 primaryKey = 2;
   */
  primaryKey: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficEntityFetchContainer.
 * Use `create(GrpcTrafficEntityFetchContainerSchema)` to create a new message.
 */
export const GrpcTrafficEntityFetchContainerSchema: GenMessage<GrpcTrafficEntityFetchContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 5);

/**
 * This container holds information about the session start.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionStartContainer
 */
export type GrpcTrafficSessionStartContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionStartContainer"> & {
  /**
   * The version of the catalog that will be used for the entire session.
   *
   * @generated from field: int64 catalogVersion = 1 [jstype = JS_STRING];
   */
  catalogVersion: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionStartContainer.
 * Use `create(GrpcTrafficSessionStartContainerSchema)` to create a new message.
 */
export const GrpcTrafficSessionStartContainerSchema: GenMessage<GrpcTrafficSessionStartContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 6);

/**
 * This container holds information about the session close.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionCloseContainer
 */
export type GrpcTrafficSessionCloseContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionCloseContainer"> & {
  /**
   * The version of the catalog
   *
   * @generated from field: int64 catalogVersion = 1 [jstype = JS_STRING];
   */
  catalogVersion: string;

  /**
   * The overall number of traffic records recorded for this session.
   *
   * @generated from field: int32 trafficRecordCount = 2;
   */
  trafficRecordCount: number;

  /**
   * The overall number of queries executed in this session.
   *
   * @generated from field: int32 queryCount = 3;
   */
  queryCount: number;

  /**
   * The overall number of entities fetched in this session (excluding the entities fetched by queries).
   *
   * @generated from field: int32 entityFetchCount = 4;
   */
  entityFetchCount: number;

  /**
   * The overall number of mutations executed in this session.
   *
   * @generated from field: int32 mutationCount = 5;
   */
  mutationCount: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficSessionCloseContainer.
 * Use `create(GrpcTrafficSessionCloseContainerSchema)` to create a new message.
 */
export const GrpcTrafficSessionCloseContainerSchema: GenMessage<GrpcTrafficSessionCloseContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 7);

/**
 * This container holds information about the source query.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryContainer
 */
export type GrpcTrafficSourceQueryContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryContainer"> & {
  /**
   * The unique identifier of the source query
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid sourceQueryId = 1;
   */
  sourceQueryId?: GrpcUuid;

  /**
   * unparsed, raw source query in particular format
   *
   * @generated from field: string sourceQuery = 2;
   */
  sourceQuery: string;

  /**
   * The automatic labels associated with the query.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryLabel labels = 3;
   */
  labels: GrpcQueryLabel[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryContainer.
 * Use `create(GrpcTrafficSourceQueryContainerSchema)` to create a new message.
 */
export const GrpcTrafficSourceQueryContainerSchema: GenMessage<GrpcTrafficSourceQueryContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 8);

/**
 * This container holds information about the source query statistics.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryStatisticsContainer
 */
export type GrpcTrafficSourceQueryStatisticsContainer = Message<"io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryStatisticsContainer"> & {
  /**
   * The source query id
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid sourceQueryId = 1;
   */
  sourceQueryId?: GrpcUuid;

  /**
   * The total number of records returned by the query ({@link EvitaResponse#getRecordData()} size)
   *
   * @generated from field: int32 returnedRecordCount = 2;
   */
  returnedRecordCount: number;

  /**
   * The total number of records calculated by the query ({@link EvitaResponse#getTotalRecordCount()})
   *
   * @generated from field: int32 totalRecordCount = 3;
   */
  totalRecordCount: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTrafficSourceQueryStatisticsContainer.
 * Use `create(GrpcTrafficSourceQueryStatisticsContainerSchema)` to create a new message.
 */
export const GrpcTrafficSourceQueryStatisticsContainerSchema: GenMessage<GrpcTrafficSourceQueryStatisticsContainer> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 9);

/**
 * Client label attached to the query
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcQueryLabel
 */
export type GrpcQueryLabel = Message<"io.evitadb.externalApi.grpc.generated.GrpcQueryLabel"> & {
  /**
   * The label name
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The label value
   *
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcQueryLabel.
 * Use `create(GrpcQueryLabelSchema)` to create a new message.
 */
export const GrpcQueryLabelSchema: GenMessage<GrpcQueryLabel> = /*@__PURE__*/
  messageDesc(file_GrpcTrafficRecording, 10);

/**
 * Enum to specify the depth of details sent in the traffic recording event.
 *
 * @generated from enum io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingContent
 */
export enum GrpcTrafficRecordingContent {
  /**
   * Only the header of the event is sent.
   *
   * @generated from enum value: TRAFFIC_RECORDING_HEADER = 0;
   */
  TRAFFIC_RECORDING_HEADER = 0,

  /**
   * Entire traffic recording content is sent.
   *
   * @generated from enum value: TRAFFIC_RECORDING_BODY = 1;
   */
  TRAFFIC_RECORDING_BODY = 1,
}

/**
 * Describes the enum io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingContent.
 */
export const GrpcTrafficRecordingContentSchema: GenEnum<GrpcTrafficRecordingContent> = /*@__PURE__*/
  enumDesc(file_GrpcTrafficRecording, 0);

/**
 * List of all possible traffic recording types.
 *
 * @generated from enum io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingType
 */
export enum GrpcTrafficRecordingType {
  /**
   * evitaDB session opened.
   *
   * @generated from enum value: TRAFFIC_RECORDING_SESSION_START = 0;
   */
  TRAFFIC_RECORDING_SESSION_START = 0,

  /**
   * * evitaDB session closed.
   *
   * @generated from enum value: TRAFFIC_RECORDING_SESSION_FINISH = 1;
   */
  TRAFFIC_RECORDING_SESSION_FINISH = 1,

  /**
   * Query received via. API from the client - container contains original string of the client query.
   * API might call multiple queries related to the same source query.
   *
   * @generated from enum value: TRAFFIC_RECORDING_SOURCE_QUERY = 2;
   */
  TRAFFIC_RECORDING_SOURCE_QUERY = 2,

  /**
   * Query received via. API from the client is finalized and sent to the client. Container contains the final
   * statistics aggregated over all operations related to the source query.
   *
   * @generated from enum value: TRAFFIC_RECORDING_SOURCE_QUERY_STATISTICS = 3;
   */
  TRAFFIC_RECORDING_SOURCE_QUERY_STATISTICS = 3,

  /**
   * Internal evitaDB query (evitaQL) was executed.
   *
   * @generated from enum value: TRAFFIC_RECORDING_QUERY = 4;
   */
  TRAFFIC_RECORDING_QUERY = 4,

  /**
   * Internal call to retrieve single evitaDB entity. Record is not created for entities fetched as a part of
   * a query.
   *
   * @generated from enum value: TRAFFIC_RECORDING_FETCH = 5;
   */
  TRAFFIC_RECORDING_FETCH = 5,

  /**
   * Internal call to enrich contents of the evitaDB entity.
   *
   * @generated from enum value: TRAFFIC_RECORDING_ENRICHMENT = 6;
   */
  TRAFFIC_RECORDING_ENRICHMENT = 6,

  /**
   * Internal call to mutate the evitaDB entity or catalog schema.
   *
   * @generated from enum value: TRAFFIC_RECORDING_MUTATION = 7;
   */
  TRAFFIC_RECORDING_MUTATION = 7,
}

/**
 * Describes the enum io.evitadb.externalApi.grpc.generated.GrpcTrafficRecordingType.
 */
export const GrpcTrafficRecordingTypeSchema: GenEnum<GrpcTrafficRecordingType> = /*@__PURE__*/
  enumDesc(file_GrpcTrafficRecording, 1);

