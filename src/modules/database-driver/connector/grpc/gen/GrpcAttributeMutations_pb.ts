// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file GrpcAttributeMutations.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { GrpcBigDecimal, GrpcBigDecimalNumberRange, GrpcEvitaValue, GrpcIntegerNumberRange, GrpcLocale, GrpcLongNumberRange } from "./GrpcEvitaDataTypes_pb.js";

/**
 * Increments or decrements existing numeric value by specified delta (negative number produces decremental of
 * existing number, positive one incrementation).
 *
 * Allows to specify the number range that is tolerated for the value after delta application has been finished to
 * verify for example that number of items on stock doesn't go below zero.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcApplyDeltaAttributeMutation
 */
export class GrpcApplyDeltaAttributeMutation extends Message<GrpcApplyDeltaAttributeMutation> {
  /**
   * Unique name of the attribute. Case-sensitive. Distinguishes one associated data item from another within
   * single entity instance.
   *
   * @generated from field: string attributeName = 1;
   */
  attributeName = "";

  /**
   * Contains locale in case the attribute is locale specific.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcLocale attributeLocale = 2;
   */
  attributeLocale?: GrpcLocale;

  /**
   * Delta to change existing value by of this attribute (negative number produces decremental of
   * existing number, positive one incrementation).
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcApplyDeltaAttributeMutation.delta
   */
  delta: {
    /**
     * Integer delta to apply to existing value of this attribute.
     *
     * @generated from field: int32 integerDelta = 3;
     */
    value: number;
    case: "integerDelta";
  } | {
    /**
     * Long delta to apply to existing value of this attribute.
     *
     * @generated from field: int64 longDelta = 4;
     */
    value: bigint;
    case: "longDelta";
  } | {
    /**
     * BigDecimal delta to apply to existing value of this attribute.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimal bigDecimalDelta = 5;
     */
    value: GrpcBigDecimal;
    case: "bigDecimalDelta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * Number range that is tolerated for the value after delta application has been finished to
   * verify for example that number of items on stock doesn't go below zero.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcApplyDeltaAttributeMutation.requiredRangeAfterApplication
   */
  requiredRangeAfterApplication: {
    /**
     * Integer number range within which the value after delta application has to be.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcIntegerNumberRange integerRequiredRangeAfterApplication = 6;
     */
    value: GrpcIntegerNumberRange;
    case: "integerRequiredRangeAfterApplication";
  } | {
    /**
     * Long number range within which the value after delta application has to be.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcLongNumberRange longRequiredRangeAfterApplication = 7;
     */
    value: GrpcLongNumberRange;
    case: "longRequiredRangeAfterApplication";
  } | {
    /**
     * BigDecimal number range within which the value after delta application has to be.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimalNumberRange bigDecimalRequiredRangeAfterApplication = 8;
     */
    value: GrpcBigDecimalNumberRange;
    case: "bigDecimalRequiredRangeAfterApplication";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcApplyDeltaAttributeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcApplyDeltaAttributeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attributeName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "attributeLocale", kind: "message", T: GrpcLocale },
    { no: 3, name: "integerDelta", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "delta" },
    { no: 4, name: "longDelta", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "delta" },
    { no: 5, name: "bigDecimalDelta", kind: "message", T: GrpcBigDecimal, oneof: "delta" },
    { no: 6, name: "integerRequiredRangeAfterApplication", kind: "message", T: GrpcIntegerNumberRange, oneof: "requiredRangeAfterApplication" },
    { no: 7, name: "longRequiredRangeAfterApplication", kind: "message", T: GrpcLongNumberRange, oneof: "requiredRangeAfterApplication" },
    { no: 8, name: "bigDecimalRequiredRangeAfterApplication", kind: "message", T: GrpcBigDecimalNumberRange, oneof: "requiredRangeAfterApplication" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcApplyDeltaAttributeMutation {
    return new GrpcApplyDeltaAttributeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcApplyDeltaAttributeMutation {
    return new GrpcApplyDeltaAttributeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcApplyDeltaAttributeMutation {
    return new GrpcApplyDeltaAttributeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcApplyDeltaAttributeMutation | PlainMessage<GrpcApplyDeltaAttributeMutation> | undefined, b: GrpcApplyDeltaAttributeMutation | PlainMessage<GrpcApplyDeltaAttributeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcApplyDeltaAttributeMutation, a, b);
  }
}

/**
 * Upsert attribute mutation will either update existing attribute or create new one.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpsertAttributeMutation
 */
export class GrpcUpsertAttributeMutation extends Message<GrpcUpsertAttributeMutation> {
  /**
   * Unique name of the attribute. Case-sensitive. Distinguishes one associated data item from another within
   * single entity instance.
   *
   * @generated from field: string attributeName = 1;
   */
  attributeName = "";

  /**
   * Contains locale in case the attribute is locale specific.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcLocale attributeLocale = 2;
   */
  attributeLocale?: GrpcLocale;

  /**
   * New value of this attribute. Data type is expected to be the same as in schema or must be explicitly
   * set via `valueType`.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaValue attributeValue = 3;
   */
  attributeValue?: GrpcEvitaValue;

  constructor(data?: PartialMessage<GrpcUpsertAttributeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcUpsertAttributeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attributeName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "attributeLocale", kind: "message", T: GrpcLocale },
    { no: 3, name: "attributeValue", kind: "message", T: GrpcEvitaValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcUpsertAttributeMutation {
    return new GrpcUpsertAttributeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcUpsertAttributeMutation {
    return new GrpcUpsertAttributeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcUpsertAttributeMutation {
    return new GrpcUpsertAttributeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcUpsertAttributeMutation | PlainMessage<GrpcUpsertAttributeMutation> | undefined, b: GrpcUpsertAttributeMutation | PlainMessage<GrpcUpsertAttributeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcUpsertAttributeMutation, a, b);
  }
}

/**
 * Remove attribute mutation will drop existing attribute - ie.generates new version of the attribute with tombstone
 * on it.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeMutation
 */
export class GrpcRemoveAttributeMutation extends Message<GrpcRemoveAttributeMutation> {
  /**
   * Unique name of the attribute. Case-sensitive. Distinguishes one associated data item from another within
   * single entity instance.
   *
   * @generated from field: string attributeName = 1;
   */
  attributeName = "";

  /**
   * Contains locale in case the attribute is locale specific.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcLocale attributeLocale = 2;
   */
  attributeLocale?: GrpcLocale;

  constructor(data?: PartialMessage<GrpcRemoveAttributeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attributeName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "attributeLocale", kind: "message", T: GrpcLocale },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcRemoveAttributeMutation {
    return new GrpcRemoveAttributeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcRemoveAttributeMutation {
    return new GrpcRemoveAttributeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcRemoveAttributeMutation {
    return new GrpcRemoveAttributeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcRemoveAttributeMutation | PlainMessage<GrpcRemoveAttributeMutation> | undefined, b: GrpcRemoveAttributeMutation | PlainMessage<GrpcRemoveAttributeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcRemoveAttributeMutation, a, b);
  }
}

/**
 * Mutation of a single attribute.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAttributeMutation
 */
export class GrpcAttributeMutation extends Message<GrpcAttributeMutation> {
  /**
   * The mutation to apply.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcAttributeMutation.mutation
   */
  mutation: {
    /**
     * Increments or decrements existing numeric value by specified delta (negative number produces decremental of existing number, positive one incrementation).
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcApplyDeltaAttributeMutation applyDeltaAttributeMutation = 1;
     */
    value: GrpcApplyDeltaAttributeMutation;
    case: "applyDeltaAttributeMutation";
  } | {
    /**
     * Upsert attribute mutation will either update existing attribute or create new one.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUpsertAttributeMutation upsertAttributeMutation = 2;
     */
    value: GrpcUpsertAttributeMutation;
    case: "upsertAttributeMutation";
  } | {
    /**
     * Remove attribute mutation will drop existing attribute - ie.generates new version of the attribute with tombstone on it.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeMutation removeAttributeMutation = 3;
     */
    value: GrpcRemoveAttributeMutation;
    case: "removeAttributeMutation";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcAttributeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcAttributeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "applyDeltaAttributeMutation", kind: "message", T: GrpcApplyDeltaAttributeMutation, oneof: "mutation" },
    { no: 2, name: "upsertAttributeMutation", kind: "message", T: GrpcUpsertAttributeMutation, oneof: "mutation" },
    { no: 3, name: "removeAttributeMutation", kind: "message", T: GrpcRemoveAttributeMutation, oneof: "mutation" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcAttributeMutation {
    return new GrpcAttributeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcAttributeMutation {
    return new GrpcAttributeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcAttributeMutation {
    return new GrpcAttributeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcAttributeMutation | PlainMessage<GrpcAttributeMutation> | undefined, b: GrpcAttributeMutation | PlainMessage<GrpcAttributeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcAttributeMutation, a, b);
  }
}

