// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file GrpcEngineMutation.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { GrpcLocalCatalogSchemaMutation } from "./GrpcCatalogSchemaMutation_pb";
import { file_GrpcCatalogSchemaMutation } from "./GrpcCatalogSchemaMutation_pb";
import type { GrpcOffsetDateTime, GrpcUuid } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcEngineMutation.proto.
 */
export const file_GrpcEngineMutation: GenFile = /*@__PURE__*/
  fileDesc("ChhHcnBjRW5naW5lTXV0YXRpb24ucHJvdG8SJWlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQiNgofR3JwY0NyZWF0ZUNhdGFsb2dTY2hlbWFNdXRhdGlvbhITCgtjYXRhbG9nTmFtZRgBIAEoCSI3CiBHcnBjUmVzdG9yZUNhdGFsb2dTY2hlbWFNdXRhdGlvbhITCgtjYXRhbG9nTmFtZRgBIAEoCSJrCiNHcnBjTW9kaWZ5Q2F0YWxvZ1NjaGVtYU5hbWVNdXRhdGlvbhITCgtjYXRhbG9nTmFtZRgBIAEoCRIWCg5uZXdDYXRhbG9nTmFtZRgCIAEoCRIXCg9vdmVyd3JpdGVUYXJnZXQYAyABKAgilgEKH0dycGNNb2RpZnlDYXRhbG9nU2NoZW1hTXV0YXRpb24SEwoLY2F0YWxvZ05hbWUYASABKAkSXgoPc2NoZW1hTXV0YXRpb25zGAIgAygLMkUuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTG9jYWxDYXRhbG9nU2NoZW1hTXV0YXRpb24iMwocR3JwY01ha2VDYXRhbG9nQWxpdmVNdXRhdGlvbhITCgtjYXRhbG9nTmFtZRgBIAEoCSI2Ch9HcnBjUmVtb3ZlQ2F0YWxvZ1NjaGVtYU11dGF0aW9uEhMKC2NhdGFsb2dOYW1lGAEgASgJIkgKIEdycGNTZXRDYXRhbG9nTXV0YWJpbGl0eU11dGF0aW9uEhMKC2NhdGFsb2dOYW1lGAEgASgJEg8KB211dGFibGUYAiABKAgiSwocR3JwY0R1cGxpY2F0ZUNhdGFsb2dNdXRhdGlvbhITCgtjYXRhbG9nTmFtZRgBIAEoCRIWCg5uZXdDYXRhbG9nTmFtZRgCIAEoCSJCChtHcnBjU2V0Q2F0YWxvZ1N0YXRlTXV0YXRpb24SEwoLY2F0YWxvZ05hbWUYASABKAkSDgoGYWN0aXZlGAIgASgIIv0BChdHcnBjVHJhbnNhY3Rpb25NdXRhdGlvbhJGCg10cmFuc2FjdGlvbklkGAEgASgLMi8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVXVpZBITCgd2ZXJzaW9uGAIgASgDQgIwARIVCg1tdXRhdGlvbkNvdW50GAMgASgFEhoKDndhbFNpemVJbkJ5dGVzGAQgASgDQgIwARJSCg9jb21taXRUaW1lc3RhbXAYBSABKAsyOS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNPZmZzZXREYXRlVGltZSLeCAoSR3JwY0VuZ2luZU11dGF0aW9uEm0KG2NyZWF0ZUNhdGFsb2dTY2hlbWFNdXRhdGlvbhgBIAEoCzJGLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0NyZWF0ZUNhdGFsb2dTY2hlbWFNdXRhdGlvbkgAEnUKH21vZGlmeUNhdGFsb2dTY2hlbWFOYW1lTXV0YXRpb24YAiABKAsySi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNNb2RpZnlDYXRhbG9nU2NoZW1hTmFtZU11dGF0aW9uSAASbQobbW9kaWZ5Q2F0YWxvZ1NjaGVtYU11dGF0aW9uGAMgASgLMkYuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTW9kaWZ5Q2F0YWxvZ1NjaGVtYU11dGF0aW9uSAASZwoYbWFrZUNhdGFsb2dBbGl2ZU11dGF0aW9uGAQgASgLMkMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjTWFrZUNhdGFsb2dBbGl2ZU11dGF0aW9uSAASbQobcmVtb3ZlQ2F0YWxvZ1NjaGVtYU11dGF0aW9uGAUgASgLMkYuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVtb3ZlQ2F0YWxvZ1NjaGVtYU11dGF0aW9uSAASXQoTdHJhbnNhY3Rpb25NdXRhdGlvbhgGIAEoCzI+LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1RyYW5zYWN0aW9uTXV0YXRpb25IABJvChxzZXRDYXRhbG9nTXV0YWJpbGl0eU11dGF0aW9uGAcgASgLMkcuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0Q2F0YWxvZ011dGFiaWxpdHlNdXRhdGlvbkgAEmcKGGR1cGxpY2F0ZUNhdGFsb2dNdXRhdGlvbhgIIAEoCzJDLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0R1cGxpY2F0ZUNhdGFsb2dNdXRhdGlvbkgAEmUKF3NldENhdGFsb2dTdGF0ZU11dGF0aW9uGAkgASgLMkIuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU2V0Q2F0YWxvZ1N0YXRlTXV0YXRpb25IABJvChxyZXN0b3JlQ2F0YWxvZ1NjaGVtYU11dGF0aW9uGAogASgLMkcuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVzdG9yZUNhdGFsb2dTY2hlbWFNdXRhdGlvbkgAQgoKCG11dGF0aW9uQv4BCiljb20uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZEIXR3JwY0VuZ2luZU11dGF0aW9uUHJvdG9QAaICBUlFRUdHqgIlSW8uRXZpdGFkYi5FeHRlcm5hbEFwaS5HcnBjLkdlbmVyYXRlZMoCJUlvXEV2aXRhZGJcRXh0ZXJuYWxBcGlcR3JwY1xHZW5lcmF0ZWTiAjFJb1xFdml0YWRiXEV4dGVybmFsQXBpXEdycGNcR2VuZXJhdGVkXEdQQk1ldGFkYXRh6gIpSW86OkV2aXRhZGI6OkV4dGVybmFsQXBpOjpHcnBjOjpHZW5lcmF0ZWRiBnByb3RvMw", [file_GrpcCatalogSchemaMutation, file_GrpcEvitaDataTypes]);

/**
 * Mutation is responsible for setting up a new CatalogSchema.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCreateCatalogSchemaMutation
 */
export type GrpcCreateCatalogSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcCreateCatalogSchemaMutation"> & {
  /**
   * Name of newly created catalog schema.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCreateCatalogSchemaMutation.
 * Use `create(GrpcCreateCatalogSchemaMutationSchema)` to create a new message.
 */
export const GrpcCreateCatalogSchemaMutationSchema: GenMessage<GrpcCreateCatalogSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 0);

/**
 * Mutation is responsible for restoring a CatalogSchema in INACTIVE state.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogSchemaMutation
 */
export type GrpcRestoreCatalogSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogSchemaMutation"> & {
  /**
   * Name of catalog schema to restore.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogSchemaMutation.
 * Use `create(GrpcRestoreCatalogSchemaMutationSchema)` to create a new message.
 */
export const GrpcRestoreCatalogSchemaMutationSchema: GenMessage<GrpcRestoreCatalogSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 1);

/**
 * Mutation is responsible for renaming an existing CatalogSchema.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaNameMutation
 */
export type GrpcModifyCatalogSchemaNameMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaNameMutation"> & {
  /**
   * Name of the catalog schema the mutation is targeting (will rename).
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * The new name of the catalog schema.
   *
   * @generated from field: string newCatalogName = 2;
   */
  newCatalogName: string;

  /**
   * Flag indicating whether to replace the existing catalog or just to rename it.
   *
   * @generated from field: bool overwriteTarget = 3;
   */
  overwriteTarget: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaNameMutation.
 * Use `create(GrpcModifyCatalogSchemaNameMutationSchema)` to create a new message.
 */
export const GrpcModifyCatalogSchemaNameMutationSchema: GenMessage<GrpcModifyCatalogSchemaNameMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 2);

/**
 * Mutation is responsible for altering an existing CatalogSchema.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaMutation
 */
export type GrpcModifyCatalogSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaMutation"> & {
  /**
   * Name of the catalog schema the mutation is targeting (will rename).
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * Collection of schema mutations that should be applied on current version of the catalog schema.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation schemaMutations = 2;
   */
  schemaMutations: GrpcLocalCatalogSchemaMutation[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaMutation.
 * Use `create(GrpcModifyCatalogSchemaMutationSchema)` to create a new message.
 */
export const GrpcModifyCatalogSchemaMutationSchema: GenMessage<GrpcModifyCatalogSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 3);

/**
 * Mutation that transitions a catalog to the "live" state, making it transactional.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcMakeCatalogAliveMutation
 */
export type GrpcMakeCatalogAliveMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcMakeCatalogAliveMutation"> & {
  /**
   * Name of the catalog schema the mutation is targeting (will rename).
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcMakeCatalogAliveMutation.
 * Use `create(GrpcMakeCatalogAliveMutationSchema)` to create a new message.
 */
export const GrpcMakeCatalogAliveMutationSchema: GenMessage<GrpcMakeCatalogAliveMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 4);

/**
 * Mutation is responsible for removing an existing CatalogSchema.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRemoveCatalogSchemaMutation
 */
export type GrpcRemoveCatalogSchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcRemoveCatalogSchemaMutation"> & {
  /**
   * Name of catalog schema to remove.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRemoveCatalogSchemaMutation.
 * Use `create(GrpcRemoveCatalogSchemaMutationSchema)` to create a new message.
 */
export const GrpcRemoveCatalogSchemaMutationSchema: GenMessage<GrpcRemoveCatalogSchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 5);

/**
 * Mutation that sets the mutability state of a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetCatalogMutabilityMutation
 */
export type GrpcSetCatalogMutabilityMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetCatalogMutabilityMutation"> & {
  /**
   * Name of the catalog to modify.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * Whether the catalog should be mutable (read-write) or immutable (read-only).
   *
   * @generated from field: bool mutable = 2;
   */
  mutable: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetCatalogMutabilityMutation.
 * Use `create(GrpcSetCatalogMutabilityMutationSchema)` to create a new message.
 */
export const GrpcSetCatalogMutabilityMutationSchema: GenMessage<GrpcSetCatalogMutabilityMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 6);

/**
 * Mutation that duplicates a catalog with a new name, copying all contents from the source catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDuplicateCatalogMutation
 */
export type GrpcDuplicateCatalogMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcDuplicateCatalogMutation"> & {
  /**
   * Name of the source catalog to duplicate.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * Name of the new catalog to create with duplicated contents.
   *
   * @generated from field: string newCatalogName = 2;
   */
  newCatalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDuplicateCatalogMutation.
 * Use `create(GrpcDuplicateCatalogMutationSchema)` to create a new message.
 */
export const GrpcDuplicateCatalogMutationSchema: GenMessage<GrpcDuplicateCatalogMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 7);

/**
 * Mutation that sets the active state of a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetCatalogStateMutation
 */
export type GrpcSetCatalogStateMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetCatalogStateMutation"> & {
  /**
   * Name of the catalog to modify.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * Whether the catalog should be active or inactive.
   *
   * @generated from field: bool active = 2;
   */
  active: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetCatalogStateMutation.
 * Use `create(GrpcSetCatalogStateMutationSchema)` to create a new message.
 */
export const GrpcSetCatalogStateMutationSchema: GenMessage<GrpcSetCatalogStateMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 8);

/**
 * This transaction mutation delimits mutations of one transaction from another. It contains data that allow to recognize
 * the scope of the transaction and verify its integrity.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTransactionMutation
 */
export type GrpcTransactionMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcTransactionMutation"> & {
  /**
   * Represents the unique identifier of a transaction.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid transactionId = 1;
   */
  transactionId?: GrpcUuid;

  /**
   * Represents the next version the transaction transitions the state to.
   *
   * @generated from field: int64 version = 2 [jstype = JS_STRING];
   */
  version: string;

  /**
   * Represents the number of mutations in this particular transaction.
   *
   * @generated from field: int32 mutationCount = 3;
   */
  mutationCount: number;

  /**
   * Represents the size of the serialized transaction mutations that follow this mutation in bytes.
   *
   * @generated from field: int64 walSizeInBytes = 4 [jstype = JS_STRING];
   */
  walSizeInBytes: string;

  /**
   * Represents the timestamp of the commit.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcOffsetDateTime commitTimestamp = 5;
   */
  commitTimestamp?: GrpcOffsetDateTime;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTransactionMutation.
 * Use `create(GrpcTransactionMutationSchema)` to create a new message.
 */
export const GrpcTransactionMutationSchema: GenMessage<GrpcTransactionMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 9);

/**
 * This structure encapsulates all mutations that needs to be executed on entire evitaDB level and not locally to
 * single catalog schema instance.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEngineMutation
 */
export type GrpcEngineMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcEngineMutation"> & {
  /**
   * The top level catalog schema mutation to be executed.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcEngineMutation.mutation
   */
  mutation: {
    /**
     * Mutation is responsible for setting up a new CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateCatalogSchemaMutation createCatalogSchemaMutation = 1;
     */
    value: GrpcCreateCatalogSchemaMutation;
    case: "createCatalogSchemaMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaNameMutation modifyCatalogSchemaNameMutation = 2;
     */
    value: GrpcModifyCatalogSchemaNameMutation;
    case: "modifyCatalogSchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaMutation modifyCatalogSchemaMutation = 3;
     */
    value: GrpcModifyCatalogSchemaMutation;
    case: "modifyCatalogSchemaMutation";
  } | {
    /**
     * Mutation that transitions a catalog to the "live" state, making it transactional.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcMakeCatalogAliveMutation makeCatalogAliveMutation = 4;
     */
    value: GrpcMakeCatalogAliveMutation;
    case: "makeCatalogAliveMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveCatalogSchemaMutation removeCatalogSchemaMutation = 5;
     */
    value: GrpcRemoveCatalogSchemaMutation;
    case: "removeCatalogSchemaMutation";
  } | {
    /**
     * Mutation delimits one transaction from another.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTransactionMutation transactionMutation = 6;
     */
    value: GrpcTransactionMutation;
    case: "transactionMutation";
  } | {
    /**
     * Mutation that sets the mutability state of a catalog.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetCatalogMutabilityMutation setCatalogMutabilityMutation = 7;
     */
    value: GrpcSetCatalogMutabilityMutation;
    case: "setCatalogMutabilityMutation";
  } | {
    /**
     * Mutation that duplicates a catalog with a new name, copying all contents from the source catalog.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcDuplicateCatalogMutation duplicateCatalogMutation = 8;
     */
    value: GrpcDuplicateCatalogMutation;
    case: "duplicateCatalogMutation";
  } | {
    /**
     * Mutation that sets the active state of a catalog.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetCatalogStateMutation setCatalogStateMutation = 9;
     */
    value: GrpcSetCatalogStateMutation;
    case: "setCatalogStateMutation";
  } | {
    /**
     * Mutation is responsible for restoring a CatalogSchema in INACTIVE state.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogSchemaMutation restoreCatalogSchemaMutation = 10;
     */
    value: GrpcRestoreCatalogSchemaMutation;
    case: "restoreCatalogSchemaMutation";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEngineMutation.
 * Use `create(GrpcEngineMutationSchema)` to create a new message.
 */
export const GrpcEngineMutationSchema: GenMessage<GrpcEngineMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEngineMutation, 10);

