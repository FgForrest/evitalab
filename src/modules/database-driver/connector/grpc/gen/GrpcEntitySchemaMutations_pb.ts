// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file GrpcEntitySchemaMutations.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { GrpcCurrency, GrpcLocale } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { GrpcEntityScope, GrpcEvolutionMode } from "./GrpcEnums_pb";
import { file_GrpcEnums } from "./GrpcEnums_pb";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcEntitySchemaMutations.proto.
 */
export const file_GrpcEntitySchemaMutations: GenFile = /*@__PURE__*/
  fileDesc("Ch9HcnBjRW50aXR5U2NoZW1hTXV0YXRpb25zLnByb3RvEiVpby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkInIKJ0dycGNBbGxvd0N1cnJlbmN5SW5FbnRpdHlTY2hlbWFNdXRhdGlvbhJHCgpjdXJyZW5jaWVzGAEgAygLMjMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ3VycmVuY3kigAEKLEdycGNBbGxvd0V2b2x1dGlvbk1vZGVJbkVudGl0eVNjaGVtYU11dGF0aW9uElAKDmV2b2x1dGlvbk1vZGVzGAEgAygOMjguaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZvbHV0aW9uTW9kZSJrCiVHcnBjQWxsb3dMb2NhbGVJbkVudGl0eVNjaGVtYU11dGF0aW9uEkIKB2xvY2FsZXMYASADKAsyMS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNMb2NhbGUidQoqR3JwY0Rpc2FsbG93Q3VycmVuY3lJbkVudGl0eVNjaGVtYU11dGF0aW9uEkcKCmN1cnJlbmNpZXMYASADKAsyMy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNDdXJyZW5jeSKDAQovR3JwY0Rpc2FsbG93RXZvbHV0aW9uTW9kZUluRW50aXR5U2NoZW1hTXV0YXRpb24SUAoOZXZvbHV0aW9uTW9kZXMYASADKA4yOC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdm9sdXRpb25Nb2RlIm4KKEdycGNEaXNhbGxvd0xvY2FsZUluRW50aXR5U2NoZW1hTXV0YXRpb24SQgoHbG9jYWxlcxgBIAMoCzIxLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0xvY2FsZSJqCi9HcnBjTW9kaWZ5RW50aXR5U2NoZW1hRGVwcmVjYXRpb25Ob3RpY2VNdXRhdGlvbhI3ChFkZXByZWNhdGlvbk5vdGljZRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSJeCilHcnBjTW9kaWZ5RW50aXR5U2NoZW1hRGVzY3JpcHRpb25NdXRhdGlvbhIxCgtkZXNjcmlwdGlvbhgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSJVCjJHcnBjU2V0RW50aXR5U2NoZW1hV2l0aEdlbmVyYXRlZFByaW1hcnlLZXlNdXRhdGlvbhIfChd3aXRoR2VuZXJhdGVkUHJpbWFyeUtleRgBIAEoCCKSAQooR3JwY1NldEVudGl0eVNjaGVtYVdpdGhIaWVyYXJjaHlNdXRhdGlvbhIVCg13aXRoSGllcmFyY2h5GAEgASgIEk8KD2luZGV4ZWRJblNjb3BlcxgCIAMoDjI2LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0VudGl0eVNjb3BlIqYBCiRHcnBjU2V0RW50aXR5U2NoZW1hV2l0aFByaWNlTXV0YXRpb24SEQoJd2l0aFByaWNlGAEgASgIEhoKEmluZGV4ZWRQcmljZVBsYWNlcxgCIAEoBRJPCg9pbmRleGVkSW5TY29wZXMYAyADKA4yNi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFbnRpdHlTY29wZUKFAgopY29tLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWRCHkdycGNFbnRpdHlTY2hlbWFNdXRhdGlvbnNQcm90b1ABogIFSUVFR0eqAiVJby5Fdml0YWRiLkV4dGVybmFsQXBpLkdycGMuR2VuZXJhdGVkygIlSW9cRXZpdGFkYlxFeHRlcm5hbEFwaVxHcnBjXEdlbmVyYXRlZOICMUlvXEV2aXRhZGJcRXh0ZXJuYWxBcGlcR3JwY1xHZW5lcmF0ZWRcR1BCTWV0YWRhdGHqAilJbzo6RXZpdGFkYjo6RXh0ZXJuYWxBcGk6OkdycGM6OkdlbmVyYXRlZGIGcHJvdG8z", [file_GrpcEvitaDataTypes, file_GrpcEnums, file_google_protobuf_wrappers]);

/**
 * Mutation is responsible for adding one or more currencies to a `EntitySchema.currencies` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAllowCurrencyInEntitySchemaMutation
 */
export type GrpcAllowCurrencyInEntitySchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcAllowCurrencyInEntitySchemaMutation"> & {
  /**
   * Set of all currencies that could be used for prices in entities of this type.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 1;
   */
  currencies: GrpcCurrency[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcAllowCurrencyInEntitySchemaMutation.
 * Use `create(GrpcAllowCurrencyInEntitySchemaMutationSchema)` to create a new message.
 */
export const GrpcAllowCurrencyInEntitySchemaMutationSchema: GenMessage<GrpcAllowCurrencyInEntitySchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 0);

/**
 * Mutation is responsible for adding one or more modes to a `EntitySchema.evolutionMode` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAllowEvolutionModeInEntitySchemaMutation
 */
export type GrpcAllowEvolutionModeInEntitySchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcAllowEvolutionModeInEntitySchemaMutation"> & {
  /**
   * Set of allowed evolution modes. These allow to specify how strict is evitaDB when unknown information is
   * presented to her for the first time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an error. This behaviour can be changed by this evolution mode, however.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionModes = 1;
   */
  evolutionModes: GrpcEvolutionMode[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcAllowEvolutionModeInEntitySchemaMutation.
 * Use `create(GrpcAllowEvolutionModeInEntitySchemaMutationSchema)` to create a new message.
 */
export const GrpcAllowEvolutionModeInEntitySchemaMutationSchema: GenMessage<GrpcAllowEvolutionModeInEntitySchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 1);

/**
 * Mutation is responsible for adding one or more locales to a `EntitySchema.locales` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAllowLocaleInEntitySchemaMutation
 */
export type GrpcAllowLocaleInEntitySchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcAllowLocaleInEntitySchemaMutation"> & {
  /**
   * Set of all locales that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 1;
   */
  locales: GrpcLocale[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcAllowLocaleInEntitySchemaMutation.
 * Use `create(GrpcAllowLocaleInEntitySchemaMutationSchema)` to create a new message.
 */
export const GrpcAllowLocaleInEntitySchemaMutationSchema: GenMessage<GrpcAllowLocaleInEntitySchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 2);

/**
 * Mutation is responsible for removing one or more currencies from a `EntitySchema.currencies` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDisallowCurrencyInEntitySchemaMutation
 */
export type GrpcDisallowCurrencyInEntitySchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcDisallowCurrencyInEntitySchemaMutation"> & {
  /**
   * Set of all currencies that can't be used for prices in entities of this type.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 1;
   */
  currencies: GrpcCurrency[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDisallowCurrencyInEntitySchemaMutation.
 * Use `create(GrpcDisallowCurrencyInEntitySchemaMutationSchema)` to create a new message.
 */
export const GrpcDisallowCurrencyInEntitySchemaMutationSchema: GenMessage<GrpcDisallowCurrencyInEntitySchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 3);

/**
 * Mutation is responsible for removing one or more modes from a `EntitySchema.evolutionMode` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDisallowEvolutionModeInEntitySchemaMutation
 */
export type GrpcDisallowEvolutionModeInEntitySchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcDisallowEvolutionModeInEntitySchemaMutation"> & {
  /**
   * Set of forbidden evolution modes. These allow to specify how strict is evitaDB when unknown information is
   * presented to her for the first time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an error. This behaviour can be changed by this evolution mode, however.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionModes = 1;
   */
  evolutionModes: GrpcEvolutionMode[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDisallowEvolutionModeInEntitySchemaMutation.
 * Use `create(GrpcDisallowEvolutionModeInEntitySchemaMutationSchema)` to create a new message.
 */
export const GrpcDisallowEvolutionModeInEntitySchemaMutationSchema: GenMessage<GrpcDisallowEvolutionModeInEntitySchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 4);

/**
 * Mutation is responsible for removing one or more locales from a `EntitySchema.locales` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDisallowLocaleInEntitySchemaMutation
 */
export type GrpcDisallowLocaleInEntitySchemaMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcDisallowLocaleInEntitySchemaMutation"> & {
  /**
   * Set of all locales that can't be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 1;
   */
  locales: GrpcLocale[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDisallowLocaleInEntitySchemaMutation.
 * Use `create(GrpcDisallowLocaleInEntitySchemaMutationSchema)` to create a new message.
 */
export const GrpcDisallowLocaleInEntitySchemaMutationSchema: GenMessage<GrpcDisallowLocaleInEntitySchemaMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 5);

/**
 * Mutation is responsible for setting a `EntitySchema.deprecationNotice` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDeprecationNoticeMutation
 */
export type GrpcModifyEntitySchemaDeprecationNoticeMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDeprecationNoticeMutation"> & {
  /**
   * Deprecation notice contains information about planned removal of this entity schema from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 1;
   */
  deprecationNotice?: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDeprecationNoticeMutation.
 * Use `create(GrpcModifyEntitySchemaDeprecationNoticeMutationSchema)` to create a new message.
 */
export const GrpcModifyEntitySchemaDeprecationNoticeMutationSchema: GenMessage<GrpcModifyEntitySchemaDeprecationNoticeMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 6);

/**
 * Mutation is responsible for setting a `EntitySchema.description` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDescriptionMutation
 */
export type GrpcModifyEntitySchemaDescriptionMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDescriptionMutation"> & {
  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 1;
   */
  description?: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDescriptionMutation.
 * Use `create(GrpcModifyEntitySchemaDescriptionMutationSchema)` to create a new message.
 */
export const GrpcModifyEntitySchemaDescriptionMutationSchema: GenMessage<GrpcModifyEntitySchemaDescriptionMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 7);

/**
 * Mutation is responsible for setting a `EntitySchema.withGeneratedPrimaryKey` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation
 */
export type GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation"> & {
  /**
   * Whether primary keys of entities of this type will not be provided by the external systems and Evita
   * is responsible for generating unique primary keys for the entity on insertion.
   *
   * Generated key is guaranteed to be unique, but may not represent continuous ascending series. Generated key
   * will be always greater than zero.
   *
   * @generated from field: bool withGeneratedPrimaryKey = 1;
   */
  withGeneratedPrimaryKey: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation.
 * Use `create(GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutationSchema)` to create a new message.
 */
export const GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutationSchema: GenMessage<GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 8);

/**
 * Mutation is responsible for setting a `EntitySchema.withHierarchy` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithHierarchyMutation
 */
export type GrpcSetEntitySchemaWithHierarchyMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithHierarchyMutation"> & {
  /**
   * Whether entities of this type are organized in a tree like structure (hierarchy) where certain entities
   * are subordinate of other entities.
   *
   * Entities may be organized in hierarchical fashion. That means that entity may refer to single parent entity and may be
   * referred by multiple child entities. Hierarchy is always composed of entities of same type.
   * Each entity must be part of at most single hierarchy (tree).
   *
   * Hierarchy can limit returned entities by using filtering constraints `hierarchy_{reference name}_within`. It's also used for
   * computation of extra data - such as `hierarchyParents`.
   *
   * @generated from field: bool withHierarchy = 1;
   */
  withHierarchy: boolean;

  /**
   * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
   * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
   * (calculating parent chain, children, siblings, etc.).
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 2;
   */
  indexedInScopes: GrpcEntityScope[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithHierarchyMutation.
 * Use `create(GrpcSetEntitySchemaWithHierarchyMutationSchema)` to create a new message.
 */
export const GrpcSetEntitySchemaWithHierarchyMutationSchema: GenMessage<GrpcSetEntitySchemaWithHierarchyMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 9);

/**
 * Mutation is responsible for setting a `EntitySchema.withPrice` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation
 */
export type GrpcSetEntitySchemaWithPriceMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation"> & {
  /**
   * Whether entities of this type holds price information.
   *
   * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
   * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
   * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
   * customers.
   *
   * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
   * `priceBetween`, and `priceInPriceLists` filtering constraints and also price
   * ordering of the entities. Additional requirements
   * `priceHistogram` and `priceType` can be used in query as well.
   *
   * @generated from field: bool withPrice = 1;
   */
  withPrice: boolean;

  /**
   * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * important to know that all prices will be converted to `Integer`, so any of the price values
   * (either with or without tax) must not ever exceed maximum limits of `Integer` type when scaling
   * the number by the power of ten using `indexedPricePlaces` as exponent.
   *
   * @generated from field: int32 indexedPricePlaces = 2;
   */
  indexedPricePlaces: number;

  /**
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   *
   * Prices can be also set as non-indexed individually by setting {@link PriceContract#indexed()} to false.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;
   */
  indexedInScopes: GrpcEntityScope[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.
 * Use `create(GrpcSetEntitySchemaWithPriceMutationSchema)` to create a new message.
 */
export const GrpcSetEntitySchemaWithPriceMutationSchema: GenMessage<GrpcSetEntitySchemaWithPriceMutation> = /*@__PURE__*/
  messageDesc(file_GrpcEntitySchemaMutations, 10);

