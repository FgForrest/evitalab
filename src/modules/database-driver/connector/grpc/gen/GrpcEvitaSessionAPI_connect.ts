// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file GrpcEvitaSessionAPI.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetMutationsHistoryPageRequest, GetMutationsHistoryPageResponse, GetMutationsHistoryRequest, GetMutationsHistoryResponse, GrpcArchiveEntityRequest, GrpcArchiveEntityResponse, GrpcBackupCatalogRequest, GrpcBackupCatalogResponse, GrpcCatalogSchemaResponse, GrpcCatalogStateResponse, GrpcCatalogVersionAtRequest, GrpcCatalogVersionAtResponse, GrpcCloseRequest, GrpcCloseResponse, GrpcDefineEntitySchemaRequest, GrpcDefineEntitySchemaResponse, GrpcDeleteCollectionRequest, GrpcDeleteCollectionResponse, GrpcDeleteEntitiesRequest, GrpcDeleteEntitiesResponse, GrpcDeleteEntityAndItsHierarchyResponse, GrpcDeleteEntityRequest, GrpcDeleteEntityResponse, GrpcEntityCollectionSizeRequest, GrpcEntityCollectionSizeResponse, GrpcEntityRequest, GrpcEntityResponse, GrpcEntitySchemaRequest, GrpcEntitySchemaResponse, GrpcEntityTypesResponse, GrpcGetCatalogSchemaRequest, GrpcGoLiveAndCloseResponse, GrpcQueryListResponse, GrpcQueryOneResponse, GrpcQueryRequest, GrpcQueryResponse, GrpcQueryUnsafeRequest, GrpcRenameCollectionRequest, GrpcRenameCollectionResponse, GrpcReplaceCollectionRequest, GrpcReplaceCollectionResponse, GrpcRestoreEntityRequest, GrpcRestoreEntityResponse, GrpcTransactionResponse, GrpcUpdateAndFetchCatalogSchemaResponse, GrpcUpdateAndFetchEntitySchemaResponse, GrpcUpdateCatalogSchemaRequest, GrpcUpdateCatalogSchemaResponse, GrpcUpdateEntitySchemaRequest, GrpcUpdateEntitySchemaResponse, GrpcUpsertEntityRequest, GrpcUpsertEntityResponse } from "./GrpcEvitaSessionAPI_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * This service contains RPCs that could be called by gRPC clients on evitaDB's catalog by usage of a before created session.
 * By specifying its UUID and the name of a catalog to which it corresponds to it's possible to execute methods that in
 * evitaDB's implementation a called on an instance of EvitaSessionContract.
 *
 * Main purpose of this service is to provide a way to manipulate with stored entity collections and their schemas. That
 * includes their creating, updating and deleting. Same operations could be done with entities, which in addition could
 * be fetched by specifying a complex queries.
 *
 * @generated from service io.evitadb.externalApi.grpc.generated.EvitaSessionService
 */
export const EvitaSessionService = {
  typeName: "io.evitadb.externalApi.grpc.generated.EvitaSessionService",
  methods: {
    /**
     * Procedure that returns the current (the one on which the used session operates) catalog schema.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetCatalogSchema
     */
    getCatalogSchema: {
      name: "GetCatalogSchema",
      I: GrpcGetCatalogSchemaRequest,
      O: GrpcCatalogSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that returns the current state of the catalog.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetCatalogState
     */
    getCatalogState: {
      name: "GetCatalogState",
      I: Empty,
      O: GrpcCatalogStateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that returns the version of the catalog at a specific moment in time.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetCatalogVersionAt
     */
    getCatalogVersionAt: {
      name: "GetCatalogVersionAt",
      I: GrpcCatalogVersionAtRequest,
      O: GrpcCatalogVersionAtResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that returns requested page of past mutations in reversed order that match the request criteria.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetMutationsHistoryPage
     */
    getMutationsHistoryPage: {
      name: "GetMutationsHistoryPage",
      I: GetMutationsHistoryPageRequest,
      O: GetMutationsHistoryPageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that returns stream of all past mutations in reversed order that match the request criteria.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetMutationsHistory
     */
    getMutationsHistory: {
      name: "GetMutationsHistory",
      I: GetMutationsHistoryRequest,
      O: GetMutationsHistoryResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Procedure that returns the schema of a specific entity type.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetEntitySchema
     */
    getEntitySchema: {
      name: "GetEntitySchema",
      I: GrpcEntitySchemaRequest,
      O: GrpcEntitySchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that returns the list of all entity types.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetAllEntityTypes
     */
    getAllEntityTypes: {
      name: "GetAllEntityTypes",
      I: Empty,
      O: GrpcEntityTypesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that changes the state of the catalog to ALIVE and closes the session.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GoLiveAndClose
     */
    goLiveAndClose: {
      name: "GoLiveAndClose",
      I: Empty,
      O: GrpcGoLiveAndCloseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure used to backup an existing catalog.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.BackupCatalog
     */
    backupCatalog: {
      name: "BackupCatalog",
      I: GrpcBackupCatalogRequest,
      O: GrpcBackupCatalogResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that closes the session.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.Close
     */
    close: {
      name: "Close",
      I: GrpcCloseRequest,
      O: GrpcCloseResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that executes passed parametrised query and returns zero or one entity.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryOne
     */
    queryOne: {
      name: "QueryOne",
      I: GrpcQueryRequest,
      O: GrpcQueryOneResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that executes passed parametrised query and returns a list of entities.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryList
     */
    queryList: {
      name: "QueryList",
      I: GrpcQueryRequest,
      O: GrpcQueryListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that executes passed parametrised query and returns a data chunk with computed extra results.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.Query
     */
    query: {
      name: "Query",
      I: GrpcQueryRequest,
      O: GrpcQueryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that executes passed query with embedded variables and returns zero or one entity.
     * Do not use in your applications! This method is unsafe and should be used only for internal purposes.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryOneUnsafe
     */
    queryOneUnsafe: {
      name: "QueryOneUnsafe",
      I: GrpcQueryUnsafeRequest,
      O: GrpcQueryOneResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that executes passed query with embedded variables and returns a list of entities.
     * Do not use in your applications! This method is unsafe and should be used only for internal purposes.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryListUnsafe
     */
    queryListUnsafe: {
      name: "QueryListUnsafe",
      I: GrpcQueryUnsafeRequest,
      O: GrpcQueryListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that executes passed query with embedded variables and returns a data chunk with computed extra results.
     * Do not use in your applications! This method is unsafe and should be used only for internal purposes.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryUnsafe
     */
    queryUnsafe: {
      name: "QueryUnsafe",
      I: GrpcQueryUnsafeRequest,
      O: GrpcQueryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that find entity by passed entity type and primary key and return it by specified richness by passed parametrised require query part.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetEntity
     */
    getEntity: {
      name: "GetEntity",
      I: GrpcEntityRequest,
      O: GrpcEntityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that updates the catalog schema and return its updated version.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateCatalogSchema
     */
    updateCatalogSchema: {
      name: "UpdateCatalogSchema",
      I: GrpcUpdateCatalogSchemaRequest,
      O: GrpcUpdateCatalogSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that updates the catalog schema and returns it.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateAndFetchCatalogSchema
     */
    updateAndFetchCatalogSchema: {
      name: "UpdateAndFetchCatalogSchema",
      I: GrpcUpdateCatalogSchemaRequest,
      O: GrpcUpdateAndFetchCatalogSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that defines the schema of a new entity type and return it.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DefineEntitySchema
     */
    defineEntitySchema: {
      name: "DefineEntitySchema",
      I: GrpcDefineEntitySchemaRequest,
      O: GrpcDefineEntitySchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that updates the schema of an existing entity type and return its updated version.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateEntitySchema
     */
    updateEntitySchema: {
      name: "UpdateEntitySchema",
      I: GrpcUpdateEntitySchemaRequest,
      O: GrpcUpdateEntitySchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that updates the schema of an existing entity type and returns it.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateAndFetchEntitySchema
     */
    updateAndFetchEntitySchema: {
      name: "UpdateAndFetchEntitySchema",
      I: GrpcUpdateEntitySchemaRequest,
      O: GrpcUpdateAndFetchEntitySchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that deletes an entity collection.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteCollection
     */
    deleteCollection: {
      name: "DeleteCollection",
      I: GrpcDeleteCollectionRequest,
      O: GrpcDeleteCollectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that renames an entity collection.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.RenameCollection
     */
    renameCollection: {
      name: "RenameCollection",
      I: GrpcRenameCollectionRequest,
      O: GrpcRenameCollectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that replaces an entity collection.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.ReplaceCollection
     */
    replaceCollection: {
      name: "ReplaceCollection",
      I: GrpcReplaceCollectionRequest,
      O: GrpcReplaceCollectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that returns the size of an entity collection.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetEntityCollectionSize
     */
    getEntityCollectionSize: {
      name: "GetEntityCollectionSize",
      I: GrpcEntityCollectionSizeRequest,
      O: GrpcEntityCollectionSizeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that upserts (inserts/updates) an entity and returns it with required richness.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpsertEntity
     */
    upsertEntity: {
      name: "UpsertEntity",
      I: GrpcUpsertEntityRequest,
      O: GrpcUpsertEntityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that deletes an entity and returns it with required richness.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteEntity
     */
    deleteEntity: {
      name: "DeleteEntity",
      I: GrpcDeleteEntityRequest,
      O: GrpcDeleteEntityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that deletes an entity and its hierarchy and returns the root entity with required richness.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteEntityAndItsHierarchy
     */
    deleteEntityAndItsHierarchy: {
      name: "DeleteEntityAndItsHierarchy",
      I: GrpcDeleteEntityRequest,
      O: GrpcDeleteEntityAndItsHierarchyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that deletes all entities that match the sent query and returns their bodies.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteEntities
     */
    deleteEntities: {
      name: "DeleteEntities",
      I: GrpcDeleteEntitiesRequest,
      O: GrpcDeleteEntitiesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that archives an entity and returns it with required richness.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.ArchiveEntity
     */
    archiveEntity: {
      name: "ArchiveEntity",
      I: GrpcArchiveEntityRequest,
      O: GrpcArchiveEntityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that restores an entity and returns it with required richness.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.RestoreEntity
     */
    restoreEntity: {
      name: "RestoreEntity",
      I: GrpcRestoreEntityRequest,
      O: GrpcRestoreEntityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Procedure that opens a transaction.
     *
     * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetTransactionId
     */
    getTransactionId: {
      name: "GetTransactionId",
      I: Empty,
      O: GrpcTransactionResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

