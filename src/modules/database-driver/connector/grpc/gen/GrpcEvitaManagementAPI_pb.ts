// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file GrpcEvitaManagementAPI.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema, StringValue } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { GrpcClassifierType, GrpcReadiness, GrpcTaskSimplifiedState, GrpcHealthProblem } from "./GrpcEnums_pb";
import { file_GrpcEnums } from "./GrpcEnums_pb";
import type { GrpcCatalogStatistics, GrpcFile, GrpcOffsetDateTime, GrpcTaskStatus, GrpcUuid } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcEvitaManagementAPI.proto.
 */
export const file_GrpcEvitaManagementAPI: GenFile = /*@__PURE__*/
  fileDesc("ChxHcnBjRXZpdGFNYW5hZ2VtZW50QVBJLnByb3RvEiVpby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkIrwECh1HcnBjRXZpdGFTZXJ2ZXJTdGF0dXNSZXNwb25zZRIPCgd2ZXJzaW9uGAEgASgJEkwKCXN0YXJ0ZWRBdBgCIAEoCzI5LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY09mZnNldERhdGVUaW1lEg4KBnVwdGltZRgDIAEoAxISCgppbnN0YW5jZUlkGAQgASgJEhkKEWNhdGFsb2dzQ29ycnVwdGVkGAUgASgFEhIKCmNhdGFsb2dzT2sYBiABKAUSUAoOaGVhbHRoUHJvYmxlbXMYByADKA4yOC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNIZWFsdGhQcm9ibGVtEkcKCXJlYWRpbmVzcxgIIAEoDjI0LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1JlYWRpbmVzcxJaCgNhcGkYCSADKAsyTS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YVNlcnZlclN0YXR1c1Jlc3BvbnNlLkFwaUVudHJ5EhAKCHJlYWRPbmx5GAogASgIGmAKCEFwaUVudHJ5EgsKA2tleRgBIAEoCRJDCgV2YWx1ZRgCIAEoCzI0LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0FwaVN0YXR1czoCOAEiiAEKDUdycGNBcGlTdGF0dXMSDwoHZW5hYmxlZBgBIAEoCBINCgVyZWFkeRgCIAEoCBIPCgdiYXNlVXJsGAMgAygJEkYKCWVuZHBvaW50cxgEIAMoCzIzLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0VuZHBvaW50IikKDEdycGNFbmRwb2ludBIMCgRuYW1lGAEgASgJEgsKA3VybBgCIAMoCSI3Ch5HcnBjRXZpdGFDb25maWd1cmF0aW9uUmVzcG9uc2USFQoNY29uZmlndXJhdGlvbhgBIAEoCSJ9CiJHcnBjRXZpdGFDYXRhbG9nU3RhdGlzdGljc1Jlc3BvbnNlElcKEWNhdGFsb2dTdGF0aXN0aWNzGAEgAygLMjwuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ2F0YWxvZ1N0YXRpc3RpY3MiRAoZR3JwY1Jlc3RvcmVDYXRhbG9nUmVxdWVzdBITCgtjYXRhbG9nTmFtZRgBIAEoCRISCgpiYWNrdXBGaWxlGAIgASgMIqQBCh5HcnBjUmVzdG9yZUNhdGFsb2dVbmFyeVJlcXVlc3QSEwoLY2F0YWxvZ05hbWUYASABKAkSEgoKYmFja3VwRmlsZRgCIAEoDBI/CgZmaWxlSWQYAyABKAsyLy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNVdWlkEhgKEHRvdGFsU2l6ZUluQnl0ZXMYBCABKAMifwonR3JwY1Jlc3RvcmVDYXRhbG9nRnJvbVNlcnZlckZpbGVSZXF1ZXN0EhMKC2NhdGFsb2dOYW1lGAEgASgJEj8KBmZpbGVJZBgCIAEoCzIvLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1V1aWQibwoaR3JwY1Jlc3RvcmVDYXRhbG9nUmVzcG9uc2USDAoEcmVhZBgBIAEoAxJDCgR0YXNrGAMgASgLMjUuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVGFza1N0YXR1cyK1AQofR3JwY1Jlc3RvcmVDYXRhbG9nVW5hcnlSZXNwb25zZRIMCgRyZWFkGAEgASgDEj8KBmZpbGVJZBgCIAEoCzIvLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1V1aWQSQwoEdGFzaxgDIAEoCzI1LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1Rhc2tTdGF0dXMiyAEKF0dycGNUYXNrU3RhdHVzZXNSZXF1ZXN0EhIKCnBhZ2VOdW1iZXIYASABKAUSEAoIcGFnZVNpemUYAiABKAUSLgoIdGFza1R5cGUYAyADKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSVwoPc2ltcGxpZmllZFN0YXRlGAQgAygOMj4uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVGFza1NpbXBsaWZpZWRTdGF0ZSKpAQoYR3JwY1Rhc2tTdGF0dXNlc1Jlc3BvbnNlEhAKCHBhZ2VTaXplGAEgASgFEhIKCnBhZ2VOdW1iZXIYAiABKAUSSQoKdGFza1N0YXR1cxgDIAMoCzI1LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1Rhc2tTdGF0dXMSHAoUdG90YWxOdW1iZXJPZlJlY29yZHMYBCABKAUiZAogR3JwY1NwZWNpZmllZFRhc2tTdGF0dXNlc1JlcXVlc3QSQAoHdGFza0lkcxgBIAMoCzIvLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1V1aWQibgohR3JwY1NwZWNpZmllZFRhc2tTdGF0dXNlc1Jlc3BvbnNlEkkKCnRhc2tTdGF0dXMYASADKAsyNS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNUYXNrU3RhdHVzIlgKFUdycGNUYXNrU3RhdHVzUmVxdWVzdBI/CgZ0YXNrSWQYASABKAsyLy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNVdWlkImMKFkdycGNUYXNrU3RhdHVzUmVzcG9uc2USSQoKdGFza1N0YXR1cxgBIAEoCzI1LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1Rhc2tTdGF0dXMiWAoVR3JwY0NhbmNlbFRhc2tSZXF1ZXN0Ej8KBnRhc2tJZBgBIAEoCzIvLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1V1aWQiKQoWR3JwY0NhbmNlbFRhc2tSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIIm0KF0dycGNGaWxlc1RvRmV0Y2hSZXF1ZXN0EhIKCnBhZ2VOdW1iZXIYASABKAUSEAoIcGFnZVNpemUYAiABKAUSLAoGb3JpZ2luGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIqUBChhHcnBjRmlsZXNUb0ZldGNoUmVzcG9uc2USEAoIcGFnZVNpemUYASABKAUSEgoKcGFnZU51bWJlchgCIAEoBRJFCgxmaWxlc1RvRmV0Y2gYAyADKAsyLy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNGaWxlEhwKFHRvdGFsTnVtYmVyT2ZSZWNvcmRzGAQgASgFIlkKFkdycGNGaWxlVG9GZXRjaFJlcXVlc3QSPwoGZmlsZUlkGAEgASgLMi8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVXVpZCJfChdHcnBjRmlsZVRvRmV0Y2hSZXNwb25zZRJECgtmaWxlVG9GZXRjaBgBIAEoCzIvLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0ZpbGUiVwoUR3JwY0ZldGNoRmlsZVJlcXVlc3QSPwoGZmlsZUlkGAEgASgLMi8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVXVpZCJHChVHcnBjRmV0Y2hGaWxlUmVzcG9uc2USFAoMZmlsZUNvbnRlbnRzGAEgASgMEhgKEHRvdGFsU2l6ZUluQnl0ZXMYAiABKAMiXwocR3JwY0RlbGV0ZUZpbGVUb0ZldGNoUmVxdWVzdBI/CgZmaWxlSWQYASABKAsyLy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNVdWlkIjAKHUdycGNEZWxldGVGaWxlVG9GZXRjaFJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiiwEKE0dycGNSZXNlcnZlZEtleXdvcmQSUQoOY2xhc3NpZmllclR5cGUYASABKA4yOS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNDbGFzc2lmaWVyVHlwZRISCgpjbGFzc2lmaWVyGAIgASgJEg0KBXdvcmRzGAMgAygJImwKHEdycGNSZXNlcnZlZEtleXdvcmRzUmVzcG9uc2USTAoIa2V5d29yZHMYASADKAsyOi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNSZXNlcnZlZEtleXdvcmQygxEKFkV2aXRhTWFuYWdlbWVudFNlcnZpY2USbAoMU2VydmVyU3RhdHVzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GkQuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFTZXJ2ZXJTdGF0dXNSZXNwb25zZRJxChBHZXRDb25maWd1cmF0aW9uEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GkUuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRXZpdGFDb25maWd1cmF0aW9uUmVzcG9uc2USeQoUR2V0Q2F0YWxvZ1N0YXRpc3RpY3MSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaSS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNFdml0YUNhdGFsb2dTdGF0aXN0aWNzUmVzcG9uc2USlwEKDlJlc3RvcmVDYXRhbG9nEkAuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVzdG9yZUNhdGFsb2dSZXF1ZXN0GkEuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVzdG9yZUNhdGFsb2dSZXNwb25zZSgBEqQBChNSZXN0b3JlQ2F0YWxvZ1VuYXJ5EkUuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVzdG9yZUNhdGFsb2dVbmFyeVJlcXVlc3QaRi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNSZXN0b3JlQ2F0YWxvZ1VuYXJ5UmVzcG9uc2USsQEKHFJlc3RvcmVDYXRhbG9nRnJvbVNlcnZlckZpbGUSTi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNSZXN0b3JlQ2F0YWxvZ0Zyb21TZXJ2ZXJGaWxlUmVxdWVzdBpBLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1Jlc3RvcmVDYXRhbG9nUmVzcG9uc2USkwEKEExpc3RUYXNrU3RhdHVzZXMSPi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNUYXNrU3RhdHVzZXNSZXF1ZXN0Gj8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjVGFza1N0YXR1c2VzUmVzcG9uc2USjAEKDUdldFRhc2tTdGF0dXMSPC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNUYXNrU3RhdHVzUmVxdWVzdBo9LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1Rhc2tTdGF0dXNSZXNwb25zZRKkAQoPR2V0VGFza1N0YXR1c2VzEkcuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjU3BlY2lmaWVkVGFza1N0YXR1c2VzUmVxdWVzdBpILmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY1NwZWNpZmllZFRhc2tTdGF0dXNlc1Jlc3BvbnNlEokBCgpDYW5jZWxUYXNrEjwuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ2FuY2VsVGFza1JlcXVlc3QaPS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNDYW5jZWxUYXNrUmVzcG9uc2USkwEKEExpc3RGaWxlc1RvRmV0Y2gSPi5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNGaWxlc1RvRmV0Y2hSZXF1ZXN0Gj8uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRmlsZXNUb0ZldGNoUmVzcG9uc2USjwEKDkdldEZpbGVUb0ZldGNoEj0uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRmlsZVRvRmV0Y2hSZXF1ZXN0Gj4uaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRmlsZVRvRmV0Y2hSZXNwb25zZRKIAQoJRmV0Y2hGaWxlEjsuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjRmV0Y2hGaWxlUmVxdWVzdBo8LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0ZldGNoRmlsZVJlc3BvbnNlMAESlwEKCkRlbGV0ZUZpbGUSQy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNEZWxldGVGaWxlVG9GZXRjaFJlcXVlc3QaRC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNEZWxldGVGaWxlVG9GZXRjaFJlc3BvbnNlEnMKFExpc3RSZXNlcnZlZEtleXdvcmRzEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GkMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjUmVzZXJ2ZWRLZXl3b3Jkc1Jlc3BvbnNlQgxQAaoCB0V2aXRhREJiBnByb3RvMw", [file_google_protobuf_empty, file_GrpcEnums, file_GrpcEvitaDataTypes, file_google_protobuf_wrappers]);

/**
 * Response to a server status request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEvitaServerStatusResponse
 */
export type GrpcEvitaServerStatusResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEvitaServerStatusResponse"> & {
  /**
   * Version of evitaDB server taken from the MANIFEST.MF file
   *
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * Date and time when the server was started
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcOffsetDateTime startedAt = 2;
   */
  startedAt?: GrpcOffsetDateTime;

  /**
   * Duration of time since the server was started (seconds)
   *
   * @generated from field: int64 uptime = 3;
   */
  uptime: bigint;

  /**
   * Unique identifier of the server instance
   *
   * @generated from field: string instanceId = 4;
   */
  instanceId: string;

  /**
   * Number of corrupted catalogs
   *
   * @generated from field: int32 catalogsCorrupted = 5;
   */
  catalogsCorrupted: number;

  /**
   * Number of catalogs that are ok
   *
   * @generated from field: int32 catalogsOk = 6;
   */
  catalogsOk: number;

  /**
   * Health problems
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcHealthProblem healthProblems = 7;
   */
  healthProblems: GrpcHealthProblem[];

  /**
   * Overall readiness of the evitaDB server
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcReadiness readiness = 8;
   */
  readiness: GrpcReadiness;

  /**
   * Information about all available APIs
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcApiStatus> api = 9;
   */
  api: { [key: string]: GrpcApiStatus };

  /**
   * Flag indicating that the server is in read-only mode
   *
   * @generated from field: bool readOnly = 10;
   */
  readOnly: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEvitaServerStatusResponse.
 * Use `create(GrpcEvitaServerStatusResponseSchema)` to create a new message.
 */
export const GrpcEvitaServerStatusResponseSchema: GenMessage<GrpcEvitaServerStatusResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 0);

/**
 * Status of the external API
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcApiStatus
 */
export type GrpcApiStatus = Message<"io.evitadb.externalApi.grpc.generated.GrpcApiStatus"> & {
  /**
   * True if the API is enabled
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * API readiness status
   *
   * @generated from field: bool ready = 2;
   */
  ready: boolean;

  /**
   * list of base url of the web API
   *
   * @generated from field: repeated string baseUrl = 3;
   */
  baseUrl: string[];

  /**
   * list of specific endpoints of particular API
   * currently only system API provides list of endpoints
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEndpoint endpoints = 4;
   */
  endpoints: GrpcEndpoint[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcApiStatus.
 * Use `create(GrpcApiStatusSchema)` to create a new message.
 */
export const GrpcApiStatusSchema: GenMessage<GrpcApiStatus> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 1);

/**
 * Information about a system endpoint of particular purpose derived from name
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEndpoint
 */
export type GrpcEndpoint = Message<"io.evitadb.externalApi.grpc.generated.GrpcEndpoint"> & {
  /**
   * logical name of the endpoint
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * absolute URL of the endpoint
   *
   * @generated from field: repeated string url = 2;
   */
  url: string[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEndpoint.
 * Use `create(GrpcEndpointSchema)` to create a new message.
 */
export const GrpcEndpointSchema: GenMessage<GrpcEndpoint> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 2);

/**
 * Response to an evitaDB configuration request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEvitaConfigurationResponse
 */
export type GrpcEvitaConfigurationResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEvitaConfigurationResponse"> & {
  /**
   * Current configuration of the server in YAML format with evaluated values.
   *
   * @generated from field: string configuration = 1;
   */
  configuration: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEvitaConfigurationResponse.
 * Use `create(GrpcEvitaConfigurationResponseSchema)` to create a new message.
 */
export const GrpcEvitaConfigurationResponseSchema: GenMessage<GrpcEvitaConfigurationResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 3);

/**
 * Response to a server catalog statistics request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEvitaCatalogStatisticsResponse
 */
export type GrpcEvitaCatalogStatisticsResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEvitaCatalogStatisticsResponse"> & {
  /**
   * Collection of catalog statistics for all catalogs
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcCatalogStatistics catalogStatistics = 1;
   */
  catalogStatistics: GrpcCatalogStatistics[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEvitaCatalogStatisticsResponse.
 * Use `create(GrpcEvitaCatalogStatisticsResponseSchema)` to create a new message.
 */
export const GrpcEvitaCatalogStatisticsResponseSchema: GenMessage<GrpcEvitaCatalogStatisticsResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 4);

/**
 * Request to restore a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogRequest
 */
export type GrpcRestoreCatalogRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogRequest"> & {
  /**
   * Name of the catalog where the backup will be restored
   * The name must not clash with any of existing catalogs
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * Binary contents of the backup file.
   *
   * @generated from field: bytes backupFile = 2;
   */
  backupFile: Uint8Array;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogRequest.
 * Use `create(GrpcRestoreCatalogRequestSchema)` to create a new message.
 */
export const GrpcRestoreCatalogRequestSchema: GenMessage<GrpcRestoreCatalogRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 5);

/**
 * Request to restore a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogUnaryRequest
 */
export type GrpcRestoreCatalogUnaryRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogUnaryRequest"> & {
  /**
   * Name of the catalog where the backup will be restored
   * The name must not clash with any of existing catalogs
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * Binary contents of the backup file.
   *
   * @generated from field: bytes backupFile = 2;
   */
  backupFile: Uint8Array;

  /**
   * Identification of the task (for continuation purpose)
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid fileId = 3;
   */
  fileId?: GrpcUuid;

  /**
   * Total size of uploaded file in Bytes, when the size is reached, restore automatically starts
   *
   * @generated from field: int64 totalSizeInBytes = 4;
   */
  totalSizeInBytes: bigint;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogUnaryRequest.
 * Use `create(GrpcRestoreCatalogUnaryRequestSchema)` to create a new message.
 */
export const GrpcRestoreCatalogUnaryRequestSchema: GenMessage<GrpcRestoreCatalogUnaryRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 6);

/**
 * Request to restore a catalog.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogFromServerFileRequest
 */
export type GrpcRestoreCatalogFromServerFileRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogFromServerFileRequest"> & {
  /**
   * Name of the catalog where the backup will be restored
   * The name must not clash with any of existing catalogs
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;

  /**
   * The identification of the file on the server that should be restored
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid fileId = 2;
   */
  fileId?: GrpcUuid;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogFromServerFileRequest.
 * Use `create(GrpcRestoreCatalogFromServerFileRequestSchema)` to create a new message.
 */
export const GrpcRestoreCatalogFromServerFileRequestSchema: GenMessage<GrpcRestoreCatalogFromServerFileRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 7);

/**
 * Response to a catalog restore request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogResponse
 */
export type GrpcRestoreCatalogResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogResponse"> & {
  /**
   * returns the number of bytes read from the backup file
   *
   * @generated from field: int64 read = 1;
   */
  read: bigint;

  /**
   * the task that is used to restore the catalog and getting its progress
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTaskStatus task = 3;
   */
  task?: GrpcTaskStatus;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogResponse.
 * Use `create(GrpcRestoreCatalogResponseSchema)` to create a new message.
 */
export const GrpcRestoreCatalogResponseSchema: GenMessage<GrpcRestoreCatalogResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 8);

/**
 * Response to a catalog restore request (unary variant). This is used for gRPC/web.
 * We need to explicitly handle the fileId, because it gets repeatedly updated (appended) from the client.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogUnaryResponse
 */
export type GrpcRestoreCatalogUnaryResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogUnaryResponse"> & {
  /**
   * returns the number of bytes read from the backup file
   *
   * @generated from field: int64 read = 1;
   */
  read: bigint;

  /**
   * The identification of the file on the server that should be restored
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid fileId = 2;
   */
  fileId?: GrpcUuid;

  /**
   * the task that is used to restore the catalog and getting its progress
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTaskStatus task = 3;
   */
  task?: GrpcTaskStatus;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreCatalogUnaryResponse.
 * Use `create(GrpcRestoreCatalogUnaryResponseSchema)` to create a new message.
 */
export const GrpcRestoreCatalogUnaryResponseSchema: GenMessage<GrpcRestoreCatalogUnaryResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 9);

/**
 * Request to list task statuses in paginated form.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusesRequest
 */
export type GrpcTaskStatusesRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcTaskStatusesRequest"> & {
  /**
   * Page number of the task statuses to be listed.
   *
   * @generated from field: int32 pageNumber = 1;
   */
  pageNumber: number;

  /**
   * Number of task statuses per page.
   *
   * @generated from field: int32 pageSize = 2;
   */
  pageSize: number;

  /**
   * Optional taskType of the listed task, passing non-null value
   * in this argument filters the returned status to only those that are related to the tasks of specified type
   *
   * @generated from field: repeated google.protobuf.StringValue taskType = 3;
   */
  taskType: StringValue[];

  /**
   * Optional set of simplified task states, passing list of enums in this argument
   * filters the returned statuses to only those that match this simplified status
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcTaskSimplifiedState simplifiedState = 4;
   */
  simplifiedState: GrpcTaskSimplifiedState[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusesRequest.
 * Use `create(GrpcTaskStatusesRequestSchema)` to create a new message.
 */
export const GrpcTaskStatusesRequestSchema: GenMessage<GrpcTaskStatusesRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 10);

/**
 * Response to a task statuses request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusesResponse
 */
export type GrpcTaskStatusesResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcTaskStatusesResponse"> & {
  /**
   * The size of the page.
   *
   * @generated from field: int32 pageSize = 1;
   */
  pageSize: number;

  /**
   * The number of the page.
   *
   * @generated from field: int32 pageNumber = 2;
   */
  pageNumber: number;

  /**
   * Collection of task statuses.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcTaskStatus taskStatus = 3;
   */
  taskStatus: GrpcTaskStatus[];

  /**
   * Total number of task statuses.
   *
   * @generated from field: int32 totalNumberOfRecords = 4;
   */
  totalNumberOfRecords: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusesResponse.
 * Use `create(GrpcTaskStatusesResponseSchema)` to create a new message.
 */
export const GrpcTaskStatusesResponseSchema: GenMessage<GrpcTaskStatusesResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 11);

/**
 * Request to get multiple task statuses.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSpecifiedTaskStatusesRequest
 */
export type GrpcSpecifiedTaskStatusesRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcSpecifiedTaskStatusesRequest"> & {
  /**
   * set of task ids to be listed
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcUuid taskIds = 1;
   */
  taskIds: GrpcUuid[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSpecifiedTaskStatusesRequest.
 * Use `create(GrpcSpecifiedTaskStatusesRequestSchema)` to create a new message.
 */
export const GrpcSpecifiedTaskStatusesRequestSchema: GenMessage<GrpcSpecifiedTaskStatusesRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 12);

/**
 * Response to a multiple task statuses request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSpecifiedTaskStatusesResponse
 */
export type GrpcSpecifiedTaskStatusesResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcSpecifiedTaskStatusesResponse"> & {
  /**
   * Collection of task statuses.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcTaskStatus taskStatus = 1;
   */
  taskStatus: GrpcTaskStatus[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSpecifiedTaskStatusesResponse.
 * Use `create(GrpcSpecifiedTaskStatusesResponseSchema)` to create a new message.
 */
export const GrpcSpecifiedTaskStatusesResponseSchema: GenMessage<GrpcSpecifiedTaskStatusesResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 13);

/**
 * Request to get single task status by id
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusRequest
 */
export type GrpcTaskStatusRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcTaskStatusRequest"> & {
  /**
   * Identification of the task
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid taskId = 1;
   */
  taskId?: GrpcUuid;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusRequest.
 * Use `create(GrpcTaskStatusRequestSchema)` to create a new message.
 */
export const GrpcTaskStatusRequestSchema: GenMessage<GrpcTaskStatusRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 14);

/**
 * Response to a task status request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusResponse
 */
export type GrpcTaskStatusResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcTaskStatusResponse"> & {
  /**
   * Task status if found
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTaskStatus taskStatus = 1;
   */
  taskStatus?: GrpcTaskStatus;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTaskStatusResponse.
 * Use `create(GrpcTaskStatusResponseSchema)` to create a new message.
 */
export const GrpcTaskStatusResponseSchema: GenMessage<GrpcTaskStatusResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 15);

/**
 * Request to get cancel task status by id
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCancelTaskRequest
 */
export type GrpcCancelTaskRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcCancelTaskRequest"> & {
  /**
   * Identification of the task
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid taskId = 1;
   */
  taskId?: GrpcUuid;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCancelTaskRequest.
 * Use `create(GrpcCancelTaskRequestSchema)` to create a new message.
 */
export const GrpcCancelTaskRequestSchema: GenMessage<GrpcCancelTaskRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 16);

/**
 * Request to get cancel task status by id
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCancelTaskResponse
 */
export type GrpcCancelTaskResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcCancelTaskResponse"> & {
  /**
   * true if the task was found and canceled
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCancelTaskResponse.
 * Use `create(GrpcCancelTaskResponseSchema)` to create a new message.
 */
export const GrpcCancelTaskResponseSchema: GenMessage<GrpcCancelTaskResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 17);

/**
 * Request to list files to fetch in paginated form.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcFilesToFetchRequest
 */
export type GrpcFilesToFetchRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcFilesToFetchRequest"> & {
  /**
   * Page number of the task statuses to be listed.
   *
   * @generated from field: int32 pageNumber = 1;
   */
  pageNumber: number;

  /**
   * Number of task statuses per page.
   *
   * @generated from field: int32 pageSize = 2;
   */
  pageSize: number;

  /**
   * Optional origin of the files (derived from taskType), passing non-null value
   * in this argument filters the returned files to only those that are related to the specified origin
   *
   * @generated from field: google.protobuf.StringValue origin = 3;
   */
  origin?: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcFilesToFetchRequest.
 * Use `create(GrpcFilesToFetchRequestSchema)` to create a new message.
 */
export const GrpcFilesToFetchRequestSchema: GenMessage<GrpcFilesToFetchRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 18);

/**
 * Response to a get files to fetch request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcFilesToFetchResponse
 */
export type GrpcFilesToFetchResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcFilesToFetchResponse"> & {
  /**
   * The size of the page.
   *
   * @generated from field: int32 pageSize = 1;
   */
  pageSize: number;

  /**
   * The number of the page.
   *
   * @generated from field: int32 pageNumber = 2;
   */
  pageNumber: number;

  /**
   * Collection of files to fetch.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcFile filesToFetch = 3;
   */
  filesToFetch: GrpcFile[];

  /**
   * Total number of files to fetch.
   *
   * @generated from field: int32 totalNumberOfRecords = 4;
   */
  totalNumberOfRecords: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcFilesToFetchResponse.
 * Use `create(GrpcFilesToFetchResponseSchema)` to create a new message.
 */
export const GrpcFilesToFetchResponseSchema: GenMessage<GrpcFilesToFetchResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 19);

/**
 * Request to list task statuses in paginated form.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcFileToFetchRequest
 */
export type GrpcFileToFetchRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcFileToFetchRequest"> & {
  /**
   * Identification of the file
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid fileId = 1;
   */
  fileId?: GrpcUuid;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcFileToFetchRequest.
 * Use `create(GrpcFileToFetchRequestSchema)` to create a new message.
 */
export const GrpcFileToFetchRequestSchema: GenMessage<GrpcFileToFetchRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 20);

/**
 * Response to a task statuses request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcFileToFetchResponse
 */
export type GrpcFileToFetchResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcFileToFetchResponse"> & {
  /**
   * File to fetch.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcFile fileToFetch = 1;
   */
  fileToFetch?: GrpcFile;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcFileToFetchResponse.
 * Use `create(GrpcFileToFetchResponseSchema)` to create a new message.
 */
export const GrpcFileToFetchResponseSchema: GenMessage<GrpcFileToFetchResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 21);

/**
 * Request to get single file by id
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcFetchFileRequest
 */
export type GrpcFetchFileRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcFetchFileRequest"> & {
  /**
   * Identification of the file
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid fileId = 1;
   */
  fileId?: GrpcUuid;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcFetchFileRequest.
 * Use `create(GrpcFetchFileRequestSchema)` to create a new message.
 */
export const GrpcFetchFileRequestSchema: GenMessage<GrpcFetchFileRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 22);

/**
 * Response to a task status request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcFetchFileResponse
 */
export type GrpcFetchFileResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcFetchFileResponse"> & {
  /**
   * chunk of the file content
   *
   * @generated from field: bytes fileContents = 1;
   */
  fileContents: Uint8Array;

  /**
   * total size of the file
   *
   * @generated from field: int64 totalSizeInBytes = 2;
   */
  totalSizeInBytes: bigint;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcFetchFileResponse.
 * Use `create(GrpcFetchFileResponseSchema)` to create a new message.
 */
export const GrpcFetchFileResponseSchema: GenMessage<GrpcFetchFileResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 23);

/**
 * Request to list task statuses in paginated form.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteFileToFetchRequest
 */
export type GrpcDeleteFileToFetchRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteFileToFetchRequest"> & {
  /**
   * Identification of the file
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid fileId = 1;
   */
  fileId?: GrpcUuid;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteFileToFetchRequest.
 * Use `create(GrpcDeleteFileToFetchRequestSchema)` to create a new message.
 */
export const GrpcDeleteFileToFetchRequestSchema: GenMessage<GrpcDeleteFileToFetchRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 24);

/**
 * Response to a task statuses request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteFileToFetchResponse
 */
export type GrpcDeleteFileToFetchResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteFileToFetchResponse"> & {
  /**
   * true if the file was found and deleted
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteFileToFetchResponse.
 * Use `create(GrpcDeleteFileToFetchResponseSchema)` to create a new message.
 */
export const GrpcDeleteFileToFetchResponseSchema: GenMessage<GrpcDeleteFileToFetchResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 25);

/**
 * Single reserved keyword
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcReservedKeyword
 */
export type GrpcReservedKeyword = Message<"io.evitadb.externalApi.grpc.generated.GrpcReservedKeyword"> & {
  /**
   * Type of the keyword
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcClassifierType classifierType = 1;
   */
  classifierType: GrpcClassifierType;

  /**
   * Reserved keyword
   *
   * @generated from field: string classifier = 2;
   */
  classifier: string;

  /**
   * List of words that are part of the keyword
   *
   * @generated from field: repeated string words = 3;
   */
  words: string[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcReservedKeyword.
 * Use `create(GrpcReservedKeywordSchema)` to create a new message.
 */
export const GrpcReservedKeywordSchema: GenMessage<GrpcReservedKeyword> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 26);

/**
 * Response that returns information about reserved keywords.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcReservedKeywordsResponse
 */
export type GrpcReservedKeywordsResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcReservedKeywordsResponse"> & {
  /**
   * List of reserved keywords
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcReservedKeyword keywords = 1;
   */
  keywords: GrpcReservedKeyword[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcReservedKeywordsResponse.
 * Use `create(GrpcReservedKeywordsResponseSchema)` to create a new message.
 */
export const GrpcReservedKeywordsResponseSchema: GenMessage<GrpcReservedKeywordsResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaManagementAPI, 27);

/**
 * This service contains RPCs that could be called by gRPC clients on evitaDB. Main purpose of this service is to provide
 * a way to create sessions and catalogs, and to update the catalog.
 *
 * @generated from service io.evitadb.externalApi.grpc.generated.EvitaManagementService
 */
export const EvitaManagementService: GenService<{
  /**
   * Procedure used to obtain server status.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.ServerStatus
   */
  serverStatus: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcEvitaServerStatusResponseSchema;
  },
  /**
   * Procedure used to obtain server configuration.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.GetConfiguration
   */
  getConfiguration: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcEvitaConfigurationResponseSchema;
  },
  /**
   * Procedure used to obtain catalog statistics.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.GetCatalogStatistics
   */
  getCatalogStatistics: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcEvitaCatalogStatisticsResponseSchema;
  },
  /**
   * Procedure used to restore a catalog from backup.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.RestoreCatalog
   */
  restoreCatalog: {
    methodKind: "client_streaming";
    input: typeof GrpcRestoreCatalogRequestSchema;
    output: typeof GrpcRestoreCatalogResponseSchema;
  },
  /**
   * Procedure used to restore a catalog from backup (unary version for gRPC/web).
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.RestoreCatalogUnary
   */
  restoreCatalogUnary: {
    methodKind: "unary";
    input: typeof GrpcRestoreCatalogUnaryRequestSchema;
    output: typeof GrpcRestoreCatalogUnaryResponseSchema;
  },
  /**
   * Procedure used to restore a catalog from backup.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.RestoreCatalogFromServerFile
   */
  restoreCatalogFromServerFile: {
    methodKind: "unary";
    input: typeof GrpcRestoreCatalogFromServerFileRequestSchema;
    output: typeof GrpcRestoreCatalogResponseSchema;
  },
  /**
   * Procedure used to get listing of task statuses.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.ListTaskStatuses
   */
  listTaskStatuses: {
    methodKind: "unary";
    input: typeof GrpcTaskStatusesRequestSchema;
    output: typeof GrpcTaskStatusesResponseSchema;
  },
  /**
   * Procedure used to get detail of particular task status.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.GetTaskStatus
   */
  getTaskStatus: {
    methodKind: "unary";
    input: typeof GrpcTaskStatusRequestSchema;
    output: typeof GrpcTaskStatusResponseSchema;
  },
  /**
   * Procedure used to get multiple details of particular task statuses.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.GetTaskStatuses
   */
  getTaskStatuses: {
    methodKind: "unary";
    input: typeof GrpcSpecifiedTaskStatusesRequestSchema;
    output: typeof GrpcSpecifiedTaskStatusesResponseSchema;
  },
  /**
   * Procedure used to cancel queued or running task.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.CancelTask
   */
  cancelTask: {
    methodKind: "unary";
    input: typeof GrpcCancelTaskRequestSchema;
    output: typeof GrpcCancelTaskResponseSchema;
  },
  /**
   * Procedure used to get listing of files available for fetching.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.ListFilesToFetch
   */
  listFilesToFetch: {
    methodKind: "unary";
    input: typeof GrpcFilesToFetchRequestSchema;
    output: typeof GrpcFilesToFetchResponseSchema;
  },
  /**
   * Procedure used to get single file by its id available for fetching.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.GetFileToFetch
   */
  getFileToFetch: {
    methodKind: "unary";
    input: typeof GrpcFileToFetchRequestSchema;
    output: typeof GrpcFileToFetchResponseSchema;
  },
  /**
   * Procedure used to get file contents
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.FetchFile
   */
  fetchFile: {
    methodKind: "server_streaming";
    input: typeof GrpcFetchFileRequestSchema;
    output: typeof GrpcFetchFileResponseSchema;
  },
  /**
   * Procedure used to delete file contents
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.DeleteFile
   */
  deleteFile: {
    methodKind: "unary";
    input: typeof GrpcDeleteFileToFetchRequestSchema;
    output: typeof GrpcDeleteFileToFetchResponseSchema;
  },
  /**
   * List reserved keywords
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaManagementService.ListReservedKeywords
   */
  listReservedKeywords: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcReservedKeywordsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_GrpcEvitaManagementAPI, 0);

