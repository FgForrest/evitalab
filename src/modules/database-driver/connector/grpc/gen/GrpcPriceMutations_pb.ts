// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file GrpcPriceMutations.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { GrpcPriceInnerRecordHandling } from "./GrpcEnums_pb";
import { file_GrpcEnums } from "./GrpcEnums_pb";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { GrpcBigDecimal, GrpcCurrency, GrpcDateTimeRange } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcPriceMutations.proto.
 */
export const file_GrpcPriceMutations: GenFile = /*@__PURE__*/
  fileDesc("ChhHcnBjUHJpY2VNdXRhdGlvbnMucHJvdG8SJWlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQikAEKJ0dycGNTZXRQcmljZUlubmVyUmVjb3JkSGFuZGxpbmdNdXRhdGlvbhJlChhwcmljZUlubmVyUmVjb3JkSGFuZGxpbmcYASABKA4yQy5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNQcmljZUlubmVyUmVjb3JkSGFuZGxpbmcikAQKF0dycGNVcHNlcnRQcmljZU11dGF0aW9uEg8KB3ByaWNlSWQYASABKAUSEQoJcHJpY2VMaXN0GAIgASgJEkUKCGN1cnJlbmN5GAMgASgLMjMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ3VycmVuY3kSMgoNaW5uZXJSZWNvcmRJZBgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEk4KD3ByaWNlV2l0aG91dFRheBgFIAEoCzI1LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0JpZ0RlY2ltYWwSRgoHdGF4UmF0ZRgGIAEoCzI1LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0JpZ0RlY2ltYWwSSwoMcHJpY2VXaXRoVGF4GAcgASgLMjUuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQmlnRGVjaW1hbBJKCgh2YWxpZGl0eRgIIAEoCzI4LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0RhdGVUaW1lUmFuZ2USFAoIc2VsbGFibGUYCSABKAhCAhgBEg8KB2luZGV4ZWQYCiABKAgihAEKF0dycGNSZW1vdmVQcmljZU11dGF0aW9uEg8KB3ByaWNlSWQYASABKAUSEQoJcHJpY2VMaXN0GAIgASgJEkUKCGN1cnJlbmN5GAMgASgLMjMuaW8uZXZpdGFkYi5leHRlcm5hbEFwaS5ncnBjLmdlbmVyYXRlZC5HcnBjQ3VycmVuY3lCDFABqgIHRXZpdGFEQmIGcHJvdG8z", [file_GrpcEnums, file_google_protobuf_wrappers, file_GrpcEvitaDataTypes]);

/**
 * This mutation allows to set / remove `priceInnerRecordHandling` behaviour of the entity.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetPriceInnerRecordHandlingMutation
 */
export type GrpcSetPriceInnerRecordHandlingMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcSetPriceInnerRecordHandlingMutation"> & {
  /**
   * Price inner record handling controls how prices that share same `inner entity id` will behave during filtering and sorting.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcPriceInnerRecordHandling priceInnerRecordHandling = 1;
   */
  priceInnerRecordHandling: GrpcPriceInnerRecordHandling;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcSetPriceInnerRecordHandlingMutation.
 * Use `create(GrpcSetPriceInnerRecordHandlingMutationSchema)` to create a new message.
 */
export const GrpcSetPriceInnerRecordHandlingMutationSchema: GenMessage<GrpcSetPriceInnerRecordHandlingMutation> = /*@__PURE__*/
  messageDesc(file_GrpcPriceMutations, 0);

/**
 * This mutation allows to create / update `price` of the entity.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpsertPriceMutation
 */
export type GrpcUpsertPriceMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpsertPriceMutation"> & {
  /**
   * Contains identification of the price in the external systems. This id is expected to be used for the synchronization
   * of the price in relation with the primary source of the prices.
   *
   * This id is used to uniquely find a price within same price list and currency and is mandatory.
   *
   * @generated from field: int32 priceId = 1;
   */
  priceId: number;

  /**
   * Contains identification of the price list in the external system. Each price must reference a price list. Price list
   * identification may refer to another Evita entity or may contain any external price list identification
   * (for example id or unique name of the price list in the external system).
   *
   * Single entity is expected to have single price for the price list unless there is `validity` specified.
   * In other words there is no sense to have multiple concurrently valid prices for the same entity that have roots
   * in the same price list.
   *
   * @generated from field: string priceList = 2;
   */
  priceList: string;

  /**
   * Identification of the currency. Three-letter form according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCurrency currency = 3;
   */
  currency?: GrpcCurrency;

  /**
   * Some special products (such as master products, or product sets) may contain prices of all "subordinate" products
   * so that the aggregating product can represent them in certain views on the product. In that case there is need
   * to distinguish the projected prices of the subordinate product in the one that represents them.
   *
   * Inner record id must contain positive value.
   *
   * @generated from field: google.protobuf.Int32Value innerRecordId = 4;
   */
  innerRecordId?: number;

  /**
   * Price without tax.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimal priceWithoutTax = 5;
   */
  priceWithoutTax?: GrpcBigDecimal;

  /**
   * Tax rate percentage (i.e. for 19% it'll be 19.00)
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimal taxRate = 6;
   */
  taxRate?: GrpcBigDecimal;

  /**
   * Price with tax.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimal priceWithTax = 7;
   */
  priceWithTax?: GrpcBigDecimal;

  /**
   * Date and time interval for which the price is valid (inclusive).
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcDateTimeRange validity = 8;
   */
  validity?: GrpcDateTimeRange;

  /**
   * Controls whether price is subject to filtering / sorting logic, non-sellable prices will be fetched along with
   * entity but won't be considered when evaluating search query. These prices may be
   * used for "informational" prices such as reference price (the crossed out price often found on e-commerce sites
   * as "usual price") but are not considered as the "selling" price.
   *
   * @generated from field: bool sellable = 9 [deprecated = true];
   * @deprecated
   */
  sellable: boolean;

  /**
   * Controls whether price is subject to filtering / sorting logic, non-indexed prices will be fetched along with
   * entity but won't be considered when evaluating search query. These prices may be
   * used for "informational" prices such as reference price (the crossed out price often found on e-commerce sites
   * as "usual price") but are not considered as the "selling" price.
   *
   * @generated from field: bool indexed = 10;
   */
  indexed: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpsertPriceMutation.
 * Use `create(GrpcUpsertPriceMutationSchema)` to create a new message.
 */
export const GrpcUpsertPriceMutationSchema: GenMessage<GrpcUpsertPriceMutation> = /*@__PURE__*/
  messageDesc(file_GrpcPriceMutations, 1);

/**
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRemovePriceMutation
 */
export type GrpcRemovePriceMutation = Message<"io.evitadb.externalApi.grpc.generated.GrpcRemovePriceMutation"> & {
  /**
   * Contains identification of the price in the external systems. This id is expected to be used for the synchronization
   * of the price in relation with the primary source of the prices.
   *
   * This id is used to uniquely find a price within same price list and currency and is mandatory.
   *
   * @generated from field: int32 priceId = 1;
   */
  priceId: number;

  /**
   * Contains identification of the price list in the external system. Each price must reference a price list. Price list
   * identification may refer to another Evita entity or may contain any external price list identification
   * (for example id or unique name of the price list in the external system).
   *
   * Single entity is expected to have single price for the price list unless there is `validity` specified.
   * In other words there is no sense to have multiple concurrently valid prices for the same entity that have roots
   * in the same price list.
   *
   * @generated from field: string priceList = 2;
   */
  priceList: string;

  /**
   * Identification of the currency. Three-letter form according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCurrency currency = 3;
   */
  currency?: GrpcCurrency;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRemovePriceMutation.
 * Use `create(GrpcRemovePriceMutationSchema)` to create a new message.
 */
export const GrpcRemovePriceMutationSchema: GenMessage<GrpcRemovePriceMutation> = /*@__PURE__*/
  messageDesc(file_GrpcPriceMutations, 2);

