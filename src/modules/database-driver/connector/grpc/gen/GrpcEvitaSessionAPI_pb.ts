// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file GrpcEvitaSessionAPI.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { GrpcBinaryEntity, GrpcEntityReference, GrpcSealedEntity } from "./GrpcEntity_pb";
import { file_GrpcEntity } from "./GrpcEntity_pb";
import type { GrpcOffsetDateTime, GrpcTaskStatus, GrpcUuid } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { GrpcQueryParam } from "./GrpcQueryParam_pb";
import { file_GrpcQueryParam } from "./GrpcQueryParam_pb";
import type { GrpcExtraResults } from "./GrpcExtraResults_pb";
import { file_GrpcExtraResults } from "./GrpcExtraResults_pb";
import type { GrpcCatalogState, GrpcCommitBehavior, GrpcEntityScope, GrpcTransactionPhase } from "./GrpcEnums_pb";
import { file_GrpcEnums } from "./GrpcEnums_pb";
import type { GrpcCatalogSchema } from "./GrpcCatalogSchema_pb";
import { file_GrpcCatalogSchema } from "./GrpcCatalogSchema_pb";
import type { GrpcEntitySchema } from "./GrpcEntitySchema_pb";
import { file_GrpcEntitySchema } from "./GrpcEntitySchema_pb";
import type { GrpcEntityMutation } from "./GrpcEntityMutation_pb";
import { file_GrpcEntityMutation } from "./GrpcEntityMutation_pb";
import type { GrpcLocalCatalogSchemaMutation } from "./GrpcCatalogSchemaMutation_pb";
import { file_GrpcCatalogSchemaMutation } from "./GrpcCatalogSchemaMutation_pb";
import type { GrpcModifyEntitySchemaMutation } from "./GrpcCatalogSchemaMutations_pb";
import { file_GrpcCatalogSchemaMutations } from "./GrpcCatalogSchemaMutations_pb";
import type { GrpcChangeCaptureContent, GrpcChangeCaptureCriteria, GrpcChangeCatalogCapture } from "./GrpcChangeCapture_pb";
import { file_GrpcChangeCapture } from "./GrpcChangeCapture_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcEvitaSessionAPI.proto.
 */
export const file_GrpcEvitaSessionAPI: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_empty, file_google_protobuf_wrappers, file_GrpcEntity, file_GrpcEvitaDataTypes, file_GrpcQueryParam, file_GrpcExtraResults, file_GrpcEnums, file_GrpcCatalogSchema, file_GrpcEntitySchema, file_GrpcEntityMutation, file_GrpcCatalogSchemaMutation, file_GrpcCatalogSchemaMutations, file_GrpcChangeCapture]);

/**
 * Response to GetCatalogState request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCatalogStateResponse
 */
export type GrpcCatalogStateResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcCatalogStateResponse"> & {
  /**
   * The current state of the catalog.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCatalogState state = 1;
   */
  state: GrpcCatalogState;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCatalogStateResponse.
 * Use `create(GrpcCatalogStateResponseSchema)` to create a new message.
 */
export const GrpcCatalogStateResponseSchema: GenMessage<GrpcCatalogStateResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 0);

/**
 * Request to GrpcCatalogVersionAt request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCatalogVersionAtRequest
 */
export type GrpcCatalogVersionAtRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcCatalogVersionAtRequest"> & {
  /**
   * Chosen moment in time for which the version of the catalog should be returned.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcOffsetDateTime theMoment = 1;
   */
  theMoment?: GrpcOffsetDateTime;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCatalogVersionAtRequest.
 * Use `create(GrpcCatalogVersionAtRequestSchema)` to create a new message.
 */
export const GrpcCatalogVersionAtRequestSchema: GenMessage<GrpcCatalogVersionAtRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 1);

/**
 * Response to GrpcCatalogVersionAt request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCatalogVersionAtResponse
 */
export type GrpcCatalogVersionAtResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcCatalogVersionAtResponse"> & {
  /**
   * The version of the catalog at the specified moment in time.
   *
   * @generated from field: int64 version = 1 [jstype = JS_STRING];
   */
  version: string;

  /**
   * Exact moment when this version was stored (introduced).
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcOffsetDateTime introducedAt = 2;
   */
  introducedAt?: GrpcOffsetDateTime;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCatalogVersionAtResponse.
 * Use `create(GrpcCatalogVersionAtResponseSchema)` to create a new message.
 */
export const GrpcCatalogVersionAtResponseSchema: GenMessage<GrpcCatalogVersionAtResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 2);

/**
 * Request to GetMutationsHistoryPage request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryPageRequest
 */
export type GetMutationsHistoryPageRequest = Message<"io.evitadb.externalApi.grpc.generated.GetMutationsHistoryPageRequest"> & {
  /**
   * The page number starting with 1
   *
   * @generated from field: int32 page = 1;
   */
  page: number;

  /**
   * The size of the page to return
   *
   * @generated from field: int32 pageSize = 2;
   */
  pageSize: number;

  /**
   * Starting point for the search (catalog version)
   *
   * @generated from field: int64 sinceVersion = 3 [jstype = JS_STRING];
   */
  sinceVersion: string;

  /**
   * Starting point for the search (index of the mutation within catalog version)
   *
   * @generated from field: int32 sinceIndex = 4;
   */
  sinceIndex: number;

  /**
   * The criteria of the capture, allows to define constraints on the returned mutations
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcChangeCaptureCriteria criteria = 5;
   */
  criteria: GrpcChangeCaptureCriteria[];

  /**
   * The scope of the returned data - either header of the mutation, or the whole mutation
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcChangeCaptureContent content = 6;
   */
  content: GrpcChangeCaptureContent;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryPageRequest.
 * Use `create(GetMutationsHistoryPageRequestSchema)` to create a new message.
 */
export const GetMutationsHistoryPageRequestSchema: GenMessage<GetMutationsHistoryPageRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 3);

/**
 * Response to GetMutationsHistoryPage request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryPageResponse
 */
export type GetMutationsHistoryPageResponse = Message<"io.evitadb.externalApi.grpc.generated.GetMutationsHistoryPageResponse"> & {
  /**
   * The list of mutations that match the criteria
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcChangeCatalogCapture changeCapture = 1;
   */
  changeCapture: GrpcChangeCatalogCapture[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryPageResponse.
 * Use `create(GetMutationsHistoryPageResponseSchema)` to create a new message.
 */
export const GetMutationsHistoryPageResponseSchema: GenMessage<GetMutationsHistoryPageResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 4);

/**
 * Request to GetMutationsHistoryPage request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryRequest
 */
export type GetMutationsHistoryRequest = Message<"io.evitadb.externalApi.grpc.generated.GetMutationsHistoryRequest"> & {
  /**
   * Starting point for the search (catalog version)
   *
   * @generated from field: google.protobuf.Int64Value sinceVersion = 1;
   */
  sinceVersion?: bigint;

  /**
   * Starting point for the search (index of the mutation within catalog version)
   *
   * @generated from field: google.protobuf.Int32Value sinceIndex = 2;
   */
  sinceIndex?: number;

  /**
   * The criteria of the capture, allows to define constraints on the returned mutations
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcChangeCaptureCriteria criteria = 3;
   */
  criteria: GrpcChangeCaptureCriteria[];

  /**
   * The scope of the returned data - either header of the mutation, or the whole mutation
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcChangeCaptureContent content = 4;
   */
  content: GrpcChangeCaptureContent;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryRequest.
 * Use `create(GetMutationsHistoryRequestSchema)` to create a new message.
 */
export const GetMutationsHistoryRequestSchema: GenMessage<GetMutationsHistoryRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 5);

/**
 * Response to GetMutationsHistory request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryResponse
 */
export type GetMutationsHistoryResponse = Message<"io.evitadb.externalApi.grpc.generated.GetMutationsHistoryResponse"> & {
  /**
   * The list of mutations that match the criteria
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcChangeCatalogCapture changeCapture = 1;
   */
  changeCapture: GrpcChangeCatalogCapture[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GetMutationsHistoryResponse.
 * Use `create(GetMutationsHistoryResponseSchema)` to create a new message.
 */
export const GetMutationsHistoryResponseSchema: GenMessage<GetMutationsHistoryResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 6);

/**
 * Request to GetCatalogSchema request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcGetCatalogSchemaRequest
 */
export type GrpcGetCatalogSchemaRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcGetCatalogSchemaRequest"> & {
  /**
   * True, if the schema should include name variants for it and all sub-schemas.
   * This could considerably increase the size of the response.
   *
   * @generated from field: bool nameVariants = 1;
   */
  nameVariants: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcGetCatalogSchemaRequest.
 * Use `create(GrpcGetCatalogSchemaRequestSchema)` to create a new message.
 */
export const GrpcGetCatalogSchemaRequestSchema: GenMessage<GrpcGetCatalogSchemaRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 7);

/**
 * Response to GetCatalogSchema request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaResponse
 */
export type GrpcCatalogSchemaResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaResponse"> & {
  /**
   * The current catalog schema.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCatalogSchema catalogSchema = 1;
   */
  catalogSchema?: GrpcCatalogSchema;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaResponse.
 * Use `create(GrpcCatalogSchemaResponseSchema)` to create a new message.
 */
export const GrpcCatalogSchemaResponseSchema: GenMessage<GrpcCatalogSchemaResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 8);

/**
 * Request for acquiring the schema of a specific entity type.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaRequest
 */
export type GrpcEntitySchemaRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaRequest"> & {
  /**
   * The entity type for which the schema is requested.
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;

  /**
   * True, if the schema should include name variants for it and all sub-schemas.
   * This could considerably increase the size of the response.
   *
   * @generated from field: bool nameVariants = 2;
   */
  nameVariants: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaRequest.
 * Use `create(GrpcEntitySchemaRequestSchema)` to create a new message.
 */
export const GrpcEntitySchemaRequestSchema: GenMessage<GrpcEntitySchemaRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 9);

/**
 * Response to GetEntitySchema request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaResponse
 */
export type GrpcEntitySchemaResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaResponse"> & {
  /**
   * The schema of the requested entity type.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntitySchema entitySchema = 1;
   */
  entitySchema?: GrpcEntitySchema;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaResponse.
 * Use `create(GrpcEntitySchemaResponseSchema)` to create a new message.
 */
export const GrpcEntitySchemaResponseSchema: GenMessage<GrpcEntitySchemaResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 10);

/**
 * Request for updating the catalog schema.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpdateCatalogSchemaRequest
 */
export type GrpcUpdateCatalogSchemaRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpdateCatalogSchemaRequest"> & {
  /**
   * Collection of local catalog schema mutations to be applied.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation schemaMutations = 1;
   */
  schemaMutations: GrpcLocalCatalogSchemaMutation[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpdateCatalogSchemaRequest.
 * Use `create(GrpcUpdateCatalogSchemaRequestSchema)` to create a new message.
 */
export const GrpcUpdateCatalogSchemaRequestSchema: GenMessage<GrpcUpdateCatalogSchemaRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 11);

/**
 * Response to UpdateCatalogSchema request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpdateCatalogSchemaResponse
 */
export type GrpcUpdateCatalogSchemaResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpdateCatalogSchemaResponse"> & {
  /**
   * The new version of the catalog schema.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpdateCatalogSchemaResponse.
 * Use `create(GrpcUpdateCatalogSchemaResponseSchema)` to create a new message.
 */
export const GrpcUpdateCatalogSchemaResponseSchema: GenMessage<GrpcUpdateCatalogSchemaResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 12);

/**
 * Request for updating the catalog schema and its afterwards fetching.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpdateAndFetchCatalogSchemaResponse
 */
export type GrpcUpdateAndFetchCatalogSchemaResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpdateAndFetchCatalogSchemaResponse"> & {
  /**
   * Modified catalog schema.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCatalogSchema catalogSchema = 1;
   */
  catalogSchema?: GrpcCatalogSchema;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpdateAndFetchCatalogSchemaResponse.
 * Use `create(GrpcUpdateAndFetchCatalogSchemaResponseSchema)` to create a new message.
 */
export const GrpcUpdateAndFetchCatalogSchemaResponseSchema: GenMessage<GrpcUpdateAndFetchCatalogSchemaResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 13);

/**
 * Request for defining the schema of a new entity type.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDefineEntitySchemaRequest
 */
export type GrpcDefineEntitySchemaRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcDefineEntitySchemaRequest"> & {
  /**
   * The schema of the new entity type.
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDefineEntitySchemaRequest.
 * Use `create(GrpcDefineEntitySchemaRequestSchema)` to create a new message.
 */
export const GrpcDefineEntitySchemaRequestSchema: GenMessage<GrpcDefineEntitySchemaRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 14);

/**
 * Response to DefineEntitySchema request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDefineEntitySchemaResponse
 */
export type GrpcDefineEntitySchemaResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDefineEntitySchemaResponse"> & {
  /**
   * Newly created entity schema.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntitySchema entitySchema = 1;
   */
  entitySchema?: GrpcEntitySchema;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDefineEntitySchemaResponse.
 * Use `create(GrpcDefineEntitySchemaResponseSchema)` to create a new message.
 */
export const GrpcDefineEntitySchemaResponseSchema: GenMessage<GrpcDefineEntitySchemaResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 15);

/**
 * Request for updating the schema of an existing entity type.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpdateEntitySchemaRequest
 */
export type GrpcUpdateEntitySchemaRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpdateEntitySchemaRequest"> & {
  /**
   * Wrapper that holds the entity type and the collection of EntitySchemaMutations to be applied.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaMutation schemaMutation = 1;
   */
  schemaMutation?: GrpcModifyEntitySchemaMutation;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpdateEntitySchemaRequest.
 * Use `create(GrpcUpdateEntitySchemaRequestSchema)` to create a new message.
 */
export const GrpcUpdateEntitySchemaRequestSchema: GenMessage<GrpcUpdateEntitySchemaRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 16);

/**
 * Response to UpdateEntitySchema request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpdateEntitySchemaResponse
 */
export type GrpcUpdateEntitySchemaResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpdateEntitySchemaResponse"> & {
  /**
   * The new version of the entity schema.
   *
   * @generated from field: int32 version = 1;
   */
  version: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpdateEntitySchemaResponse.
 * Use `create(GrpcUpdateEntitySchemaResponseSchema)` to create a new message.
 */
export const GrpcUpdateEntitySchemaResponseSchema: GenMessage<GrpcUpdateEntitySchemaResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 17);

/**
 * Request for updating the entity schema and its afterwards fetching.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpdateAndFetchEntitySchemaResponse
 */
export type GrpcUpdateAndFetchEntitySchemaResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpdateAndFetchEntitySchemaResponse"> & {
  /**
   * Modified entity schema.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntitySchema entitySchema = 1;
   */
  entitySchema?: GrpcEntitySchema;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpdateAndFetchEntitySchemaResponse.
 * Use `create(GrpcUpdateAndFetchEntitySchemaResponseSchema)` to create a new message.
 */
export const GrpcUpdateAndFetchEntitySchemaResponseSchema: GenMessage<GrpcUpdateAndFetchEntitySchemaResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 18);

/**
 * Request for acquiring an entity.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEntityRequest
 */
export type GrpcEntityRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcEntityRequest"> & {
  /**
   * The primary key of the entity.
   *
   * @generated from field: int32 primaryKey = 1;
   */
  primaryKey: number;

  /**
   * The entity type of the entity.
   *
   * @generated from field: string entityType = 2;
   */
  entityType: string;

  /**
   * The string part of the parametrised query require part.
   *
   * @generated from field: string require = 3;
   */
  require: string;

  /**
   * The positional query parameters.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryParam positionalQueryParams = 4;
   */
  positionalQueryParams: GrpcQueryParam[];

  /**
   * The named query parameters.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcQueryParam> namedQueryParams = 5;
   */
  namedQueryParams: { [key: string]: GrpcQueryParam };

  /**
   * The set of scopes to search for the entity.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityScope scopes = 6;
   */
  scopes: GrpcEntityScope[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEntityRequest.
 * Use `create(GrpcEntityRequestSchema)` to create a new message.
 */
export const GrpcEntityRequestSchema: GenMessage<GrpcEntityRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 19);

/**
 * Response to GetEntity request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEntityResponse
 */
export type GrpcEntityResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEntityResponse"> & {
  /**
   * The found entity.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSealedEntity entity = 1;
   */
  entity?: GrpcSealedEntity;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEntityResponse.
 * Use `create(GrpcEntityResponseSchema)` to create a new message.
 */
export const GrpcEntityResponseSchema: GenMessage<GrpcEntityResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 20);

/**
 * Structure that represents a pagination within a data chunk.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcPaginatedList
 */
export type GrpcPaginatedList = Message<"io.evitadb.externalApi.grpc.generated.GrpcPaginatedList"> & {
  /**
   * The size of the page.
   *
   * @generated from field: int32 pageSize = 1;
   */
  pageSize: number;

  /**
   * The number of the page.
   *
   * @generated from field: int32 pageNumber = 2;
   */
  pageNumber: number;

  /**
   * The number of the last page.
   *
   * @generated from field: int32 lastPageNumber = 3;
   */
  lastPageNumber: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcPaginatedList.
 * Use `create(GrpcPaginatedListSchema)` to create a new message.
 */
export const GrpcPaginatedListSchema: GenMessage<GrpcPaginatedList> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 21);

/**
 * Structure that represents a strip within a data chunk.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcStripList
 */
export type GrpcStripList = Message<"io.evitadb.externalApi.grpc.generated.GrpcStripList"> & {
  /**
   * The size of the strip.
   *
   * @generated from field: int32 limit = 1;
   */
  limit: number;

  /**
   * The offset of the strip - count of records from the beginning to skip.
   *
   * @generated from field: int32 offset = 2;
   */
  offset: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcStripList.
 * Use `create(GrpcStripListSchema)` to create a new message.
 */
export const GrpcStripListSchema: GenMessage<GrpcStripList> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 22);

/**
 * Structure that represents a data chunk of entities. Only one of the entity fields should be set in one response.
 * That is decided by require block in a query, so as the pagination method used.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDataChunk
 */
export type GrpcDataChunk = Message<"io.evitadb.externalApi.grpc.generated.GrpcDataChunk"> & {
  /**
   * Collection of entity references.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityReference entityReferences = 1;
   */
  entityReferences: GrpcEntityReference[];

  /**
   * Collection of sealed entities.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcSealedEntity sealedEntities = 2;
   */
  sealedEntities: GrpcSealedEntity[];

  /**
   * Collection of binary entities.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcBinaryEntity binaryEntities = 3;
   */
  binaryEntities: GrpcBinaryEntity[];

  /**
   * Chunk of the data.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcDataChunk.chunk
   */
  chunk: {
    /**
     * The paginated list.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcPaginatedList paginatedList = 4;
     */
    value: GrpcPaginatedList;
    case: "paginatedList";
  } | {
    /**
     * The strip list.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcStripList stripList = 5;
     */
    value: GrpcStripList;
    case: "stripList";
  } | { case: undefined; value?: undefined };

  /**
   * The total number of records.
   *
   * @generated from field: int32 totalRecordCount = 6;
   */
  totalRecordCount: number;

  /**
   * True, if this is the first page.
   *
   * @generated from field: bool isFirst = 7;
   */
  isFirst: boolean;

  /**
   * True, if this is the last page.
   *
   * @generated from field: bool isLast = 8;
   */
  isLast: boolean;

  /**
   * True, if there is a previous page.
   *
   * @generated from field: bool hasPrevious = 9;
   */
  hasPrevious: boolean;

  /**
   * True, if there is a next page.
   *
   * @generated from field: bool hasNext = 10;
   */
  hasNext: boolean;

  /**
   * True, if this is a single page.
   *
   * @generated from field: bool isSinglePage = 11;
   */
  isSinglePage: boolean;

  /**
   * True, if this is an empty page.
   *
   * @generated from field: bool isEmpty = 12;
   */
  isEmpty: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDataChunk.
 * Use `create(GrpcDataChunkSchema)` to create a new message.
 */
export const GrpcDataChunkSchema: GenMessage<GrpcDataChunk> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 23);

/**
 * Request for deleting an entity collection.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteCollectionRequest
 */
export type GrpcDeleteCollectionRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteCollectionRequest"> & {
  /**
   * The entity type of the collection to be deleted.
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteCollectionRequest.
 * Use `create(GrpcDeleteCollectionRequestSchema)` to create a new message.
 */
export const GrpcDeleteCollectionRequestSchema: GenMessage<GrpcDeleteCollectionRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 24);

/**
 * Response to DeleteCollection request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteCollectionResponse
 */
export type GrpcDeleteCollectionResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteCollectionResponse"> & {
  /**
   * True, if the collection was deleted.
   *
   * @generated from field: bool deleted = 1;
   */
  deleted: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteCollectionResponse.
 * Use `create(GrpcDeleteCollectionResponseSchema)` to create a new message.
 */
export const GrpcDeleteCollectionResponseSchema: GenMessage<GrpcDeleteCollectionResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 25);

/**
 * Request for renaming an entity collection.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRenameCollectionRequest
 */
export type GrpcRenameCollectionRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcRenameCollectionRequest"> & {
  /**
   * The entity type of the collection to be renamed.
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;

  /**
   * The new name of the collection.
   *
   * @generated from field: string newName = 2;
   */
  newName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRenameCollectionRequest.
 * Use `create(GrpcRenameCollectionRequestSchema)` to create a new message.
 */
export const GrpcRenameCollectionRequestSchema: GenMessage<GrpcRenameCollectionRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 26);

/**
 * Response to RenameCollection request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRenameCollectionResponse
 */
export type GrpcRenameCollectionResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcRenameCollectionResponse"> & {
  /**
   * True, if the collection was renamed.
   *
   * @generated from field: bool renamed = 1;
   */
  renamed: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRenameCollectionResponse.
 * Use `create(GrpcRenameCollectionResponseSchema)` to create a new message.
 */
export const GrpcRenameCollectionResponseSchema: GenMessage<GrpcRenameCollectionResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 27);

/**
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcReplaceCollectionRequest
 */
export type GrpcReplaceCollectionRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcReplaceCollectionRequest"> & {
  /**
   * Name of the entity collection that will be replaced and dropped (new name)
   *
   * @generated from field: string entityTypeToBeReplaced = 1;
   */
  entityTypeToBeReplaced: string;

  /**
   * Name of the entity collection that will become the successor of the original collection (old name)
   *
   * @generated from field: string entityTypeToBeReplacedWith = 2;
   */
  entityTypeToBeReplacedWith: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcReplaceCollectionRequest.
 * Use `create(GrpcReplaceCollectionRequestSchema)` to create a new message.
 */
export const GrpcReplaceCollectionRequestSchema: GenMessage<GrpcReplaceCollectionRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 28);

/**
 * Response to ReplaceCollection request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcReplaceCollectionResponse
 */
export type GrpcReplaceCollectionResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcReplaceCollectionResponse"> & {
  /**
   * True, if the collection was replaced.
   *
   * @generated from field: bool replaced = 1;
   */
  replaced: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcReplaceCollectionResponse.
 * Use `create(GrpcReplaceCollectionResponseSchema)` to create a new message.
 */
export const GrpcReplaceCollectionResponseSchema: GenMessage<GrpcReplaceCollectionResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 29);

/**
 * Request for acquiring the size of an entity collection.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEntityCollectionSizeRequest
 */
export type GrpcEntityCollectionSizeRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcEntityCollectionSizeRequest"> & {
  /**
   * The entity type of the collection - (count of entities stored).
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEntityCollectionSizeRequest.
 * Use `create(GrpcEntityCollectionSizeRequestSchema)` to create a new message.
 */
export const GrpcEntityCollectionSizeRequestSchema: GenMessage<GrpcEntityCollectionSizeRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 30);

/**
 * Response to GetEntityCollectionSize request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEntityCollectionSizeResponse
 */
export type GrpcEntityCollectionSizeResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEntityCollectionSizeResponse"> & {
  /**
   * The size of the collection.
   *
   * @generated from field: int32 size = 1;
   */
  size: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEntityCollectionSizeResponse.
 * Use `create(GrpcEntityCollectionSizeResponseSchema)` to create a new message.
 */
export const GrpcEntityCollectionSizeResponseSchema: GenMessage<GrpcEntityCollectionSizeResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 31);

/**
 * Response for Close request that commits or rollbacks the changes in the session.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCloseRequest
 */
export type GrpcCloseRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcCloseRequest"> & {
  /**
   * Contains the requested commit behaviour
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCommitBehavior commitBehaviour = 1;
   */
  commitBehaviour: GrpcCommitBehavior;

  /**
   * Name of the catalog to which the session relates.
   *
   * @generated from field: string catalogName = 2;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCloseRequest.
 * Use `create(GrpcCloseRequestSchema)` to create a new message.
 */
export const GrpcCloseRequestSchema: GenMessage<GrpcCloseRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 32);

/**
 * Response for Close request that commits or rollbacks the changes in the session.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCloseResponse
 */
export type GrpcCloseResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcCloseResponse"> & {
  /**
   * Contains next catalog version
   *
   * @generated from field: int64 catalogVersion = 1 [jstype = JS_STRING];
   */
  catalogVersion: string;

  /**
   * Contains the version of the catalog schema that will be valid at the moment of closing the session.
   * If session relates to a writable transaction, this schema version becomes valid at the moment the next catalog
   * version (i.e. the one that is returned in the response) becomes visible.
   *
   * @generated from field: int32 catalogSchemaVersion = 2;
   */
  catalogSchemaVersion: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCloseResponse.
 * Use `create(GrpcCloseResponseSchema)` to create a new message.
 */
export const GrpcCloseResponseSchema: GenMessage<GrpcCloseResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 33);

/**
 * Request for CloseGrpcCloseWithProgress procedure that commits or rollbacks the changes in the session.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCloseWithProgressRequest
 */
export type GrpcCloseWithProgressRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcCloseWithProgressRequest"> & {
  /**
   * Name of the catalog to which the session relates.
   *
   * @generated from field: string catalogName = 1;
   */
  catalogName: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCloseWithProgressRequest.
 * Use `create(GrpcCloseWithProgressRequestSchema)` to create a new message.
 */
export const GrpcCloseWithProgressRequestSchema: GenMessage<GrpcCloseWithProgressRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 34);

/**
 * Response for CloseGrpcCloseWithProgress request that commits or rollbacks the changes in the session.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCloseWithProgressResponse
 */
export type GrpcCloseWithProgressResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcCloseWithProgressResponse"> & {
  /**
   * Contains next catalog version
   *
   * @generated from field: int64 catalogVersion = 1 [jstype = JS_STRING];
   */
  catalogVersion: string;

  /**
   * Contains the version of the catalog schema that will be valid at the moment of closing the session.
   * If session relates to a writable transaction, this schema version becomes valid at the moment the next catalog
   * version (i.e. the one that is returned in the response) becomes visible.
   *
   * @generated from field: int32 catalogSchemaVersion = 2;
   */
  catalogSchemaVersion: number;

  /**
   * The successfully finished phase of the transaction.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTransactionPhase finishedPhase = 3;
   */
  finishedPhase: GrpcTransactionPhase;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcCloseWithProgressResponse.
 * Use `create(GrpcCloseWithProgressResponseSchema)` to create a new message.
 */
export const GrpcCloseWithProgressResponseSchema: GenMessage<GrpcCloseWithProgressResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 35);

/**
 * Response for GoLiveAndClose request that switches the catalog to ALIVE state and closes the session.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcGoLiveAndCloseResponse
 */
export type GrpcGoLiveAndCloseResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcGoLiveAndCloseResponse"> & {
  /**
   * True, if the catalog was switched to ALIVE state.
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * Contains next catalog version
   *
   * @generated from field: int64 catalogVersion = 2 [jstype = JS_STRING];
   */
  catalogVersion: string;

  /**
   * Contains the version of the catalog schema that will be valid at the moment of closing the session.
   * If session relates to a writable transaction, this schema version becomes valid at the moment the next catalog
   * version (i.e. the one that is returned in the response) becomes visible.
   *
   * @generated from field: int32 catalogSchemaVersion = 3;
   */
  catalogSchemaVersion: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcGoLiveAndCloseResponse.
 * Use `create(GrpcGoLiveAndCloseResponseSchema)` to create a new message.
 */
export const GrpcGoLiveAndCloseResponseSchema: GenMessage<GrpcGoLiveAndCloseResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 36);

/**
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcGoLiveAndCloseWithProgressResponse
 */
export type GrpcGoLiveAndCloseWithProgressResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcGoLiveAndCloseWithProgressResponse"> & {
  /**
   * Contains next catalog version
   *
   * @generated from field: int64 catalogVersion = 1 [jstype = JS_STRING];
   */
  catalogVersion: string;

  /**
   * Contains the version of the catalog schema that will be valid at the moment of closing the session.
   * If session relates to a writable transaction, this schema version becomes valid at the moment the next catalog
   * version (i.e. the one that is returned in the response) becomes visible.
   *
   * @generated from field: int32 catalogSchemaVersion = 2;
   */
  catalogSchemaVersion: number;

  /**
   * The progress of the go live operation in percents.
   *
   * @generated from field: int32 progressInPercent = 3;
   */
  progressInPercent: number;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcGoLiveAndCloseWithProgressResponse.
 * Use `create(GrpcGoLiveAndCloseWithProgressResponseSchema)` to create a new message.
 */
export const GrpcGoLiveAndCloseWithProgressResponseSchema: GenMessage<GrpcGoLiveAndCloseWithProgressResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 37);

/**
 * Response to a catalog backup request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcBackupCatalogRequest
 */
export type GrpcBackupCatalogRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcBackupCatalogRequest"> & {
  /**
   * The moment in time to which the catalog should be backed up. Might be null for current time.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcOffsetDateTime pastMoment = 1;
   */
  pastMoment?: GrpcOffsetDateTime;

  /**
   * True, if the WAL should be included in the backup. Use false if you want to restore catalog in exact state as
   * it was at the pastMoment.
   *
   * @generated from field: bool includingWAL = 2;
   */
  includingWAL: boolean;

  /**
   * precise catalog version to create backup for, or null to create backup for the latest version,
   * when set not null, the pastMoment parameter is ignored
   *
   * @generated from field: google.protobuf.Int64Value catalogVersion = 3;
   */
  catalogVersion?: bigint;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcBackupCatalogRequest.
 * Use `create(GrpcBackupCatalogRequestSchema)` to create a new message.
 */
export const GrpcBackupCatalogRequestSchema: GenMessage<GrpcBackupCatalogRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 38);

/**
 * Response to a catalog backup request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcBackupCatalogResponse
 */
export type GrpcBackupCatalogResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcBackupCatalogResponse"> & {
  /**
   * the task that is used to backup the catalog and getting its progress
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTaskStatus taskStatus = 1;
   */
  taskStatus?: GrpcTaskStatus;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcBackupCatalogResponse.
 * Use `create(GrpcBackupCatalogResponseSchema)` to create a new message.
 */
export const GrpcBackupCatalogResponseSchema: GenMessage<GrpcBackupCatalogResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 39);

/**
 * Response to a catalog full backup request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcFullBackupCatalogResponse
 */
export type GrpcFullBackupCatalogResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcFullBackupCatalogResponse"> & {
  /**
   * the task that is used to backup the catalog and getting its progress
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcTaskStatus taskStatus = 1;
   */
  taskStatus?: GrpcTaskStatus;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcFullBackupCatalogResponse.
 * Use `create(GrpcFullBackupCatalogResponseSchema)` to create a new message.
 */
export const GrpcFullBackupCatalogResponseSchema: GenMessage<GrpcFullBackupCatalogResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 40);

/**
 * Request for acquiring the list of all entity types.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcEntityTypesResponse
 */
export type GrpcEntityTypesResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcEntityTypesResponse"> & {
  /**
   * The list of all entity types.
   *
   * @generated from field: repeated string entityTypes = 1;
   */
  entityTypes: string[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcEntityTypesResponse.
 * Use `create(GrpcEntityTypesResponseSchema)` to create a new message.
 */
export const GrpcEntityTypesResponseSchema: GenMessage<GrpcEntityTypesResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 41);

/**
 * Request for specifying a query to be executed.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcQueryRequest
 */
export type GrpcQueryRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcQueryRequest"> & {
  /**
   * The string part of the parametrised query.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * The positional query parameters.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryParam positionalQueryParams = 2;
   */
  positionalQueryParams: GrpcQueryParam[];

  /**
   * The named query parameters.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcQueryParam> namedQueryParams = 3;
   */
  namedQueryParams: { [key: string]: GrpcQueryParam };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcQueryRequest.
 * Use `create(GrpcQueryRequestSchema)` to create a new message.
 */
export const GrpcQueryRequestSchema: GenMessage<GrpcQueryRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 42);

/**
 * Request for specifying a query to be executed.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcQueryUnsafeRequest
 */
export type GrpcQueryUnsafeRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcQueryUnsafeRequest"> & {
  /**
   * The string part of the parametrised query.
   *
   * @generated from field: string query = 1;
   */
  query: string;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcQueryUnsafeRequest.
 * Use `create(GrpcQueryUnsafeRequestSchema)` to create a new message.
 */
export const GrpcQueryUnsafeRequestSchema: GenMessage<GrpcQueryUnsafeRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 43);

/**
 * Response to Query request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcQueryResponse
 */
export type GrpcQueryResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcQueryResponse"> & {
  /**
   * The fetched record page with entities.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcDataChunk recordPage = 1;
   */
  recordPage?: GrpcDataChunk;

  /**
   * The computed extra results.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcExtraResults extraResults = 2;
   */
  extraResults?: GrpcExtraResults;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcQueryResponse.
 * Use `create(GrpcQueryResponseSchema)` to create a new message.
 */
export const GrpcQueryResponseSchema: GenMessage<GrpcQueryResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 44);

/**
 * Response for query request executed when searched for exactly one entity. The used field is decided by the require block in the query.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcQueryOneResponse
 */
export type GrpcQueryOneResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcQueryOneResponse"> & {
  /**
   * Entity reference of the found entity.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityReference entityReference = 1;
   */
  entityReference?: GrpcEntityReference;

  /**
   * Sealed entity of the found entity.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSealedEntity sealedEntity = 2;
   */
  sealedEntity?: GrpcSealedEntity;

  /**
   * Binary entity of the found entity.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBinaryEntity binaryEntity = 3;
   */
  binaryEntity?: GrpcBinaryEntity;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcQueryOneResponse.
 * Use `create(GrpcQueryOneResponseSchema)` to create a new message.
 */
export const GrpcQueryOneResponseSchema: GenMessage<GrpcQueryOneResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 45);

/**
 * Response for query request executed when searched for a list of entities. The used field is decided by the require block in the query.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcQueryListResponse
 */
export type GrpcQueryListResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcQueryListResponse"> & {
  /**
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEntityReference entityReferences = 1;
   */
  entityReferences: GrpcEntityReference[];

  /**
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcSealedEntity sealedEntities = 2;
   */
  sealedEntities: GrpcSealedEntity[];

  /**
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcBinaryEntity binaryEntities = 3;
   */
  binaryEntities: GrpcBinaryEntity[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcQueryListResponse.
 * Use `create(GrpcQueryListResponseSchema)` to create a new message.
 */
export const GrpcQueryListResponseSchema: GenMessage<GrpcQueryListResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 46);

/**
 * Request for upserting an entity that should return an entity with required richness.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpsertEntityRequest
 */
export type GrpcUpsertEntityRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpsertEntityRequest"> & {
  /**
   * Either Upsert or Delete entity mutation.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityMutation entityMutation = 1;
   */
  entityMutation?: GrpcEntityMutation;

  /**
   * The string part of the parametrised query require part.
   *
   * @generated from field: string require = 2;
   */
  require: string;

  /**
   * The positional query parameters.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryParam positionalQueryParams = 3;
   */
  positionalQueryParams: GrpcQueryParam[];

  /**
   * The named query parameters.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcQueryParam> namedQueryParams = 4;
   */
  namedQueryParams: { [key: string]: GrpcQueryParam };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpsertEntityRequest.
 * Use `create(GrpcUpsertEntityRequestSchema)` to create a new message.
 */
export const GrpcUpsertEntityRequestSchema: GenMessage<GrpcUpsertEntityRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 47);

/**
 * Request for deleting an entity that should return the deleted entity with required richness.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityRequest
 */
export type GrpcDeleteEntityRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityRequest"> & {
  /**
   * Entity type of the entity to be deleted.
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;

  /**
   * Primary key of the entity to be deleted.
   *
   * @generated from field: google.protobuf.Int32Value primaryKey = 2;
   */
  primaryKey?: number;

  /**
   * The string part of the parametrised query require part.
   *
   * @generated from field: string require = 3;
   */
  require: string;

  /**
   * The positional query parameters.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryParam positionalQueryParams = 4;
   */
  positionalQueryParams: GrpcQueryParam[];

  /**
   * The named query parameters.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcQueryParam> namedQueryParams = 5;
   */
  namedQueryParams: { [key: string]: GrpcQueryParam };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityRequest.
 * Use `create(GrpcDeleteEntityRequestSchema)` to create a new message.
 */
export const GrpcDeleteEntityRequestSchema: GenMessage<GrpcDeleteEntityRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 48);

/**
 * Request for deleting an entity that should return the archived entity with required richness.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcArchiveEntityRequest
 */
export type GrpcArchiveEntityRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcArchiveEntityRequest"> & {
  /**
   * Entity type of the entity to be archived.
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;

  /**
   * Primary key of the entity to be archived.
   *
   * @generated from field: google.protobuf.Int32Value primaryKey = 2;
   */
  primaryKey?: number;

  /**
   * The string part of the parametrised query require part.
   *
   * @generated from field: string require = 3;
   */
  require: string;

  /**
   * The positional query parameters.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryParam positionalQueryParams = 4;
   */
  positionalQueryParams: GrpcQueryParam[];

  /**
   * The named query parameters.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcQueryParam> namedQueryParams = 5;
   */
  namedQueryParams: { [key: string]: GrpcQueryParam };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcArchiveEntityRequest.
 * Use `create(GrpcArchiveEntityRequestSchema)` to create a new message.
 */
export const GrpcArchiveEntityRequestSchema: GenMessage<GrpcArchiveEntityRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 49);

/**
 * Request for deleting an entity that should return the restored entity with required richness.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreEntityRequest
 */
export type GrpcRestoreEntityRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreEntityRequest"> & {
  /**
   * Entity type of the entity to be restored.
   *
   * @generated from field: string entityType = 1;
   */
  entityType: string;

  /**
   * Primary key of the entity to be restored.
   *
   * @generated from field: google.protobuf.Int32Value primaryKey = 2;
   */
  primaryKey?: number;

  /**
   * The string part of the parametrised query require part.
   *
   * @generated from field: string require = 3;
   */
  require: string;

  /**
   * The positional query parameters.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryParam positionalQueryParams = 4;
   */
  positionalQueryParams: GrpcQueryParam[];

  /**
   * The named query parameters.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcQueryParam> namedQueryParams = 5;
   */
  namedQueryParams: { [key: string]: GrpcQueryParam };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreEntityRequest.
 * Use `create(GrpcRestoreEntityRequestSchema)` to create a new message.
 */
export const GrpcRestoreEntityRequestSchema: GenMessage<GrpcRestoreEntityRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 50);

/**
 * Request for deleting a collection of entities specified by a query.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntitiesRequest
 */
export type GrpcDeleteEntitiesRequest = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteEntitiesRequest"> & {
  /**
   * The string part of the parametrised query.
   *
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * The positional query parameters.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcQueryParam positionalQueryParams = 2;
   */
  positionalQueryParams: GrpcQueryParam[];

  /**
   * The named query parameters.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcQueryParam> namedQueryParams = 3;
   */
  namedQueryParams: { [key: string]: GrpcQueryParam };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntitiesRequest.
 * Use `create(GrpcDeleteEntitiesRequestSchema)` to create a new message.
 */
export const GrpcDeleteEntitiesRequestSchema: GenMessage<GrpcDeleteEntitiesRequest> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 51);

/**
 * Response to UpsertEntity request. The used field is decided by the require block in the query.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUpsertEntityResponse
 */
export type GrpcUpsertEntityResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcUpsertEntityResponse"> & {
  /**
   * The upserted entity.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcUpsertEntityResponse.response
   */
  response: {
    /**
     * The upserted entity reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityReference entityReference = 1;
     */
    value: GrpcEntityReference;
    case: "entityReference";
  } | {
    /**
     * The upserted entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSealedEntity entity = 2;
     */
    value: GrpcSealedEntity;
    case: "entity";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcUpsertEntityResponse.
 * Use `create(GrpcUpsertEntityResponseSchema)` to create a new message.
 */
export const GrpcUpsertEntityResponseSchema: GenMessage<GrpcUpsertEntityResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 52);

/**
 * Response to DeleteEntity request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityResponse
 */
export type GrpcDeleteEntityResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityResponse"> & {
  /**
   * The deleted entity. The used field is decided by the require block in the query.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityResponse.response
   */
  response: {
    /**
     * The deleted entity reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityReference entityReference = 1;
     */
    value: GrpcEntityReference;
    case: "entityReference";
  } | {
    /**
     * The deleted entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSealedEntity entity = 2;
     */
    value: GrpcSealedEntity;
    case: "entity";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityResponse.
 * Use `create(GrpcDeleteEntityResponseSchema)` to create a new message.
 */
export const GrpcDeleteEntityResponseSchema: GenMessage<GrpcDeleteEntityResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 53);

/**
 * Response to ArchiveEntity request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcArchiveEntityResponse
 */
export type GrpcArchiveEntityResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcArchiveEntityResponse"> & {
  /**
   * The archived entity. The used field is decided by the require block in the query.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcArchiveEntityResponse.response
   */
  response: {
    /**
     * The archived entity reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityReference entityReference = 1;
     */
    value: GrpcEntityReference;
    case: "entityReference";
  } | {
    /**
     * The archived entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSealedEntity entity = 2;
     */
    value: GrpcSealedEntity;
    case: "entity";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcArchiveEntityResponse.
 * Use `create(GrpcArchiveEntityResponseSchema)` to create a new message.
 */
export const GrpcArchiveEntityResponseSchema: GenMessage<GrpcArchiveEntityResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 54);

/**
 * Response to RestoreEntity request.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRestoreEntityResponse
 */
export type GrpcRestoreEntityResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcRestoreEntityResponse"> & {
  /**
   * The restored entity. The used field is decided by the require block in the query.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcRestoreEntityResponse.response
   */
  response: {
    /**
     * The restored entity reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityReference entityReference = 1;
     */
    value: GrpcEntityReference;
    case: "entityReference";
  } | {
    /**
     * The restored entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSealedEntity entity = 2;
     */
    value: GrpcSealedEntity;
    case: "entity";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcRestoreEntityResponse.
 * Use `create(GrpcRestoreEntityResponseSchema)` to create a new message.
 */
export const GrpcRestoreEntityResponseSchema: GenMessage<GrpcRestoreEntityResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 55);

/**
 * Response to DeleteEntity request when hierarchy has been specified in filter.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityAndItsHierarchyResponse
 */
export type GrpcDeleteEntityAndItsHierarchyResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityAndItsHierarchyResponse"> & {
  /**
   * Count of deleted entities.
   *
   * @generated from field: int32 deletedEntities = 1;
   */
  deletedEntities: number;

  /**
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityAndItsHierarchyResponse.response
   */
  response: {
    /**
     * The deleted root entity reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEntityReference deletedRootEntityReference = 2;
     */
    value: GrpcEntityReference;
    case: "deletedRootEntityReference";
  } | {
    /**
     * The deleted root entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSealedEntity deletedRootEntity = 3;
     */
    value: GrpcSealedEntity;
    case: "deletedRootEntity";
  } | { case: undefined; value?: undefined };

  /**
   * Deleted entity primary keys.
   *
   * @generated from field: repeated int32 deletedEntityPrimaryKeys = 4;
   */
  deletedEntityPrimaryKeys: number[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntityAndItsHierarchyResponse.
 * Use `create(GrpcDeleteEntityAndItsHierarchyResponseSchema)` to create a new message.
 */
export const GrpcDeleteEntityAndItsHierarchyResponseSchema: GenMessage<GrpcDeleteEntityAndItsHierarchyResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 56);

/**
 * Response to DeleteEntities request that deletes all entities that match the sent query..
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntitiesResponse
 */
export type GrpcDeleteEntitiesResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcDeleteEntitiesResponse"> & {
  /**
   * Count of deleted entities.
   *
   * @generated from field: int32 deletedEntities = 1;
   */
  deletedEntities: number;

  /**
   * The deleted entity bodies.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcSealedEntity deletedEntityBodies = 2;
   */
  deletedEntityBodies: GrpcSealedEntity[];
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcDeleteEntitiesResponse.
 * Use `create(GrpcDeleteEntitiesResponseSchema)` to create a new message.
 */
export const GrpcDeleteEntitiesResponseSchema: GenMessage<GrpcDeleteEntitiesResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 57);

/**
 * Request for opening a transaction.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTransactionResponse
 */
export type GrpcTransactionResponse = Message<"io.evitadb.externalApi.grpc.generated.GrpcTransactionResponse"> & {
  /**
   * The current version of the catalog the transaction is bound to.
   *
   * @generated from field: int64 catalogVersion = 1 [jstype = JS_STRING];
   */
  catalogVersion: string;

  /**
   * The id of the opened transaction.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUuid transactionId = 2;
   */
  transactionId?: GrpcUuid;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcTransactionResponse.
 * Use `create(GrpcTransactionResponseSchema)` to create a new message.
 */
export const GrpcTransactionResponseSchema: GenMessage<GrpcTransactionResponse> = /*@__PURE__*/
  messageDesc(file_GrpcEvitaSessionAPI, 58);

/**
 * This service contains RPCs that could be called by gRPC clients on evitaDB's catalog by usage of a before created session.
 * By specifying its UUID and the name of a catalog to which it corresponds to it's possible to execute methods that in
 * evitaDB's implementation a called on an instance of EvitaSessionContract.
 *
 * Main purpose of this service is to provide a way to manipulate with stored entity collections and their schemas. That
 * includes their creating, updating and deleting. Same operations could be done with entities, which in addition could
 * be fetched by specifying a complex queries.
 *
 * @generated from service io.evitadb.externalApi.grpc.generated.EvitaSessionService
 */
export const EvitaSessionService: GenService<{
  /**
   * Procedure that returns the current (the one on which the used session operates) catalog schema.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetCatalogSchema
   */
  getCatalogSchema: {
    methodKind: "unary";
    input: typeof GrpcGetCatalogSchemaRequestSchema;
    output: typeof GrpcCatalogSchemaResponseSchema;
  },
  /**
   * Procedure that returns the current state of the catalog.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetCatalogState
   */
  getCatalogState: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcCatalogStateResponseSchema;
  },
  /**
   * Procedure that returns the version of the catalog at a specific moment in time.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetCatalogVersionAt
   */
  getCatalogVersionAt: {
    methodKind: "unary";
    input: typeof GrpcCatalogVersionAtRequestSchema;
    output: typeof GrpcCatalogVersionAtResponseSchema;
  },
  /**
   * Procedure that returns requested page of past mutations in reversed order that match the request criteria.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetMutationsHistoryPage
   */
  getMutationsHistoryPage: {
    methodKind: "unary";
    input: typeof GetMutationsHistoryPageRequestSchema;
    output: typeof GetMutationsHistoryPageResponseSchema;
  },
  /**
   * Procedure that returns stream of all past mutations in reversed order that match the request criteria.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetMutationsHistory
   */
  getMutationsHistory: {
    methodKind: "server_streaming";
    input: typeof GetMutationsHistoryRequestSchema;
    output: typeof GetMutationsHistoryResponseSchema;
  },
  /**
   * Procedure that returns the schema of a specific entity type.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetEntitySchema
   */
  getEntitySchema: {
    methodKind: "unary";
    input: typeof GrpcEntitySchemaRequestSchema;
    output: typeof GrpcEntitySchemaResponseSchema;
  },
  /**
   * Procedure that returns the list of all entity types.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetAllEntityTypes
   */
  getAllEntityTypes: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcEntityTypesResponseSchema;
  },
  /**
   * Procedure that changes the state of the catalog to ALIVE and closes the session.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GoLiveAndClose
   */
  goLiveAndClose: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcGoLiveAndCloseResponseSchema;
  },
  /**
   * Procedure that changes the state of the catalog to ALIVE and closes the session opening a stream that listens
   * to updates of go live procedure.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GoLiveAndCloseWithProgress
   */
  goLiveAndCloseWithProgress: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof GrpcGoLiveAndCloseWithProgressResponseSchema;
  },
  /**
   * Procedure used to backup an existing catalog.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.BackupCatalog
   */
  backupCatalog: {
    methodKind: "unary";
    input: typeof GrpcBackupCatalogRequestSchema;
    output: typeof GrpcBackupCatalogResponseSchema;
  },
  /**
   * Procedure used to backup an existing catalog.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.FullBackupCatalog
   */
  fullBackupCatalog: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcFullBackupCatalogResponseSchema;
  },
  /**
   * Procedure that closes the session.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.Close
   */
  close: {
    methodKind: "unary";
    input: typeof GrpcCloseRequestSchema;
    output: typeof GrpcCloseResponseSchema;
  },
  /**
   * Procedure that closes the session opening a stream that listens to transaction processing phases.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.CloseWithProgress
   */
  closeWithProgress: {
    methodKind: "server_streaming";
    input: typeof GrpcCloseWithProgressRequestSchema;
    output: typeof GrpcCloseWithProgressResponseSchema;
  },
  /**
   * Procedure that executes passed parametrised query and returns zero or one entity.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryOne
   */
  queryOne: {
    methodKind: "unary";
    input: typeof GrpcQueryRequestSchema;
    output: typeof GrpcQueryOneResponseSchema;
  },
  /**
   * Procedure that executes passed parametrised query and returns a list of entities.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryList
   */
  queryList: {
    methodKind: "unary";
    input: typeof GrpcQueryRequestSchema;
    output: typeof GrpcQueryListResponseSchema;
  },
  /**
   * Procedure that executes passed parametrised query and returns a data chunk with computed extra results.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.Query
   */
  query: {
    methodKind: "unary";
    input: typeof GrpcQueryRequestSchema;
    output: typeof GrpcQueryResponseSchema;
  },
  /**
   * Procedure that executes passed query with embedded variables and returns zero or one entity.
   * Do not use in your applications! This method is unsafe and should be used only for internal purposes.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryOneUnsafe
   */
  queryOneUnsafe: {
    methodKind: "unary";
    input: typeof GrpcQueryUnsafeRequestSchema;
    output: typeof GrpcQueryOneResponseSchema;
  },
  /**
   * Procedure that executes passed query with embedded variables and returns a list of entities.
   * Do not use in your applications! This method is unsafe and should be used only for internal purposes.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryListUnsafe
   */
  queryListUnsafe: {
    methodKind: "unary";
    input: typeof GrpcQueryUnsafeRequestSchema;
    output: typeof GrpcQueryListResponseSchema;
  },
  /**
   * Procedure that executes passed query with embedded variables and returns a data chunk with computed extra results.
   * Do not use in your applications! This method is unsafe and should be used only for internal purposes.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.QueryUnsafe
   */
  queryUnsafe: {
    methodKind: "unary";
    input: typeof GrpcQueryUnsafeRequestSchema;
    output: typeof GrpcQueryResponseSchema;
  },
  /**
   * Procedure that find entity by passed entity type and primary key and return it by specified richness by passed parametrised require query part.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetEntity
   */
  getEntity: {
    methodKind: "unary";
    input: typeof GrpcEntityRequestSchema;
    output: typeof GrpcEntityResponseSchema;
  },
  /**
   * Procedure that updates the catalog schema and return its updated version.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateCatalogSchema
   */
  updateCatalogSchema: {
    methodKind: "unary";
    input: typeof GrpcUpdateCatalogSchemaRequestSchema;
    output: typeof GrpcUpdateCatalogSchemaResponseSchema;
  },
  /**
   * Procedure that updates the catalog schema and returns it.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateAndFetchCatalogSchema
   */
  updateAndFetchCatalogSchema: {
    methodKind: "unary";
    input: typeof GrpcUpdateCatalogSchemaRequestSchema;
    output: typeof GrpcUpdateAndFetchCatalogSchemaResponseSchema;
  },
  /**
   * Procedure that defines the schema of a new entity type and return it.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DefineEntitySchema
   */
  defineEntitySchema: {
    methodKind: "unary";
    input: typeof GrpcDefineEntitySchemaRequestSchema;
    output: typeof GrpcDefineEntitySchemaResponseSchema;
  },
  /**
   * Procedure that updates the schema of an existing entity type and return its updated version.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateEntitySchema
   */
  updateEntitySchema: {
    methodKind: "unary";
    input: typeof GrpcUpdateEntitySchemaRequestSchema;
    output: typeof GrpcUpdateEntitySchemaResponseSchema;
  },
  /**
   * Procedure that updates the schema of an existing entity type and returns it.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpdateAndFetchEntitySchema
   */
  updateAndFetchEntitySchema: {
    methodKind: "unary";
    input: typeof GrpcUpdateEntitySchemaRequestSchema;
    output: typeof GrpcUpdateAndFetchEntitySchemaResponseSchema;
  },
  /**
   * Procedure that deletes an entity collection.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteCollection
   */
  deleteCollection: {
    methodKind: "unary";
    input: typeof GrpcDeleteCollectionRequestSchema;
    output: typeof GrpcDeleteCollectionResponseSchema;
  },
  /**
   * Procedure that renames an entity collection.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.RenameCollection
   */
  renameCollection: {
    methodKind: "unary";
    input: typeof GrpcRenameCollectionRequestSchema;
    output: typeof GrpcRenameCollectionResponseSchema;
  },
  /**
   * Procedure that replaces an entity collection.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.ReplaceCollection
   */
  replaceCollection: {
    methodKind: "unary";
    input: typeof GrpcReplaceCollectionRequestSchema;
    output: typeof GrpcReplaceCollectionResponseSchema;
  },
  /**
   * Procedure that returns the size of an entity collection.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetEntityCollectionSize
   */
  getEntityCollectionSize: {
    methodKind: "unary";
    input: typeof GrpcEntityCollectionSizeRequestSchema;
    output: typeof GrpcEntityCollectionSizeResponseSchema;
  },
  /**
   * Procedure that upserts (inserts/updates) an entity and returns it with required richness.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.UpsertEntity
   */
  upsertEntity: {
    methodKind: "unary";
    input: typeof GrpcUpsertEntityRequestSchema;
    output: typeof GrpcUpsertEntityResponseSchema;
  },
  /**
   * Procedure that deletes an entity and returns it with required richness.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteEntity
   */
  deleteEntity: {
    methodKind: "unary";
    input: typeof GrpcDeleteEntityRequestSchema;
    output: typeof GrpcDeleteEntityResponseSchema;
  },
  /**
   * Procedure that deletes an entity and its hierarchy and returns the root entity with required richness.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteEntityAndItsHierarchy
   */
  deleteEntityAndItsHierarchy: {
    methodKind: "unary";
    input: typeof GrpcDeleteEntityRequestSchema;
    output: typeof GrpcDeleteEntityAndItsHierarchyResponseSchema;
  },
  /**
   * Procedure that deletes all entities that match the sent query and returns their bodies.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.DeleteEntities
   */
  deleteEntities: {
    methodKind: "unary";
    input: typeof GrpcDeleteEntitiesRequestSchema;
    output: typeof GrpcDeleteEntitiesResponseSchema;
  },
  /**
   * Procedure that archives an entity and returns it with required richness.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.ArchiveEntity
   */
  archiveEntity: {
    methodKind: "unary";
    input: typeof GrpcArchiveEntityRequestSchema;
    output: typeof GrpcArchiveEntityResponseSchema;
  },
  /**
   * Procedure that restores an entity and returns it with required richness.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.RestoreEntity
   */
  restoreEntity: {
    methodKind: "unary";
    input: typeof GrpcRestoreEntityRequestSchema;
    output: typeof GrpcRestoreEntityResponseSchema;
  },
  /**
   * Procedure that opens a transaction.
   *
   * @generated from rpc io.evitadb.externalApi.grpc.generated.EvitaSessionService.GetTransactionId
   */
  getTransactionId: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GrpcTransactionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_GrpcEvitaSessionAPI, 0);

