// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file GrpcAttribute.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { GrpcEvitaValue } from "./GrpcEvitaDataTypes_pb.js";

/**
 * This structure is used as a wrapper around the attribute map for the purpose of separation the global attributes from the localized ones.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcLocalizedAttribute
 */
export class GrpcLocalizedAttribute extends Message<GrpcLocalizedAttribute> {
  /**
   * The map, where the key is the name of the attribute and the value is its value.
   * The localization is held on the entity or the reference level respectively - specific language tag is used as a key
   * of the outer map on the SealedEntity level.
   *
   * @generated from field: map<string, io.evitadb.externalApi.grpc.generated.GrpcEvitaValue> attributes = 1;
   */
  attributes: { [key: string]: GrpcEvitaValue } = {};

  constructor(data?: PartialMessage<GrpcLocalizedAttribute>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcLocalizedAttribute";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attributes", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: GrpcEvitaValue} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcLocalizedAttribute {
    return new GrpcLocalizedAttribute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcLocalizedAttribute {
    return new GrpcLocalizedAttribute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcLocalizedAttribute {
    return new GrpcLocalizedAttribute().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcLocalizedAttribute | PlainMessage<GrpcLocalizedAttribute> | undefined, b: GrpcLocalizedAttribute | PlainMessage<GrpcLocalizedAttribute> | undefined): boolean {
    return proto3.util.equals(GrpcLocalizedAttribute, a, b);
  }
}

