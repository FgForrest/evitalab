// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file GrpcPrice.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { GrpcBigDecimal, GrpcCurrency, GrpcDateTimeRange } from "./GrpcEvitaDataTypes_pb";
import { file_GrpcEvitaDataTypes } from "./GrpcEvitaDataTypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file GrpcPrice.proto.
 */
export const file_GrpcPrice: GenFile = /*@__PURE__*/
  fileDesc("Cg9HcnBjUHJpY2UucHJvdG8SJWlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQikwQKCUdycGNQcmljZRIPCgdwcmljZUlkGAEgASgFEhEKCXByaWNlTGlzdBgCIAEoCRJFCghjdXJyZW5jeRgDIAEoCzIzLmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0N1cnJlbmN5EjIKDWlubmVyUmVjb3JkSWQYBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRJOCg9wcmljZVdpdGhvdXRUYXgYBSABKAsyNS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNCaWdEZWNpbWFsEkYKB3RheFJhdGUYBiABKAsyNS5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNCaWdEZWNpbWFsEksKDHByaWNlV2l0aFRheBgHIAEoCzI1LmlvLmV2aXRhZGIuZXh0ZXJuYWxBcGkuZ3JwYy5nZW5lcmF0ZWQuR3JwY0JpZ0RlY2ltYWwSSgoIdmFsaWRpdHkYCCABKAsyOC5pby5ldml0YWRiLmV4dGVybmFsQXBpLmdycGMuZ2VuZXJhdGVkLkdycGNEYXRlVGltZVJhbmdlEhQKCHNlbGxhYmxlGAkgASgIQgIYARIPCgd2ZXJzaW9uGAogASgFEg8KB2luZGV4ZWQYCyABKAhCDFABqgIHRXZpdGFEQmIGcHJvdG8z", [file_google_protobuf_wrappers, file_GrpcEvitaDataTypes]);

/**
 * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce systems
 * and highly affects performance of the entities filtering and sorting, they deserve first class support in entity model.
 * It is pretty common in B2B systems single product has assigned dozens of prices for the different customers.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcPrice
 */
export type GrpcPrice = Message<"io.evitadb.externalApi.grpc.generated.GrpcPrice"> & {
  /**
   * Contains identification of the price in the external systems. This id is expected to be used for the synchronization
   * of the price in relation with the primary source of the prices.
   * This id is used to uniquely find a price within same price list and currency and is mandatory.
   *
   * @generated from field: int32 priceId = 1;
   */
  priceId: number;

  /**
   * Contains identification of the price list in the external system. Each price must reference a price list. Price list
   * identification may refer to another Evita entity or may contain any external price list identification
   * (for example id or unique name of the price list in the external system).
   * Single entity is expected to have single price for the price list unless there is validity specified.
   * In other words there is no sense to have multiple concurrently valid prices for the same entity that have roots
   * in the same price list.
   *
   * @generated from field: string priceList = 2;
   */
  priceList: string;

  /**
   * Identification of the currency.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCurrency currency = 3;
   */
  currency?: GrpcCurrency;

  /**
   * Some special products (such as master products, or product sets) may contain prices of all "subordinate" products
   * so that the aggregating product can represent them in certain views on the product. In that case there is need
   * to distinguish the projected prices of the subordinate product in the one that represents them.
   * Inner record id must contain positive value.
   *
   * @generated from field: google.protobuf.Int32Value innerRecordId = 4;
   */
  innerRecordId?: number;

  /**
   * Price without tax.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimal priceWithoutTax = 5;
   */
  priceWithoutTax?: GrpcBigDecimal;

  /**
   * Price with tax.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimal taxRate = 6;
   */
  taxRate?: GrpcBigDecimal;

  /**
   * Tax rate percentage (i.e. for 19% it'll be 19.00)
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcBigDecimal priceWithTax = 7;
   */
  priceWithTax?: GrpcBigDecimal;

  /**
   * Date and time interval for which the price is valid (inclusive).
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcDateTimeRange validity = 8;
   */
  validity?: GrpcDateTimeRange;

  /**
   * Controls whether price is subject to filtering / sorting logic, non-sellable prices will be fetched along with
   * entity but won't be considered when evaluating search. These prices may be
   * used for "informational" prices such as reference price (the crossed out price often found on e-commerce sites
   * as "usual price") but are not considered as the "selling" price.
   * RENAMED TO "indexed"
   *
   * @generated from field: bool sellable = 9 [deprecated = true];
   * @deprecated
   */
  sellable: boolean;

  /**
   * Contains version of this price and gets increased with any entity type update. Allows to execute
   * optimistic locking i.e. avoiding parallel modifications.
   *
   * @generated from field: int32 version = 10;
   */
  version: number;

  /**
   * Controls whether price is subject to filtering / sorting logic, non-sellable prices will be fetched along with
   * entity but won't be considered when evaluating search. These prices may be
   * used for "informational" prices such as reference price (the crossed out price often found on e-commerce sites
   * as "usual price") but are not considered as the "selling" price.
   *
   * @generated from field: bool indexed = 11;
   */
  indexed: boolean;
};

/**
 * Describes the message io.evitadb.externalApi.grpc.generated.GrpcPrice.
 * Use `create(GrpcPriceSchema)` to create a new message.
 */
export const GrpcPriceSchema: GenMessage<GrpcPrice> = /*@__PURE__*/
  messageDesc(file_GrpcPrice, 0);

