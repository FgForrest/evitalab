// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file GrpcCatalogSchemaMutation.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { GrpcAllowEvolutionModeInCatalogSchemaMutation, GrpcCreateCatalogSchemaMutation, GrpcCreateEntitySchemaMutation, GrpcDisallowEvolutionModeInCatalogSchemaMutation, GrpcModifyCatalogSchemaDescriptionMutation, GrpcModifyCatalogSchemaNameMutation, GrpcModifyEntitySchemaMutation, GrpcModifyEntitySchemaNameMutation, GrpcRemoveCatalogSchemaMutation, GrpcRemoveEntitySchemaMutation } from "./GrpcCatalogSchemaMutations_pb.js";
import { GrpcCreateGlobalAttributeSchemaMutation, GrpcModifyAttributeSchemaDefaultValueMutation, GrpcModifyAttributeSchemaDeprecationNoticeMutation, GrpcModifyAttributeSchemaDescriptionMutation, GrpcModifyAttributeSchemaNameMutation, GrpcModifyAttributeSchemaTypeMutation, GrpcRemoveAttributeSchemaMutation, GrpcSetAttributeSchemaFilterableMutation, GrpcSetAttributeSchemaGloballyUniqueMutation, GrpcSetAttributeSchemaLocalizedMutation, GrpcSetAttributeSchemaNullableMutation, GrpcSetAttributeSchemaRepresentativeMutation, GrpcSetAttributeSchemaSortableMutation, GrpcSetAttributeSchemaUniqueMutation } from "./GrpcAttributeSchemaMutations_pb.js";

/**
 * Contains all possible catalog schema mutations.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation
 */
export class GrpcLocalCatalogSchemaMutation extends Message<GrpcLocalCatalogSchemaMutation> {
  /**
   * The used local catalog mutation.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation.mutation
   */
  mutation: {
    /**
     * Mutation is responsible for setting value to a `CatalogSchema.description` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaDescriptionMutation modifyCatalogSchemaDescriptionMutation = 1;
     */
    value: GrpcModifyCatalogSchemaDescriptionMutation;
    case: "modifyCatalogSchemaDescriptionMutation";
  } | {
    /**
     * Mutation is responsible for adding one or more modes to a `CatalogSchema.catalogEvolutionMode` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAllowEvolutionModeInCatalogSchemaMutation allowEvolutionModeInCatalogSchemaMutation = 2;
     */
    value: GrpcAllowEvolutionModeInCatalogSchemaMutation;
    case: "allowEvolutionModeInCatalogSchemaMutation";
  } | {
    /**
     * Mutation is responsible for removing one or more modes from a `CatalogSchema.evolutionMode` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcDisallowEvolutionModeInCatalogSchemaMutation disallowEvolutionModeInCatalogSchemaMutation = 3;
     */
    value: GrpcDisallowEvolutionModeInCatalogSchemaMutation;
    case: "disallowEvolutionModeInCatalogSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting up a new `GlobalAttributeSchema` in the `CatalogSchema`.
     * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateGlobalAttributeSchemaMutation createGlobalAttributeSchemaMutation = 4;
     */
    value: GrpcCreateGlobalAttributeSchemaMutation;
    case: "createGlobalAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.defaultValue` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation modifyAttributeSchemaDefaultValueMutation = 5;
     */
    value: GrpcModifyAttributeSchemaDefaultValueMutation;
    case: "modifyAttributeSchemaDefaultValueMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.defaultValue` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation modifyAttributeSchemaDeprecationNoticeMutation = 6;
     */
    value: GrpcModifyAttributeSchemaDeprecationNoticeMutation;
    case: "modifyAttributeSchemaDeprecationNoticeMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.description` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation modifyAttributeSchemaDescriptionMutation = 7;
     */
    value: GrpcModifyAttributeSchemaDescriptionMutation;
    case: "modifyAttributeSchemaDescriptionMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing `AttributeSchema` in `EntitySchema` or `GlobalAttributeSchema`
     * in `CatalogSchema`. Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation modifyAttributeSchemaNameMutation = 8;
     */
    value: GrpcModifyAttributeSchemaNameMutation;
    case: "modifyAttributeSchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.type` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation modifyAttributeSchemaTypeMutation = 9;
     */
    value: GrpcModifyAttributeSchemaTypeMutation;
    case: "modifyAttributeSchemaTypeMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing `AttributeSchema` in the `EntitySchema` or `GlobalAttributeSchema`
     * in the `CatalogSchema`. Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation removeAttributeSchemaMutation = 10;
     */
    value: GrpcRemoveAttributeSchemaMutation;
    case: "removeAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.filterable` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation setAttributeSchemaFilterableMutation = 11;
     */
    value: GrpcSetAttributeSchemaFilterableMutation;
    case: "setAttributeSchemaFilterableMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.localized`in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or`GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation setAttributeSchemaLocalizedMutation = 12;
     */
    value: GrpcSetAttributeSchemaLocalizedMutation;
    case: "setAttributeSchemaLocalizedMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.nullable` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation setAttributeSchemaNullableMutation = 13;
     */
    value: GrpcSetAttributeSchemaNullableMutation;
    case: "setAttributeSchemaNullableMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.representative` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation setAttributeSchemaRepresentativeMutation = 14;
     */
    value: GrpcSetAttributeSchemaRepresentativeMutation;
    case: "setAttributeSchemaRepresentativeMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.sortable` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation setAttributeSchemaSortableMutation = 15;
     */
    value: GrpcSetAttributeSchemaSortableMutation;
    case: "setAttributeSchemaSortableMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `AttributeSchema.unique` in `EntitySchema`.
     * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation setAttributeSchemaUniqueMutation = 16;
     */
    value: GrpcSetAttributeSchemaUniqueMutation;
    case: "setAttributeSchemaUniqueMutation";
  } | {
    /**
     * Mutation is responsible for setting value to a `GlobalAttributeSchema.uniqueGlobally` in `EntitySchema`.
     * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaGloballyUniqueMutation setAttributeSchemaGloballyUniqueMutation = 17;
     */
    value: GrpcSetAttributeSchemaGloballyUniqueMutation;
    case: "setAttributeSchemaGloballyUniqueMutation";
  } | {
    /**
     * Mutation is responsible for setting up a new `EntitySchema` - or more precisely the collection within catalog.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateEntitySchemaMutation createEntitySchemaMutation = 30;
     */
    value: GrpcCreateEntitySchemaMutation;
    case: "createEntitySchemaMutation";
  } | {
    /**
     * Mutation is a holder for a set of `EntitySchemaMutation` that affect a single entity schema within the `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaMutation modifyEntitySchemaMutation = 31;
     */
    value: GrpcModifyEntitySchemaMutation;
    case: "modifyEntitySchemaMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaNameMutation modifyEntitySchemaNameMutation = 32;
     */
    value: GrpcModifyEntitySchemaNameMutation;
    case: "modifyEntitySchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing `EntitySchema` - or more precisely the entity collection instance itself.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveEntitySchemaMutation removeEntitySchemaMutation = 33;
     */
    value: GrpcRemoveEntitySchemaMutation;
    case: "removeEntitySchemaMutation";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcLocalCatalogSchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcLocalCatalogSchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "modifyCatalogSchemaDescriptionMutation", kind: "message", T: GrpcModifyCatalogSchemaDescriptionMutation, oneof: "mutation" },
    { no: 2, name: "allowEvolutionModeInCatalogSchemaMutation", kind: "message", T: GrpcAllowEvolutionModeInCatalogSchemaMutation, oneof: "mutation" },
    { no: 3, name: "disallowEvolutionModeInCatalogSchemaMutation", kind: "message", T: GrpcDisallowEvolutionModeInCatalogSchemaMutation, oneof: "mutation" },
    { no: 4, name: "createGlobalAttributeSchemaMutation", kind: "message", T: GrpcCreateGlobalAttributeSchemaMutation, oneof: "mutation" },
    { no: 5, name: "modifyAttributeSchemaDefaultValueMutation", kind: "message", T: GrpcModifyAttributeSchemaDefaultValueMutation, oneof: "mutation" },
    { no: 6, name: "modifyAttributeSchemaDeprecationNoticeMutation", kind: "message", T: GrpcModifyAttributeSchemaDeprecationNoticeMutation, oneof: "mutation" },
    { no: 7, name: "modifyAttributeSchemaDescriptionMutation", kind: "message", T: GrpcModifyAttributeSchemaDescriptionMutation, oneof: "mutation" },
    { no: 8, name: "modifyAttributeSchemaNameMutation", kind: "message", T: GrpcModifyAttributeSchemaNameMutation, oneof: "mutation" },
    { no: 9, name: "modifyAttributeSchemaTypeMutation", kind: "message", T: GrpcModifyAttributeSchemaTypeMutation, oneof: "mutation" },
    { no: 10, name: "removeAttributeSchemaMutation", kind: "message", T: GrpcRemoveAttributeSchemaMutation, oneof: "mutation" },
    { no: 11, name: "setAttributeSchemaFilterableMutation", kind: "message", T: GrpcSetAttributeSchemaFilterableMutation, oneof: "mutation" },
    { no: 12, name: "setAttributeSchemaLocalizedMutation", kind: "message", T: GrpcSetAttributeSchemaLocalizedMutation, oneof: "mutation" },
    { no: 13, name: "setAttributeSchemaNullableMutation", kind: "message", T: GrpcSetAttributeSchemaNullableMutation, oneof: "mutation" },
    { no: 14, name: "setAttributeSchemaRepresentativeMutation", kind: "message", T: GrpcSetAttributeSchemaRepresentativeMutation, oneof: "mutation" },
    { no: 15, name: "setAttributeSchemaSortableMutation", kind: "message", T: GrpcSetAttributeSchemaSortableMutation, oneof: "mutation" },
    { no: 16, name: "setAttributeSchemaUniqueMutation", kind: "message", T: GrpcSetAttributeSchemaUniqueMutation, oneof: "mutation" },
    { no: 17, name: "setAttributeSchemaGloballyUniqueMutation", kind: "message", T: GrpcSetAttributeSchemaGloballyUniqueMutation, oneof: "mutation" },
    { no: 30, name: "createEntitySchemaMutation", kind: "message", T: GrpcCreateEntitySchemaMutation, oneof: "mutation" },
    { no: 31, name: "modifyEntitySchemaMutation", kind: "message", T: GrpcModifyEntitySchemaMutation, oneof: "mutation" },
    { no: 32, name: "modifyEntitySchemaNameMutation", kind: "message", T: GrpcModifyEntitySchemaNameMutation, oneof: "mutation" },
    { no: 33, name: "removeEntitySchemaMutation", kind: "message", T: GrpcRemoveEntitySchemaMutation, oneof: "mutation" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcLocalCatalogSchemaMutation {
    return new GrpcLocalCatalogSchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcLocalCatalogSchemaMutation {
    return new GrpcLocalCatalogSchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcLocalCatalogSchemaMutation {
    return new GrpcLocalCatalogSchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcLocalCatalogSchemaMutation | PlainMessage<GrpcLocalCatalogSchemaMutation> | undefined, b: GrpcLocalCatalogSchemaMutation | PlainMessage<GrpcLocalCatalogSchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcLocalCatalogSchemaMutation, a, b);
  }
}

/**
 * This structure encapsulates all mutations that needs to be executed on entire evitaDB level and not locally to
 * single catalog schema instance.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation
 */
export class GrpcTopLevelCatalogSchemaMutation extends Message<GrpcTopLevelCatalogSchemaMutation> {
  /**
   * The top level catalog mutation to be executed.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation.mutation
   */
  mutation: {
    /**
     * Mutation is responsible for setting up a new CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateCatalogSchemaMutation createCatalogSchemaMutation = 1;
     */
    value: GrpcCreateCatalogSchemaMutation;
    case: "createCatalogSchemaMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyCatalogSchemaNameMutation modifyCatalogSchemaNameMutation = 2;
     */
    value: GrpcModifyCatalogSchemaNameMutation;
    case: "modifyCatalogSchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing CatalogSchema.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveCatalogSchemaMutation removeCatalogSchemaMutation = 3;
     */
    value: GrpcRemoveCatalogSchemaMutation;
    case: "removeCatalogSchemaMutation";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcTopLevelCatalogSchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcTopLevelCatalogSchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "createCatalogSchemaMutation", kind: "message", T: GrpcCreateCatalogSchemaMutation, oneof: "mutation" },
    { no: 2, name: "modifyCatalogSchemaNameMutation", kind: "message", T: GrpcModifyCatalogSchemaNameMutation, oneof: "mutation" },
    { no: 3, name: "removeCatalogSchemaMutation", kind: "message", T: GrpcRemoveCatalogSchemaMutation, oneof: "mutation" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcTopLevelCatalogSchemaMutation {
    return new GrpcTopLevelCatalogSchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcTopLevelCatalogSchemaMutation {
    return new GrpcTopLevelCatalogSchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcTopLevelCatalogSchemaMutation {
    return new GrpcTopLevelCatalogSchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcTopLevelCatalogSchemaMutation | PlainMessage<GrpcTopLevelCatalogSchemaMutation> | undefined, b: GrpcTopLevelCatalogSchemaMutation | PlainMessage<GrpcTopLevelCatalogSchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcTopLevelCatalogSchemaMutation, a, b);
  }
}

