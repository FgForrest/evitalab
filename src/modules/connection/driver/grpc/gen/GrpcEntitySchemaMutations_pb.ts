// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file GrpcEntitySchemaMutations.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { GrpcCurrency, GrpcLocale } from "./GrpcEvitaDataTypes_pb.js";
import { GrpcEvolutionMode } from "./GrpcEnums_pb.js";

/**
 * Mutation is responsible for adding one or more currencies to a `EntitySchema.currencies` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAllowCurrencyInEntitySchemaMutation
 */
export class GrpcAllowCurrencyInEntitySchemaMutation extends Message<GrpcAllowCurrencyInEntitySchemaMutation> {
  /**
   * Set of all currencies that could be used for prices in entities of this type.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 1;
   */
  currencies: GrpcCurrency[] = [];

  constructor(data?: PartialMessage<GrpcAllowCurrencyInEntitySchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcAllowCurrencyInEntitySchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "currencies", kind: "message", T: GrpcCurrency, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcAllowCurrencyInEntitySchemaMutation {
    return new GrpcAllowCurrencyInEntitySchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcAllowCurrencyInEntitySchemaMutation {
    return new GrpcAllowCurrencyInEntitySchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcAllowCurrencyInEntitySchemaMutation {
    return new GrpcAllowCurrencyInEntitySchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcAllowCurrencyInEntitySchemaMutation | PlainMessage<GrpcAllowCurrencyInEntitySchemaMutation> | undefined, b: GrpcAllowCurrencyInEntitySchemaMutation | PlainMessage<GrpcAllowCurrencyInEntitySchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcAllowCurrencyInEntitySchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for adding one or more modes to a `EntitySchema.evolutionMode` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAllowEvolutionModeInEntitySchemaMutation
 */
export class GrpcAllowEvolutionModeInEntitySchemaMutation extends Message<GrpcAllowEvolutionModeInEntitySchemaMutation> {
  /**
   * Set of allowed evolution modes. These allow to specify how strict is evitaDB when unknown information is
   * presented to her for the first time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an error. This behaviour can be changed by this evolution mode, however.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionModes = 1;
   */
  evolutionModes: GrpcEvolutionMode[] = [];

  constructor(data?: PartialMessage<GrpcAllowEvolutionModeInEntitySchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcAllowEvolutionModeInEntitySchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "evolutionModes", kind: "enum", T: proto3.getEnumType(GrpcEvolutionMode), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcAllowEvolutionModeInEntitySchemaMutation {
    return new GrpcAllowEvolutionModeInEntitySchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcAllowEvolutionModeInEntitySchemaMutation {
    return new GrpcAllowEvolutionModeInEntitySchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcAllowEvolutionModeInEntitySchemaMutation {
    return new GrpcAllowEvolutionModeInEntitySchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcAllowEvolutionModeInEntitySchemaMutation | PlainMessage<GrpcAllowEvolutionModeInEntitySchemaMutation> | undefined, b: GrpcAllowEvolutionModeInEntitySchemaMutation | PlainMessage<GrpcAllowEvolutionModeInEntitySchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcAllowEvolutionModeInEntitySchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for adding one or more locales to a `EntitySchema.locales` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAllowLocaleInEntitySchemaMutation
 */
export class GrpcAllowLocaleInEntitySchemaMutation extends Message<GrpcAllowLocaleInEntitySchemaMutation> {
  /**
   * Set of all locales that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 1;
   */
  locales: GrpcLocale[] = [];

  constructor(data?: PartialMessage<GrpcAllowLocaleInEntitySchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcAllowLocaleInEntitySchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locales", kind: "message", T: GrpcLocale, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcAllowLocaleInEntitySchemaMutation {
    return new GrpcAllowLocaleInEntitySchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcAllowLocaleInEntitySchemaMutation {
    return new GrpcAllowLocaleInEntitySchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcAllowLocaleInEntitySchemaMutation {
    return new GrpcAllowLocaleInEntitySchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcAllowLocaleInEntitySchemaMutation | PlainMessage<GrpcAllowLocaleInEntitySchemaMutation> | undefined, b: GrpcAllowLocaleInEntitySchemaMutation | PlainMessage<GrpcAllowLocaleInEntitySchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcAllowLocaleInEntitySchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for removing one or more currencies from a `EntitySchema.currencies` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDisallowCurrencyInEntitySchemaMutation
 */
export class GrpcDisallowCurrencyInEntitySchemaMutation extends Message<GrpcDisallowCurrencyInEntitySchemaMutation> {
  /**
   * Set of all currencies that can't be used for prices in entities of this type.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 1;
   */
  currencies: GrpcCurrency[] = [];

  constructor(data?: PartialMessage<GrpcDisallowCurrencyInEntitySchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcDisallowCurrencyInEntitySchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "currencies", kind: "message", T: GrpcCurrency, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcDisallowCurrencyInEntitySchemaMutation {
    return new GrpcDisallowCurrencyInEntitySchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcDisallowCurrencyInEntitySchemaMutation {
    return new GrpcDisallowCurrencyInEntitySchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcDisallowCurrencyInEntitySchemaMutation {
    return new GrpcDisallowCurrencyInEntitySchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcDisallowCurrencyInEntitySchemaMutation | PlainMessage<GrpcDisallowCurrencyInEntitySchemaMutation> | undefined, b: GrpcDisallowCurrencyInEntitySchemaMutation | PlainMessage<GrpcDisallowCurrencyInEntitySchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcDisallowCurrencyInEntitySchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for removing one or more modes from a `EntitySchema.evolutionMode` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDisallowEvolutionModeInEntitySchemaMutation
 */
export class GrpcDisallowEvolutionModeInEntitySchemaMutation extends Message<GrpcDisallowEvolutionModeInEntitySchemaMutation> {
  /**
   * Set of forbidden evolution modes. These allow to specify how strict is evitaDB when unknown information is
   * presented to her for the first time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an error. This behaviour can be changed by this evolution mode, however.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionModes = 1;
   */
  evolutionModes: GrpcEvolutionMode[] = [];

  constructor(data?: PartialMessage<GrpcDisallowEvolutionModeInEntitySchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcDisallowEvolutionModeInEntitySchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "evolutionModes", kind: "enum", T: proto3.getEnumType(GrpcEvolutionMode), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcDisallowEvolutionModeInEntitySchemaMutation {
    return new GrpcDisallowEvolutionModeInEntitySchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcDisallowEvolutionModeInEntitySchemaMutation {
    return new GrpcDisallowEvolutionModeInEntitySchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcDisallowEvolutionModeInEntitySchemaMutation {
    return new GrpcDisallowEvolutionModeInEntitySchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcDisallowEvolutionModeInEntitySchemaMutation | PlainMessage<GrpcDisallowEvolutionModeInEntitySchemaMutation> | undefined, b: GrpcDisallowEvolutionModeInEntitySchemaMutation | PlainMessage<GrpcDisallowEvolutionModeInEntitySchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcDisallowEvolutionModeInEntitySchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for removing one or more locales from a `EntitySchema.locales` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcDisallowLocaleInEntitySchemaMutation
 */
export class GrpcDisallowLocaleInEntitySchemaMutation extends Message<GrpcDisallowLocaleInEntitySchemaMutation> {
  /**
   * Set of all locales that can't be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   *
   * @generated from field: repeated io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 1;
   */
  locales: GrpcLocale[] = [];

  constructor(data?: PartialMessage<GrpcDisallowLocaleInEntitySchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcDisallowLocaleInEntitySchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locales", kind: "message", T: GrpcLocale, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcDisallowLocaleInEntitySchemaMutation {
    return new GrpcDisallowLocaleInEntitySchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcDisallowLocaleInEntitySchemaMutation {
    return new GrpcDisallowLocaleInEntitySchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcDisallowLocaleInEntitySchemaMutation {
    return new GrpcDisallowLocaleInEntitySchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcDisallowLocaleInEntitySchemaMutation | PlainMessage<GrpcDisallowLocaleInEntitySchemaMutation> | undefined, b: GrpcDisallowLocaleInEntitySchemaMutation | PlainMessage<GrpcDisallowLocaleInEntitySchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcDisallowLocaleInEntitySchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting a `EntitySchema.deprecationNotice` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDeprecationNoticeMutation
 */
export class GrpcModifyEntitySchemaDeprecationNoticeMutation extends Message<GrpcModifyEntitySchemaDeprecationNoticeMutation> {
  /**
   * Deprecation notice contains information about planned removal of this entity schema from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 1;
   */
  deprecationNotice?: string;

  constructor(data?: PartialMessage<GrpcModifyEntitySchemaDeprecationNoticeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDeprecationNoticeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deprecationNotice", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcModifyEntitySchemaDeprecationNoticeMutation {
    return new GrpcModifyEntitySchemaDeprecationNoticeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcModifyEntitySchemaDeprecationNoticeMutation {
    return new GrpcModifyEntitySchemaDeprecationNoticeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcModifyEntitySchemaDeprecationNoticeMutation {
    return new GrpcModifyEntitySchemaDeprecationNoticeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcModifyEntitySchemaDeprecationNoticeMutation | PlainMessage<GrpcModifyEntitySchemaDeprecationNoticeMutation> | undefined, b: GrpcModifyEntitySchemaDeprecationNoticeMutation | PlainMessage<GrpcModifyEntitySchemaDeprecationNoticeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcModifyEntitySchemaDeprecationNoticeMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting a `EntitySchema.description` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDescriptionMutation
 */
export class GrpcModifyEntitySchemaDescriptionMutation extends Message<GrpcModifyEntitySchemaDescriptionMutation> {
  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 1;
   */
  description?: string;

  constructor(data?: PartialMessage<GrpcModifyEntitySchemaDescriptionMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcModifyEntitySchemaDescriptionMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcModifyEntitySchemaDescriptionMutation {
    return new GrpcModifyEntitySchemaDescriptionMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcModifyEntitySchemaDescriptionMutation {
    return new GrpcModifyEntitySchemaDescriptionMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcModifyEntitySchemaDescriptionMutation {
    return new GrpcModifyEntitySchemaDescriptionMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcModifyEntitySchemaDescriptionMutation | PlainMessage<GrpcModifyEntitySchemaDescriptionMutation> | undefined, b: GrpcModifyEntitySchemaDescriptionMutation | PlainMessage<GrpcModifyEntitySchemaDescriptionMutation> | undefined): boolean {
    return proto3.util.equals(GrpcModifyEntitySchemaDescriptionMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting a `EntitySchema.withGeneratedPrimaryKey` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation
 */
export class GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation extends Message<GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation> {
  /**
   * Whether primary keys of entities of this type will not be provided by the external systems and Evita
   * is responsible for generating unique primary keys for the entity on insertion.
   * 
   * Generated key is guaranteed to be unique, but may not represent continuous ascending series. Generated key
   * will be always greater than zero.
   *
   * @generated from field: bool withGeneratedPrimaryKey = 1;
   */
  withGeneratedPrimaryKey = false;

  constructor(data?: PartialMessage<GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "withGeneratedPrimaryKey", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation {
    return new GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation {
    return new GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation {
    return new GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation | PlainMessage<GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation> | undefined, b: GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation | PlainMessage<GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetEntitySchemaWithGeneratedPrimaryKeyMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting a `EntitySchema.withHierarchy` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithHierarchyMutation
 */
export class GrpcSetEntitySchemaWithHierarchyMutation extends Message<GrpcSetEntitySchemaWithHierarchyMutation> {
  /**
   * Whether entities of this type are organized in a tree like structure (hierarchy) where certain entities
   * are subordinate of other entities.
   * 
   * Entities may be organized in hierarchical fashion. That means that entity may refer to single parent entity and may be
   * referred by multiple child entities. Hierarchy is always composed of entities of same type.
   * Each entity must be part of at most single hierarchy (tree).
   * 
   * Hierarchy can limit returned entities by using filtering constraints `hierarchy_{reference name}_within`. It's also used for
   * computation of extra data - such as `hierarchyParents`.
   *
   * @generated from field: bool withHierarchy = 1;
   */
  withHierarchy = false;

  constructor(data?: PartialMessage<GrpcSetEntitySchemaWithHierarchyMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithHierarchyMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "withHierarchy", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetEntitySchemaWithHierarchyMutation {
    return new GrpcSetEntitySchemaWithHierarchyMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetEntitySchemaWithHierarchyMutation {
    return new GrpcSetEntitySchemaWithHierarchyMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetEntitySchemaWithHierarchyMutation {
    return new GrpcSetEntitySchemaWithHierarchyMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetEntitySchemaWithHierarchyMutation | PlainMessage<GrpcSetEntitySchemaWithHierarchyMutation> | undefined, b: GrpcSetEntitySchemaWithHierarchyMutation | PlainMessage<GrpcSetEntitySchemaWithHierarchyMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetEntitySchemaWithHierarchyMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting a `EntitySchema.withPrice` in `EntitySchema`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation
 */
export class GrpcSetEntitySchemaWithPriceMutation extends Message<GrpcSetEntitySchemaWithPriceMutation> {
  /**
   * Whether entities of this type holds price information.
   * 
   * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
   * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
   * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
   * customers.
   * 
   * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
   * `priceBetween`, and `priceInPriceLists` filtering constraints and also price
   * ordering of the entities. Additional requirements
   * `priceHistogram` and `priceType` can be used in query as well.
   *
   * @generated from field: bool withPrice = 1;
   */
  withPrice = false;

  /**
   * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * important to know that all prices will be converted to `Integer`, so any of the price values
   * (either with or without tax) must not ever exceed maximum limits of `Integer` type when scaling
   * the number by the power of ten using `indexedPricePlaces` as exponent.
   *
   * @generated from field: int32 indexedPricePlaces = 2;
   */
  indexedPricePlaces = 0;

  constructor(data?: PartialMessage<GrpcSetEntitySchemaWithPriceMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "withPrice", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "indexedPricePlaces", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetEntitySchemaWithPriceMutation {
    return new GrpcSetEntitySchemaWithPriceMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetEntitySchemaWithPriceMutation {
    return new GrpcSetEntitySchemaWithPriceMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetEntitySchemaWithPriceMutation {
    return new GrpcSetEntitySchemaWithPriceMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetEntitySchemaWithPriceMutation | PlainMessage<GrpcSetEntitySchemaWithPriceMutation> | undefined, b: GrpcSetEntitySchemaWithPriceMutation | PlainMessage<GrpcSetEntitySchemaWithPriceMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetEntitySchemaWithPriceMutation, a, b);
  }
}

