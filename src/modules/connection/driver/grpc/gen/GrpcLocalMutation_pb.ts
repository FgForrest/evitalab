// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file GrpcLocalMutation.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { GrpcApplyDeltaAttributeMutation, GrpcRemoveAttributeMutation, GrpcUpsertAttributeMutation } from "./GrpcAttributeMutations_pb.js";
import { GrpcRemoveAssociatedDataMutation, GrpcUpsertAssociatedDataMutation } from "./GrpcAssociatedDataMutations_pb.js";
import { GrpcRemovePriceMutation, GrpcSetPriceInnerRecordHandlingMutation, GrpcUpsertPriceMutation } from "./GrpcPriceMutations_pb.js";
import { GrpcRemoveParentMutation, GrpcSetParentMutation } from "./GrpcEntityMutations_pb.js";
import { GrpcInsertReferenceMutation, GrpcReferenceAttributeMutation, GrpcRemoveReferenceGroupMutation, GrpcRemoveReferenceMutation, GrpcSetReferenceGroupMutation } from "./GrpcReferenceMutations_pb.js";

/**
 * Contains all possible local mutations to perform on entity.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcLocalMutation
 */
export class GrpcLocalMutation extends Message<GrpcLocalMutation> {
  /**
   * The mutation to be performed.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcLocalMutation.mutation
   */
  mutation: {
    /**
     * Increments or decrements existing numeric value by specified delta (negative number produces decremental of
     * existing number, positive one incrementation).
     * 
     * Allows to specify the number range that is tolerated for the value after delta application has been finished to
     * verify for example that number of items on stock doesn't go below zero.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcApplyDeltaAttributeMutation applyDeltaAttributeMutation = 1;
     */
    value: GrpcApplyDeltaAttributeMutation;
    case: "applyDeltaAttributeMutation";
  } | {
    /**
     * Upsert attribute mutation will either update existing attribute or create new one.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUpsertAttributeMutation upsertAttributeMutation = 2;
     */
    value: GrpcUpsertAttributeMutation;
    case: "upsertAttributeMutation";
  } | {
    /**
     * Remove attribute mutation will drop existing attribute - ie.generates new version of the attribute with tombstone on it.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeMutation removeAttributeMutation = 3;
     */
    value: GrpcRemoveAttributeMutation;
    case: "removeAttributeMutation";
  } | {
    /**
     * Upsert associatedData mutation will either update existing associatedData or create new one.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUpsertAssociatedDataMutation upsertAssociatedDataMutation = 4;
     */
    value: GrpcUpsertAssociatedDataMutation;
    case: "upsertAssociatedDataMutation";
  } | {
    /**
     * Remove associated data mutation will drop existing associatedData - ie.generates new version of the associated
     * data with tombstone on it.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveAssociatedDataMutation removeAssociatedDataMutation = 5;
     */
    value: GrpcRemoveAssociatedDataMutation;
    case: "removeAssociatedDataMutation";
  } | {
    /**
     * This mutation allows to create / update `price` of the entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUpsertPriceMutation upsertPriceMutation = 6;
     */
    value: GrpcUpsertPriceMutation;
    case: "upsertPriceMutation";
  } | {
    /**
     * This mutation allows to remove existing `price` of the entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemovePriceMutation removePriceMutation = 7;
     */
    value: GrpcRemovePriceMutation;
    case: "removePriceMutation";
  } | {
    /**
     * This mutation allows to set / remove `priceInnerRecordHandling` behaviour of the entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetPriceInnerRecordHandlingMutation setPriceInnerRecordHandlingMutation = 8;
     */
    value: GrpcSetPriceInnerRecordHandlingMutation;
    case: "setPriceInnerRecordHandlingMutation";
  } | {
    /**
     * This mutation allows to set `parent` in the `entity`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetParentMutation setParentMutation = 9;
     */
    value: GrpcSetParentMutation;
    case: "setParentMutation";
  } | {
    /**
     * This mutation allows to remove `parent` from the `entity`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveParentMutation removeParentMutation = 10;
     */
    value: GrpcRemoveParentMutation;
    case: "removeParentMutation";
  } | {
    /**
     * This mutation allows to create a reference in the entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcInsertReferenceMutation insertReferenceMutation = 11;
     */
    value: GrpcInsertReferenceMutation;
    case: "insertReferenceMutation";
  } | {
    /**
     * This mutation allows to remove a reference from the entity.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveReferenceMutation removeReferenceMutation = 12;
     */
    value: GrpcRemoveReferenceMutation;
    case: "removeReferenceMutation";
  } | {
    /**
     * This mutation allows to create / update group of the reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetReferenceGroupMutation setReferenceGroupMutation = 13;
     */
    value: GrpcSetReferenceGroupMutation;
    case: "setReferenceGroupMutation";
  } | {
    /**
     * This mutation allows to remove group in the reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveReferenceGroupMutation removeReferenceGroupMutation = 14;
     */
    value: GrpcRemoveReferenceGroupMutation;
    case: "removeReferenceGroupMutation";
  } | {
    /**
     * This mutation allows to create / update / remove attribute of the reference.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcReferenceAttributeMutation referenceAttributeMutation = 15;
     */
    value: GrpcReferenceAttributeMutation;
    case: "referenceAttributeMutation";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcLocalMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcLocalMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "applyDeltaAttributeMutation", kind: "message", T: GrpcApplyDeltaAttributeMutation, oneof: "mutation" },
    { no: 2, name: "upsertAttributeMutation", kind: "message", T: GrpcUpsertAttributeMutation, oneof: "mutation" },
    { no: 3, name: "removeAttributeMutation", kind: "message", T: GrpcRemoveAttributeMutation, oneof: "mutation" },
    { no: 4, name: "upsertAssociatedDataMutation", kind: "message", T: GrpcUpsertAssociatedDataMutation, oneof: "mutation" },
    { no: 5, name: "removeAssociatedDataMutation", kind: "message", T: GrpcRemoveAssociatedDataMutation, oneof: "mutation" },
    { no: 6, name: "upsertPriceMutation", kind: "message", T: GrpcUpsertPriceMutation, oneof: "mutation" },
    { no: 7, name: "removePriceMutation", kind: "message", T: GrpcRemovePriceMutation, oneof: "mutation" },
    { no: 8, name: "setPriceInnerRecordHandlingMutation", kind: "message", T: GrpcSetPriceInnerRecordHandlingMutation, oneof: "mutation" },
    { no: 9, name: "setParentMutation", kind: "message", T: GrpcSetParentMutation, oneof: "mutation" },
    { no: 10, name: "removeParentMutation", kind: "message", T: GrpcRemoveParentMutation, oneof: "mutation" },
    { no: 11, name: "insertReferenceMutation", kind: "message", T: GrpcInsertReferenceMutation, oneof: "mutation" },
    { no: 12, name: "removeReferenceMutation", kind: "message", T: GrpcRemoveReferenceMutation, oneof: "mutation" },
    { no: 13, name: "setReferenceGroupMutation", kind: "message", T: GrpcSetReferenceGroupMutation, oneof: "mutation" },
    { no: 14, name: "removeReferenceGroupMutation", kind: "message", T: GrpcRemoveReferenceGroupMutation, oneof: "mutation" },
    { no: 15, name: "referenceAttributeMutation", kind: "message", T: GrpcReferenceAttributeMutation, oneof: "mutation" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcLocalMutation {
    return new GrpcLocalMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcLocalMutation {
    return new GrpcLocalMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcLocalMutation {
    return new GrpcLocalMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcLocalMutation | PlainMessage<GrpcLocalMutation> | undefined, b: GrpcLocalMutation | PlainMessage<GrpcLocalMutation> | undefined): boolean {
    return proto3.util.equals(GrpcLocalMutation, a, b);
  }
}

