// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file GrpcAttributeSchemaMutations.proto (package io.evitadb.externalApi.grpc.generated, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, StringValue } from "@bufbuild/protobuf";
import { GrpcAttributeUniquenessType, GrpcEvitaDataType, GrpcGlobalAttributeUniquenessType } from "./GrpcEnums_pb.js";
import { GrpcEvitaValue } from "./GrpcEvitaDataTypes_pb.js";

/**
 * Mutation is responsible for setting up a new `AttributeSchema` in the `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCreateAttributeSchemaMutation
 */
export class GrpcCreateAttributeSchemaMutation extends Message<GrpcCreateAttributeSchemaMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 2;
   */
  description?: string;

  /**
   * Deprecation notice contains information about planned removal of this attribute from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 3;
   */
  deprecationNotice?: string;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4;
   */
  unique = GrpcAttributeUniquenessType.NOT_UNIQUE;

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: bool filterable = 5;
   */
  filterable = false;

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: bool sortable = 6;
   */
  sortable = false;

  /**
   * Localized attribute has to be ALWAYS used in connection with specific `locale`. In other
   * words - it cannot be stored unless associated locale is also provided.
   *
   * @generated from field: bool localized = 7;
   */
  localized = false;

  /**
   * 	When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
   * 	non-null checks upon upserting of the entity.
   *
   * @generated from field: bool nullable = 8;
   */
  nullable = false;

  /**
   * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
   * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
   * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
   * helpful to developers in quickly finding their way around the data. There should be very few representative
   * attributes in the entity type, and the unique ones are usually the best to choose.
   *
   * @generated from field: bool representative = 9;
   */
  representative = false;

  /**
   * Type of the attribute. Must be one of supported data types or its array.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;
   */
  type = GrpcEvitaDataType.STRING;

  /**
   * 	Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * 	significant to know that all values of this attribute will be converted to `Integer`, so the attribute
   * 	number must not ever exceed maximum limits of `Integer` type when scaling the number by the power
   * 	of ten using `indexedDecimalPlaces` as exponent.
   *
   * @generated from field: int32 indexedDecimalPlaces = 11;
   */
  indexedDecimalPlaces = 0;

  /**
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 12;
   */
  defaultValue?: GrpcEvitaValue;

  constructor(data?: PartialMessage<GrpcCreateAttributeSchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcCreateAttributeSchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "message", T: StringValue },
    { no: 3, name: "deprecationNotice", kind: "message", T: StringValue },
    { no: 4, name: "unique", kind: "enum", T: proto3.getEnumType(GrpcAttributeUniquenessType) },
    { no: 5, name: "filterable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "sortable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "localized", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "nullable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "representative", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "type", kind: "enum", T: proto3.getEnumType(GrpcEvitaDataType) },
    { no: 11, name: "indexedDecimalPlaces", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "defaultValue", kind: "message", T: GrpcEvitaValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcCreateAttributeSchemaMutation {
    return new GrpcCreateAttributeSchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcCreateAttributeSchemaMutation {
    return new GrpcCreateAttributeSchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcCreateAttributeSchemaMutation {
    return new GrpcCreateAttributeSchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcCreateAttributeSchemaMutation | PlainMessage<GrpcCreateAttributeSchemaMutation> | undefined, b: GrpcCreateAttributeSchemaMutation | PlainMessage<GrpcCreateAttributeSchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcCreateAttributeSchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting up a new `GlobalAttributeSchema` in the `CatalogSchema`.
 * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcCreateGlobalAttributeSchemaMutation
 */
export class GrpcCreateGlobalAttributeSchemaMutation extends Message<GrpcCreateGlobalAttributeSchemaMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 2;
   */
  description?: string;

  /**
   * Deprecation notice contains information about planned removal of this attribute from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 3;
   */
  deprecationNotice?: string;

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4;
   */
  unique = GrpcAttributeUniquenessType.NOT_UNIQUE;

  /**
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 5;
   */
  uniqueGlobally = GrpcGlobalAttributeUniquenessType.NOT_GLOBALLY_UNIQUE;

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: bool filterable = 6;
   */
  filterable = false;

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: bool sortable = 7;
   */
  sortable = false;

  /**
   * Localized attribute has to be ALWAYS used in connection with specific `locale`. In other
   * words - it cannot be stored unless associated locale is also provided.
   *
   * @generated from field: bool localized = 8;
   */
  localized = false;

  /**
   * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
   * non-null checks upon upserting of the entity.
   *
   * @generated from field: bool nullable = 9;
   */
  nullable = false;

  /**
   * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
   * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
   * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
   * helpful to developers in quickly finding their way around the data. There should be very few representative
   * attributes in the entity type, and the unique ones are usually the best to choose.
   *
   * @generated from field: bool representative = 10;
   */
  representative = false;

  /**
   * Type of the attribute. Must be one of supported data types or its array.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 11;
   */
  type = GrpcEvitaDataType.STRING;

  /**
   * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * significant to know that all values of this attribute will be converted to `Integer`, so the attribute
   * number must not ever exceed maximum limits of `Integer` type when scaling the number by the power
   * of ten using `indexedDecimalPlaces` as exponent.
   *
   * @generated from field: int32 indexedDecimalPlaces = 12;
   */
  indexedDecimalPlaces = 0;

  /**
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 13;
   */
  defaultValue?: GrpcEvitaValue;

  constructor(data?: PartialMessage<GrpcCreateGlobalAttributeSchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcCreateGlobalAttributeSchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "message", T: StringValue },
    { no: 3, name: "deprecationNotice", kind: "message", T: StringValue },
    { no: 4, name: "unique", kind: "enum", T: proto3.getEnumType(GrpcAttributeUniquenessType) },
    { no: 5, name: "uniqueGlobally", kind: "enum", T: proto3.getEnumType(GrpcGlobalAttributeUniquenessType) },
    { no: 6, name: "filterable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "sortable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "localized", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "nullable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "representative", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "type", kind: "enum", T: proto3.getEnumType(GrpcEvitaDataType) },
    { no: 12, name: "indexedDecimalPlaces", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "defaultValue", kind: "message", T: GrpcEvitaValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcCreateGlobalAttributeSchemaMutation {
    return new GrpcCreateGlobalAttributeSchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcCreateGlobalAttributeSchemaMutation {
    return new GrpcCreateGlobalAttributeSchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcCreateGlobalAttributeSchemaMutation {
    return new GrpcCreateGlobalAttributeSchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcCreateGlobalAttributeSchemaMutation | PlainMessage<GrpcCreateGlobalAttributeSchemaMutation> | undefined, b: GrpcCreateGlobalAttributeSchemaMutation | PlainMessage<GrpcCreateGlobalAttributeSchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcCreateGlobalAttributeSchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.defaultValue` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation
 */
export class GrpcModifyAttributeSchemaDefaultValueMutation extends Message<GrpcModifyAttributeSchemaDefaultValueMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 2;
   */
  defaultValue?: GrpcEvitaValue;

  constructor(data?: PartialMessage<GrpcModifyAttributeSchemaDefaultValueMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "defaultValue", kind: "message", T: GrpcEvitaValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcModifyAttributeSchemaDefaultValueMutation {
    return new GrpcModifyAttributeSchemaDefaultValueMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaDefaultValueMutation {
    return new GrpcModifyAttributeSchemaDefaultValueMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaDefaultValueMutation {
    return new GrpcModifyAttributeSchemaDefaultValueMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcModifyAttributeSchemaDefaultValueMutation | PlainMessage<GrpcModifyAttributeSchemaDefaultValueMutation> | undefined, b: GrpcModifyAttributeSchemaDefaultValueMutation | PlainMessage<GrpcModifyAttributeSchemaDefaultValueMutation> | undefined): boolean {
    return proto3.util.equals(GrpcModifyAttributeSchemaDefaultValueMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.deprecationNotice` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation
 */
export class GrpcModifyAttributeSchemaDeprecationNoticeMutation extends Message<GrpcModifyAttributeSchemaDeprecationNoticeMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Deprecation notice contains information about planned removal of this attribute from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   *
   * @generated from field: google.protobuf.StringValue deprecationNotice = 2;
   */
  deprecationNotice?: string;

  constructor(data?: PartialMessage<GrpcModifyAttributeSchemaDeprecationNoticeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "deprecationNotice", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcModifyAttributeSchemaDeprecationNoticeMutation {
    return new GrpcModifyAttributeSchemaDeprecationNoticeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaDeprecationNoticeMutation {
    return new GrpcModifyAttributeSchemaDeprecationNoticeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaDeprecationNoticeMutation {
    return new GrpcModifyAttributeSchemaDeprecationNoticeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcModifyAttributeSchemaDeprecationNoticeMutation | PlainMessage<GrpcModifyAttributeSchemaDeprecationNoticeMutation> | undefined, b: GrpcModifyAttributeSchemaDeprecationNoticeMutation | PlainMessage<GrpcModifyAttributeSchemaDeprecationNoticeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcModifyAttributeSchemaDeprecationNoticeMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.description` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation
 */
export class GrpcModifyAttributeSchemaDescriptionMutation extends Message<GrpcModifyAttributeSchemaDescriptionMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   *
   * @generated from field: google.protobuf.StringValue description = 2;
   */
  description?: string;

  constructor(data?: PartialMessage<GrpcModifyAttributeSchemaDescriptionMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcModifyAttributeSchemaDescriptionMutation {
    return new GrpcModifyAttributeSchemaDescriptionMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaDescriptionMutation {
    return new GrpcModifyAttributeSchemaDescriptionMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaDescriptionMutation {
    return new GrpcModifyAttributeSchemaDescriptionMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcModifyAttributeSchemaDescriptionMutation | PlainMessage<GrpcModifyAttributeSchemaDescriptionMutation> | undefined, b: GrpcModifyAttributeSchemaDescriptionMutation | PlainMessage<GrpcModifyAttributeSchemaDescriptionMutation> | undefined): boolean {
    return proto3.util.equals(GrpcModifyAttributeSchemaDescriptionMutation, a, b);
  }
}

/**
 * Mutation is responsible for renaming an existing `AttributeSchema` in `EntitySchema` or `GlobalAttributeSchema` in `CatalogSchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation
 */
export class GrpcModifyAttributeSchemaNameMutation extends Message<GrpcModifyAttributeSchemaNameMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * New name of the attribute the mutation is targeting.
   *
   * @generated from field: string newName = 2;
   */
  newName = "";

  constructor(data?: PartialMessage<GrpcModifyAttributeSchemaNameMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "newName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcModifyAttributeSchemaNameMutation {
    return new GrpcModifyAttributeSchemaNameMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaNameMutation {
    return new GrpcModifyAttributeSchemaNameMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaNameMutation {
    return new GrpcModifyAttributeSchemaNameMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcModifyAttributeSchemaNameMutation | PlainMessage<GrpcModifyAttributeSchemaNameMutation> | undefined, b: GrpcModifyAttributeSchemaNameMutation | PlainMessage<GrpcModifyAttributeSchemaNameMutation> | undefined): boolean {
    return proto3.util.equals(GrpcModifyAttributeSchemaNameMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.type` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation
 */
export class GrpcModifyAttributeSchemaTypeMutation extends Message<GrpcModifyAttributeSchemaTypeMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Type of the attribute. Must be one of supported data types or its array.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 2;
   */
  type = GrpcEvitaDataType.STRING;

  /**
   * Determines how many fractional places are important when entities are compared during filtering or sorting.
   *
   * @generated from field: int32 indexedDecimalPlaces = 3;
   */
  indexedDecimalPlaces = 0;

  constructor(data?: PartialMessage<GrpcModifyAttributeSchemaTypeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(GrpcEvitaDataType) },
    { no: 3, name: "indexedDecimalPlaces", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcModifyAttributeSchemaTypeMutation {
    return new GrpcModifyAttributeSchemaTypeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaTypeMutation {
    return new GrpcModifyAttributeSchemaTypeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcModifyAttributeSchemaTypeMutation {
    return new GrpcModifyAttributeSchemaTypeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcModifyAttributeSchemaTypeMutation | PlainMessage<GrpcModifyAttributeSchemaTypeMutation> | undefined, b: GrpcModifyAttributeSchemaTypeMutation | PlainMessage<GrpcModifyAttributeSchemaTypeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcModifyAttributeSchemaTypeMutation, a, b);
  }
}

/**
 * Mutation is responsible for removing an existing `AttributeSchema` in the `EntitySchema` or `GlobalAttributeSchema`
 * in the `CatalogSchema`. Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation
 */
export class GrpcRemoveAttributeSchemaMutation extends Message<GrpcRemoveAttributeSchemaMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GrpcRemoveAttributeSchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcRemoveAttributeSchemaMutation {
    return new GrpcRemoveAttributeSchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcRemoveAttributeSchemaMutation {
    return new GrpcRemoveAttributeSchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcRemoveAttributeSchemaMutation {
    return new GrpcRemoveAttributeSchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcRemoveAttributeSchemaMutation | PlainMessage<GrpcRemoveAttributeSchemaMutation> | undefined, b: GrpcRemoveAttributeSchemaMutation | PlainMessage<GrpcRemoveAttributeSchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcRemoveAttributeSchemaMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.filterable` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation
 */
export class GrpcSetAttributeSchemaFilterableMutation extends Message<GrpcSetAttributeSchemaFilterableMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: bool filterable = 2;
   */
  filterable = false;

  constructor(data?: PartialMessage<GrpcSetAttributeSchemaFilterableMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "filterable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetAttributeSchemaFilterableMutation {
    return new GrpcSetAttributeSchemaFilterableMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaFilterableMutation {
    return new GrpcSetAttributeSchemaFilterableMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaFilterableMutation {
    return new GrpcSetAttributeSchemaFilterableMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetAttributeSchemaFilterableMutation | PlainMessage<GrpcSetAttributeSchemaFilterableMutation> | undefined, b: GrpcSetAttributeSchemaFilterableMutation | PlainMessage<GrpcSetAttributeSchemaFilterableMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetAttributeSchemaFilterableMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `GlobalAttributeSchema.uniqueGlobally` in `EntitySchema`.
 * Mutation can be used for altering also the existing `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaGloballyUniqueMutation
 */
export class GrpcSetAttributeSchemaGloballyUniqueMutation extends Message<GrpcSetAttributeSchemaGloballyUniqueMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 2;
   */
  uniqueGlobally = GrpcGlobalAttributeUniquenessType.NOT_GLOBALLY_UNIQUE;

  constructor(data?: PartialMessage<GrpcSetAttributeSchemaGloballyUniqueMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaGloballyUniqueMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "uniqueGlobally", kind: "enum", T: proto3.getEnumType(GrpcGlobalAttributeUniquenessType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetAttributeSchemaGloballyUniqueMutation {
    return new GrpcSetAttributeSchemaGloballyUniqueMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaGloballyUniqueMutation {
    return new GrpcSetAttributeSchemaGloballyUniqueMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaGloballyUniqueMutation {
    return new GrpcSetAttributeSchemaGloballyUniqueMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetAttributeSchemaGloballyUniqueMutation | PlainMessage<GrpcSetAttributeSchemaGloballyUniqueMutation> | undefined, b: GrpcSetAttributeSchemaGloballyUniqueMutation | PlainMessage<GrpcSetAttributeSchemaGloballyUniqueMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetAttributeSchemaGloballyUniqueMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.localized` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation
 */
export class GrpcSetAttributeSchemaLocalizedMutation extends Message<GrpcSetAttributeSchemaLocalizedMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Localized attribute has to be ALWAYS used in connection with specific `locale`. In other
   * words - it cannot be stored unless associated locale is also provided.
   *
   * @generated from field: bool localized = 2;
   */
  localized = false;

  constructor(data?: PartialMessage<GrpcSetAttributeSchemaLocalizedMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "localized", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetAttributeSchemaLocalizedMutation {
    return new GrpcSetAttributeSchemaLocalizedMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaLocalizedMutation {
    return new GrpcSetAttributeSchemaLocalizedMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaLocalizedMutation {
    return new GrpcSetAttributeSchemaLocalizedMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetAttributeSchemaLocalizedMutation | PlainMessage<GrpcSetAttributeSchemaLocalizedMutation> | undefined, b: GrpcSetAttributeSchemaLocalizedMutation | PlainMessage<GrpcSetAttributeSchemaLocalizedMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetAttributeSchemaLocalizedMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.nullable` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation
 */
export class GrpcSetAttributeSchemaNullableMutation extends Message<GrpcSetAttributeSchemaNullableMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
   * non-null checks upon upserting of the entity.
   *
   * @generated from field: bool nullable = 2;
   */
  nullable = false;

  constructor(data?: PartialMessage<GrpcSetAttributeSchemaNullableMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "nullable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetAttributeSchemaNullableMutation {
    return new GrpcSetAttributeSchemaNullableMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaNullableMutation {
    return new GrpcSetAttributeSchemaNullableMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaNullableMutation {
    return new GrpcSetAttributeSchemaNullableMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetAttributeSchemaNullableMutation | PlainMessage<GrpcSetAttributeSchemaNullableMutation> | undefined, b: GrpcSetAttributeSchemaNullableMutation | PlainMessage<GrpcSetAttributeSchemaNullableMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetAttributeSchemaNullableMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.representative` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation
 */
export class GrpcSetAttributeSchemaRepresentativeMutation extends Message<GrpcSetAttributeSchemaRepresentativeMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * When attribute is representative, its values may be missing in the entities. Otherwise, the system will enforce
   * non-null checks upon upserting of the entity.
   *
   * @generated from field: bool representative = 2;
   */
  representative = false;

  constructor(data?: PartialMessage<GrpcSetAttributeSchemaRepresentativeMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "representative", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetAttributeSchemaRepresentativeMutation {
    return new GrpcSetAttributeSchemaRepresentativeMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaRepresentativeMutation {
    return new GrpcSetAttributeSchemaRepresentativeMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaRepresentativeMutation {
    return new GrpcSetAttributeSchemaRepresentativeMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetAttributeSchemaRepresentativeMutation | PlainMessage<GrpcSetAttributeSchemaRepresentativeMutation> | undefined, b: GrpcSetAttributeSchemaRepresentativeMutation | PlainMessage<GrpcSetAttributeSchemaRepresentativeMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetAttributeSchemaRepresentativeMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.sortable` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation
 */
export class GrpcSetAttributeSchemaSortableMutation extends Message<GrpcSetAttributeSchemaSortableMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index.
   *
   * @generated from field: bool sortable = 2;
   */
  sortable = false;

  constructor(data?: PartialMessage<GrpcSetAttributeSchemaSortableMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sortable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetAttributeSchemaSortableMutation {
    return new GrpcSetAttributeSchemaSortableMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaSortableMutation {
    return new GrpcSetAttributeSchemaSortableMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaSortableMutation {
    return new GrpcSetAttributeSchemaSortableMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetAttributeSchemaSortableMutation | PlainMessage<GrpcSetAttributeSchemaSortableMutation> | undefined, b: GrpcSetAttributeSchemaSortableMutation | PlainMessage<GrpcSetAttributeSchemaSortableMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetAttributeSchemaSortableMutation, a, b);
  }
}

/**
 * Mutation is responsible for setting value to a `AttributeSchema.unique` in `EntitySchema`.
 * Mutation can be used for altering also the existing `AttributeSchema` or `GlobalAttributeSchema` alone.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation
 */
export class GrpcSetAttributeSchemaUniqueMutation extends Message<GrpcSetAttributeSchemaUniqueMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   *
   * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 2;
   */
  unique = GrpcAttributeUniquenessType.NOT_UNIQUE;

  constructor(data?: PartialMessage<GrpcSetAttributeSchemaUniqueMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "unique", kind: "enum", T: proto3.getEnumType(GrpcAttributeUniquenessType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcSetAttributeSchemaUniqueMutation {
    return new GrpcSetAttributeSchemaUniqueMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaUniqueMutation {
    return new GrpcSetAttributeSchemaUniqueMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcSetAttributeSchemaUniqueMutation {
    return new GrpcSetAttributeSchemaUniqueMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcSetAttributeSchemaUniqueMutation | PlainMessage<GrpcSetAttributeSchemaUniqueMutation> | undefined, b: GrpcSetAttributeSchemaUniqueMutation | PlainMessage<GrpcSetAttributeSchemaUniqueMutation> | undefined): boolean {
    return proto3.util.equals(GrpcSetAttributeSchemaUniqueMutation, a, b);
  }
}

/**
 * Mutation is responsible for introducing a `GlobalAttributeSchema` into an `EvitaSession`.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcUseGlobalAttributeSchemaMutation
 */
export class GrpcUseGlobalAttributeSchemaMutation extends Message<GrpcUseGlobalAttributeSchemaMutation> {
  /**
   * Name of the attribute the mutation is targeting.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GrpcUseGlobalAttributeSchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcUseGlobalAttributeSchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcUseGlobalAttributeSchemaMutation {
    return new GrpcUseGlobalAttributeSchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcUseGlobalAttributeSchemaMutation {
    return new GrpcUseGlobalAttributeSchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcUseGlobalAttributeSchemaMutation {
    return new GrpcUseGlobalAttributeSchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcUseGlobalAttributeSchemaMutation | PlainMessage<GrpcUseGlobalAttributeSchemaMutation> | undefined, b: GrpcUseGlobalAttributeSchemaMutation | PlainMessage<GrpcUseGlobalAttributeSchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcUseGlobalAttributeSchemaMutation, a, b);
  }
}

/**
 * Mutation of an attribute schema.
 *
 * @generated from message io.evitadb.externalApi.grpc.generated.GrpcAttributeSchemaMutation
 */
export class GrpcAttributeSchemaMutation extends Message<GrpcAttributeSchemaMutation> {
  /**
   * Type of the mutation.
   *
   * @generated from oneof io.evitadb.externalApi.grpc.generated.GrpcAttributeSchemaMutation.mutation
   */
  mutation: {
    /**
     * Mutation is responsible for setting up a new `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcCreateAttributeSchemaMutation createAttributeSchemaMutation = 3;
     */
    value: GrpcCreateAttributeSchemaMutation;
    case: "createAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for modifying a default value of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDefaultValueMutation modifyAttributeSchemaDefaultValueMutation = 4;
     */
    value: GrpcModifyAttributeSchemaDefaultValueMutation;
    case: "modifyAttributeSchemaDefaultValueMutation";
  } | {
    /**
     * Mutation is responsible for modifying a deprecation notice of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDeprecationNoticeMutation modifyAttributeSchemaDeprecationNoticeMutation = 5;
     */
    value: GrpcModifyAttributeSchemaDeprecationNoticeMutation;
    case: "modifyAttributeSchemaDeprecationNoticeMutation";
  } | {
    /**
     * Mutation is responsible for modifying a description of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaDescriptionMutation modifyAttributeSchemaDescriptionMutation = 6;
     */
    value: GrpcModifyAttributeSchemaDescriptionMutation;
    case: "modifyAttributeSchemaDescriptionMutation";
  } | {
    /**
     * Mutation is responsible for renaming an existing `AttributeSchema` in `EntitySchema` or `GlobalAttributeSchema` in `CatalogSchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaNameMutation modifyAttributeSchemaNameMutation = 7;
     */
    value: GrpcModifyAttributeSchemaNameMutation;
    case: "modifyAttributeSchemaNameMutation";
  } | {
    /**
     * Mutation is responsible for modifying a type of an existing `AttributeSchema` in the `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcModifyAttributeSchemaTypeMutation modifyAttributeSchemaTypeMutation = 8;
     */
    value: GrpcModifyAttributeSchemaTypeMutation;
    case: "modifyAttributeSchemaTypeMutation";
  } | {
    /**
     * Mutation is responsible for removing an existing `AttributeSchema` in the `EntitySchema` or `GlobalAttributeSchema`
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcRemoveAttributeSchemaMutation removeAttributeSchemaMutation = 9;
     */
    value: GrpcRemoveAttributeSchemaMutation;
    case: "removeAttributeSchemaMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.filterable` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaFilterableMutation setAttributeSchemaFilterableMutation = 10;
     */
    value: GrpcSetAttributeSchemaFilterableMutation;
    case: "setAttributeSchemaFilterableMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.localized` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaLocalizedMutation setAttributeSchemaLocalizedMutation = 11;
     */
    value: GrpcSetAttributeSchemaLocalizedMutation;
    case: "setAttributeSchemaLocalizedMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.nullable` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaNullableMutation setAttributeSchemaNullableMutation = 12;
     */
    value: GrpcSetAttributeSchemaNullableMutation;
    case: "setAttributeSchemaNullableMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.representative` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaRepresentativeMutation setAttributeSchemaRepresentativeMutation = 13;
     */
    value: GrpcSetAttributeSchemaRepresentativeMutation;
    case: "setAttributeSchemaRepresentativeMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.sortable` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaSortableMutation setAttributeSchemaSortableMutation = 14;
     */
    value: GrpcSetAttributeSchemaSortableMutation;
    case: "setAttributeSchemaSortableMutation";
  } | {
    /**
     * Mutation is responsible for setting value `AttributeSchema.unique` in `EntitySchema`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcSetAttributeSchemaUniqueMutation setAttributeSchemaUniqueMutation = 15;
     */
    value: GrpcSetAttributeSchemaUniqueMutation;
    case: "setAttributeSchemaUniqueMutation";
  } | {
    /**
     * Mutation is responsible for introducing a `GlobalAttributeSchema` into an `EvitaSession`.
     *
     * @generated from field: io.evitadb.externalApi.grpc.generated.GrpcUseGlobalAttributeSchemaMutation useGlobalAttributeSchemaMutation = 16;
     */
    value: GrpcUseGlobalAttributeSchemaMutation;
    case: "useGlobalAttributeSchemaMutation";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcAttributeSchemaMutation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "io.evitadb.externalApi.grpc.generated.GrpcAttributeSchemaMutation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "createAttributeSchemaMutation", kind: "message", T: GrpcCreateAttributeSchemaMutation, oneof: "mutation" },
    { no: 4, name: "modifyAttributeSchemaDefaultValueMutation", kind: "message", T: GrpcModifyAttributeSchemaDefaultValueMutation, oneof: "mutation" },
    { no: 5, name: "modifyAttributeSchemaDeprecationNoticeMutation", kind: "message", T: GrpcModifyAttributeSchemaDeprecationNoticeMutation, oneof: "mutation" },
    { no: 6, name: "modifyAttributeSchemaDescriptionMutation", kind: "message", T: GrpcModifyAttributeSchemaDescriptionMutation, oneof: "mutation" },
    { no: 7, name: "modifyAttributeSchemaNameMutation", kind: "message", T: GrpcModifyAttributeSchemaNameMutation, oneof: "mutation" },
    { no: 8, name: "modifyAttributeSchemaTypeMutation", kind: "message", T: GrpcModifyAttributeSchemaTypeMutation, oneof: "mutation" },
    { no: 9, name: "removeAttributeSchemaMutation", kind: "message", T: GrpcRemoveAttributeSchemaMutation, oneof: "mutation" },
    { no: 10, name: "setAttributeSchemaFilterableMutation", kind: "message", T: GrpcSetAttributeSchemaFilterableMutation, oneof: "mutation" },
    { no: 11, name: "setAttributeSchemaLocalizedMutation", kind: "message", T: GrpcSetAttributeSchemaLocalizedMutation, oneof: "mutation" },
    { no: 12, name: "setAttributeSchemaNullableMutation", kind: "message", T: GrpcSetAttributeSchemaNullableMutation, oneof: "mutation" },
    { no: 13, name: "setAttributeSchemaRepresentativeMutation", kind: "message", T: GrpcSetAttributeSchemaRepresentativeMutation, oneof: "mutation" },
    { no: 14, name: "setAttributeSchemaSortableMutation", kind: "message", T: GrpcSetAttributeSchemaSortableMutation, oneof: "mutation" },
    { no: 15, name: "setAttributeSchemaUniqueMutation", kind: "message", T: GrpcSetAttributeSchemaUniqueMutation, oneof: "mutation" },
    { no: 16, name: "useGlobalAttributeSchemaMutation", kind: "message", T: GrpcUseGlobalAttributeSchemaMutation, oneof: "mutation" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcAttributeSchemaMutation {
    return new GrpcAttributeSchemaMutation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcAttributeSchemaMutation {
    return new GrpcAttributeSchemaMutation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcAttributeSchemaMutation {
    return new GrpcAttributeSchemaMutation().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcAttributeSchemaMutation | PlainMessage<GrpcAttributeSchemaMutation> | undefined, b: GrpcAttributeSchemaMutation | PlainMessage<GrpcAttributeSchemaMutation> | undefined): boolean {
    return proto3.util.equals(GrpcAttributeSchemaMutation, a, b);
  }
}

